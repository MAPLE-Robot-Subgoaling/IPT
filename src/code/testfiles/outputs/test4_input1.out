 --- modulename: test4, funcname: <module>
test4.py(2): def main():
test4.py(23): main()
 --- modulename: test4, funcname: main
test4.py(4):     tempMag   = float(input("Please enter the temperature: ")) #Takes the magnitude(Size) of the temperature without a scale
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
test4.py(5):     tempScale = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ") #asks for what scale the user wants to use
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
test4.py(6):     FREEZE = 0 #degrees celsius
test4.py(7):     BOIL = 100 #Degrees celsius
test4.py(8):     KELVIN = "K"
test4.py(9):     CELCIUS = "C"
test4.py(11):     if tempScale == KELVIN:
test4.py(14):         tempConverted = tempMag #Keeps temperature as Celsius
test4.py(16):     if tempConverted <= 0:
test4.py(18):     elif tempConverted >= 100:
test4.py(21):         print("At this temperature, water is a liquid.")
At this temperature, water is a liquid.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
