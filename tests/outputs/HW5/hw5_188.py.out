 --- modulename: hw5_188, funcname: <module>
hw5_188.py(1): def main():
hw5_188.py(29): main()
 --- modulename: hw5_188, funcname: main
hw5_188.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_188.py(3):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_188.py(4):     outline = str(input("Please enter a symbol for the box outline: "))
Please enter a symbol for the box outline: hw5_188.py(5):     fill = str(input("Please enter a symbol for the box fill: "))
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_188.py(6):     cube =""
hw5_188.py(7):     outside = outline*width
hw5_188.py(8):     inner = fill*width
hw5_188.py(9):     if len(inner)>2:
hw5_188.py(10):         inner = inner[:0] + outline + inner[1:]
hw5_188.py(11):         inner = inner[:width-1] + outline 
hw5_188.py(12):     for i in range(0, width):
hw5_188.py(13):         cube=outside
hw5_188.py(12):     for i in range(0, width):
hw5_188.py(13):         cube=outside
hw5_188.py(12):     for i in range(0, width):
hw5_188.py(13):         cube=outside
hw5_188.py(12):     for i in range(0, width):
hw5_188.py(13):         cube=outside
hw5_188.py(12):     for i in range(0, width):
hw5_188.py(13):         cube=outside
hw5_188.py(12):     for i in range(0, width):
hw5_188.py(14):     if height>1:
hw5_188.py(15):         if height==2:
hw5_188.py(18):         elif height>2:
hw5_188.py(19):             for i in range(0, height):
hw5_188.py(20):                 cube=cube
hw5_188.py(21):                 if i ==0:
hw5_188.py(22):                     print (cube)
$$$$$
hw5_188.py(19):             for i in range(0, height):
hw5_188.py(20):                 cube=cube
hw5_188.py(21):                 if i ==0:
hw5_188.py(23):                 elif i!=0 and i!=height-1:
hw5_188.py(24):                     print(inner)
$###$
hw5_188.py(19):             for i in range(0, height):
hw5_188.py(20):                 cube=cube
hw5_188.py(21):                 if i ==0:
hw5_188.py(23):                 elif i!=0 and i!=height-1:
hw5_188.py(24):                     print(inner)
$###$
hw5_188.py(19):             for i in range(0, height):
hw5_188.py(20):                 cube=cube
hw5_188.py(21):                 if i ==0:
hw5_188.py(23):                 elif i!=0 and i!=height-1:
hw5_188.py(24):                     print(inner)
$###$
hw5_188.py(19):             for i in range(0, height):
hw5_188.py(20):                 cube=cube
hw5_188.py(21):                 if i ==0:
hw5_188.py(23):                 elif i!=0 and i!=height-1:
hw5_188.py(25):                 elif i == height-1:
hw5_188.py(26):                     print(cube)
$$$$$
hw5_188.py(19):             for i in range(0, height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
