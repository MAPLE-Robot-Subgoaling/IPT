 --- modulename: hw5_56, funcname: <module>
hw5_56.py(1): def main():
hw5_56.py(17): main()
 --- modulename: hw5_56, funcname: main
hw5_56.py(2):     width = int(input("Enter width: "))
Enter width:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_56.py(3):     height = int(input("Enter height: "))
Enter height: hw5_56.py(4):     outline = input("Enter symbol for outline: ")
Enter symbol for outline: hw5_56.py(5):     fill = input("Enter symbol for fill: ")
Enter symbol for fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_56.py(6):     box = [None]*height
hw5_56.py(7):     n = 0
hw5_56.py(8):     for i in box:
hw5_56.py(9):         box[n] = outline * width
hw5_56.py(10):         n = n + 1
hw5_56.py(8):     for i in box:
hw5_56.py(9):         box[n] = outline * width
hw5_56.py(10):         n = n + 1
hw5_56.py(8):     for i in box:
hw5_56.py(9):         box[n] = outline * width
hw5_56.py(10):         n = n + 1
hw5_56.py(8):     for i in box:
hw5_56.py(9):         box[n] = outline * width
hw5_56.py(10):         n = n + 1
hw5_56.py(8):     for i in box:
hw5_56.py(9):         box[n] = outline * width
hw5_56.py(10):         n = n + 1
hw5_56.py(8):     for i in box:
hw5_56.py(11):     for i in range(1, height-1):
hw5_56.py(12):         box[i] = outline + fill * (width - 2)
hw5_56.py(13):         if width >= 2:
hw5_56.py(14):             box[i] = box[i] + outline
hw5_56.py(11):     for i in range(1, height-1):
hw5_56.py(12):         box[i] = outline + fill * (width - 2)
hw5_56.py(13):         if width >= 2:
hw5_56.py(14):             box[i] = box[i] + outline
hw5_56.py(11):     for i in range(1, height-1):
hw5_56.py(12):         box[i] = outline + fill * (width - 2)
hw5_56.py(13):         if width >= 2:
hw5_56.py(14):             box[i] = box[i] + outline
hw5_56.py(11):     for i in range(1, height-1):
hw5_56.py(15):     for i in box:
hw5_56.py(16):         print(i)
$$$$$
hw5_56.py(15):     for i in box:
hw5_56.py(16):         print(i)
$###$
hw5_56.py(15):     for i in box:
hw5_56.py(16):         print(i)
$###$
hw5_56.py(15):     for i in box:
hw5_56.py(16):         print(i)
$###$
hw5_56.py(15):     for i in box:
hw5_56.py(16):         print(i)
$$$$$
hw5_56.py(15):     for i in box:
hw5_56.py(18): print()

 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
