 --- modulename: hw5_498, funcname: <module>
hw5_498.py(1): def main():
hw5_498.py(16): main()
 --- modulename: hw5_498, funcname: main
hw5_498.py(2):     width = input("Please enter the width of the box: ")
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_498.py(3):     width = int(width)
hw5_498.py(4):     height = input("Please enter the height of the box: ")
Please enter the height of the box: hw5_498.py(5):     height = int(height)
hw5_498.py(6):     middle = width - 2
hw5_498.py(7):     middle = int(middle)
hw5_498.py(8):     outline = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_498.py(9):     fill = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_498.py(10):     endLine = outline * width
hw5_498.py(11):     inside = outline + (fill * middle) + outline
hw5_498.py(12):     print(endLine)
$$$$$
hw5_498.py(13):     for line in range(0, height - 2):
hw5_498.py(14):         print(inside)
$###$
hw5_498.py(13):     for line in range(0, height - 2):
hw5_498.py(14):         print(inside)
$###$
hw5_498.py(13):     for line in range(0, height - 2):
hw5_498.py(14):         print(inside)
$###$
hw5_498.py(13):     for line in range(0, height - 2):
hw5_498.py(15):     print(endLine)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
