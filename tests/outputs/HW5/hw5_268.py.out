 --- modulename: hw5_268, funcname: <module>
hw5_268.py(1): def main():
hw5_268.py(12): main()
 --- modulename: hw5_268, funcname: main
hw5_268.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_268.py(3):     height  = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_268.py(4):     border = input("Please enter a symbol for the border of the box: ")
Please enter a symbol for the border of the box: hw5_268.py(5):     content = input("Please enter a symbol for what is in the box: ")
Please enter a symbol for what is in the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_268.py(6):     rows = [border * width, border + (content * (width - 2)) + border]
hw5_268.py(7):     for r in range(height):
hw5_268.py(8):         if r == 0 or r == height-1:
hw5_268.py(9):             print(rows[0])
$$$$$
hw5_268.py(7):     for r in range(height):
hw5_268.py(8):         if r == 0 or r == height-1:
hw5_268.py(11):             print(rows[1])
$###$
hw5_268.py(7):     for r in range(height):
hw5_268.py(8):         if r == 0 or r == height-1:
hw5_268.py(11):             print(rows[1])
$###$
hw5_268.py(7):     for r in range(height):
hw5_268.py(8):         if r == 0 or r == height-1:
hw5_268.py(11):             print(rows[1])
$###$
hw5_268.py(7):     for r in range(height):
hw5_268.py(8):         if r == 0 or r == height-1:
hw5_268.py(9):             print(rows[0])
$$$$$
hw5_268.py(7):     for r in range(height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
