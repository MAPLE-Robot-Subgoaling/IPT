 --- modulename: hw5_137, funcname: <module>
hw5_137.py(1): def main():
hw5_137.py(13): main()
 --- modulename: hw5_137, funcname: main
hw5_137.py(2): 	width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_137.py(3): 	height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_137.py(4): 	outerSymbol = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_137.py(5): 	fillSymbol = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_137.py(6): 	for h in range(height):
hw5_137.py(7): 		if h == 0 or h == height - 1:
hw5_137.py(8): 			s = outerSymbol
hw5_137.py(9): 			s *= width
hw5_137.py(12): 		print(s)
$$$$$
hw5_137.py(6): 	for h in range(height):
hw5_137.py(7): 		if h == 0 or h == height - 1:
hw5_137.py(11): 			s = outerSymbol + (fillSymbol * (width - 2)) + outerSymbol
hw5_137.py(12): 		print(s)
$###$
hw5_137.py(6): 	for h in range(height):
hw5_137.py(7): 		if h == 0 or h == height - 1:
hw5_137.py(11): 			s = outerSymbol + (fillSymbol * (width - 2)) + outerSymbol
hw5_137.py(12): 		print(s)
$###$
hw5_137.py(6): 	for h in range(height):
hw5_137.py(7): 		if h == 0 or h == height - 1:
hw5_137.py(11): 			s = outerSymbol + (fillSymbol * (width - 2)) + outerSymbol
hw5_137.py(12): 		print(s)
$###$
hw5_137.py(6): 	for h in range(height):
hw5_137.py(7): 		if h == 0 or h == height - 1:
hw5_137.py(8): 			s = outerSymbol
hw5_137.py(9): 			s *= width
hw5_137.py(12): 		print(s)
$$$$$
hw5_137.py(6): 	for h in range(height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
