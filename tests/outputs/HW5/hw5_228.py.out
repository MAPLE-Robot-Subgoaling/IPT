 --- modulename: hw5_228, funcname: <module>
hw5_228.py(1): def main():
hw5_228.py(21): main()
 --- modulename: hw5_228, funcname: main
hw5_228.py(2):     width = int(input("Please enter the width of the box:"))
Please enter the width of the box: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_228.py(3):     height = int(input("Please enter the height of the box:"))
Please enter the height of the box:hw5_228.py(4):     outlineSymbol = input("Please enter a symbol for the box outline:")
Please enter a symbol for the box outline:hw5_228.py(5):     fillSymbol = input("Please enter a symbol for the box fill:")
Please enter a symbol for the box fill: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_228.py(6):     topBottom = ""
hw5_228.py(7):     for x in range(0, width):
hw5_228.py(8):         topBottom += outlineSymbol
hw5_228.py(7):     for x in range(0, width):
hw5_228.py(8):         topBottom += outlineSymbol
hw5_228.py(7):     for x in range(0, width):
hw5_228.py(8):         topBottom += outlineSymbol
hw5_228.py(7):     for x in range(0, width):
hw5_228.py(8):         topBottom += outlineSymbol
hw5_228.py(7):     for x in range(0, width):
hw5_228.py(8):         topBottom += outlineSymbol
hw5_228.py(7):     for x in range(0, width):
hw5_228.py(9):     inner = ""
hw5_228.py(10):     if((width - 2) > 0):
hw5_228.py(11):         for x in range(0, width - 2):
hw5_228.py(12):             inner += fillSymbol
hw5_228.py(11):         for x in range(0, width - 2):
hw5_228.py(12):             inner += fillSymbol
hw5_228.py(11):         for x in range(0, width - 2):
hw5_228.py(12):             inner += fillSymbol
hw5_228.py(11):         for x in range(0, width - 2):
hw5_228.py(13):     if(height > 0):
hw5_228.py(14):         print(topBottom)
$$$$$
hw5_228.py(15):     if((height - 2) > 0):
hw5_228.py(16):         for x in range(0, height-2):
hw5_228.py(17):             inside = outlineSymbol + inner + outlineSymbol
hw5_228.py(18):             print(inside)
$###$
hw5_228.py(16):         for x in range(0, height-2):
hw5_228.py(17):             inside = outlineSymbol + inner + outlineSymbol
hw5_228.py(18):             print(inside)
$###$
hw5_228.py(16):         for x in range(0, height-2):
hw5_228.py(17):             inside = outlineSymbol + inner + outlineSymbol
hw5_228.py(18):             print(inside)
$###$
hw5_228.py(16):         for x in range(0, height-2):
hw5_228.py(19):     if(height > 1):   
hw5_228.py(20):         print(topBottom)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
