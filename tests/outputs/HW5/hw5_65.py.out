 --- modulename: hw5_65, funcname: <module>
hw5_65.py(1): def main():
hw5_65.py(13): main()
 --- modulename: hw5_65, funcname: main
hw5_65.py(2):     width = int(input("Please enter the width of the box:"))
Please enter the width of the box: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_65.py(3):     height = int(input("Please enter the height of the box:"))
Please enter the height of the box:hw5_65.py(4):     outSymbol = input("Please enter a symbol for the box outline:")
Please enter a symbol for the box outline:hw5_65.py(5):     fillSymbol = input("Please enter a symbol for the box fill:")
Please enter a symbol for the box fill: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_65.py(6):     for i in range(0,height):
hw5_65.py(7):         wSymbol = outSymbol * width
hw5_65.py(8):         hSymbol = outSymbol + (fillSymbol * (width-2)) + outSymbol
hw5_65.py(9):         if i == 0 or i == height-1:
hw5_65.py(10):             print(wSymbol)
$$$$$
hw5_65.py(6):     for i in range(0,height):
hw5_65.py(7):         wSymbol = outSymbol * width
hw5_65.py(8):         hSymbol = outSymbol + (fillSymbol * (width-2)) + outSymbol
hw5_65.py(9):         if i == 0 or i == height-1:
hw5_65.py(12):             print(hSymbol)
$###$
hw5_65.py(6):     for i in range(0,height):
hw5_65.py(7):         wSymbol = outSymbol * width
hw5_65.py(8):         hSymbol = outSymbol + (fillSymbol * (width-2)) + outSymbol
hw5_65.py(9):         if i == 0 or i == height-1:
hw5_65.py(12):             print(hSymbol)
$###$
hw5_65.py(6):     for i in range(0,height):
hw5_65.py(7):         wSymbol = outSymbol * width
hw5_65.py(8):         hSymbol = outSymbol + (fillSymbol * (width-2)) + outSymbol
hw5_65.py(9):         if i == 0 or i == height-1:
hw5_65.py(12):             print(hSymbol)
$###$
hw5_65.py(6):     for i in range(0,height):
hw5_65.py(7):         wSymbol = outSymbol * width
hw5_65.py(8):         hSymbol = outSymbol + (fillSymbol * (width-2)) + outSymbol
hw5_65.py(9):         if i == 0 or i == height-1:
hw5_65.py(10):             print(wSymbol)
$$$$$
hw5_65.py(6):     for i in range(0,height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
