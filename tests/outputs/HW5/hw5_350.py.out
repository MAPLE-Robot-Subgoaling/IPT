 --- modulename: hw5_350, funcname: <module>
hw5_350.py(1): def main():
hw5_350.py(10): main()
 --- modulename: hw5_350, funcname: main
hw5_350.py(2):     width = int(input("Enter the width of the box: "))
Enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_350.py(3):     height = int(input("Enter the height of box: "))
Enter the height of box: hw5_350.py(4):     outline = input("Enter a symbol for box outline: ")
Enter a symbol for box outline: hw5_350.py(5):     fill = input("Enter a symbol to fill box: ")
Enter a symbol to fill box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_350.py(6):     print(outline*width)
$$$$$
hw5_350.py(7):     for row in range(height-2):
hw5_350.py(8):         print(outline+((width -2)*fill)+outline)
$###$
hw5_350.py(7):     for row in range(height-2):
hw5_350.py(8):         print(outline+((width -2)*fill)+outline)
$###$
hw5_350.py(7):     for row in range(height-2):
hw5_350.py(8):         print(outline+((width -2)*fill)+outline)
$###$
hw5_350.py(7):     for row in range(height-2):
hw5_350.py(9):     print(outline*width)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
