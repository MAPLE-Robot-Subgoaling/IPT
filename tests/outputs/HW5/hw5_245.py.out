 --- modulename: hw5_245, funcname: <module>
hw5_245.py(1): def main():
hw5_245.py(18): main()
 --- modulename: hw5_245, funcname: main
hw5_245.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_245.py(3):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_245.py(4):     outline = str(input("Please enter a symbol for the box outline: "))
Please enter a symbol for the box outline: hw5_245.py(5):     fill = str(input("Please enter a symbox for the box fill: "))
Please enter a symbox for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_245.py(6):     for index in range(height):
hw5_245.py(7):         line = ""
hw5_245.py(8):         if(index == 0 or index == height - 1):
hw5_245.py(9):             for number in range(width):
hw5_245.py(10):                 line = line + outline
hw5_245.py(9):             for number in range(width):
hw5_245.py(10):                 line = line + outline
hw5_245.py(9):             for number in range(width):
hw5_245.py(10):                 line = line + outline
hw5_245.py(9):             for number in range(width):
hw5_245.py(10):                 line = line + outline
hw5_245.py(9):             for number in range(width):
hw5_245.py(10):                 line = line + outline
hw5_245.py(9):             for number in range(width):
hw5_245.py(11):         if(index != 0 and index != height - 1):
hw5_245.py(17):         print(line)
$$$$$
hw5_245.py(6):     for index in range(height):
hw5_245.py(7):         line = ""
hw5_245.py(8):         if(index == 0 or index == height - 1):
hw5_245.py(11):         if(index != 0 and index != height - 1):
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(14):                     line = line + outline
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(16):                     line = line + fill
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(16):                     line = line + fill
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(16):                     line = line + fill
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(14):                     line = line + outline
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(12):             for number in range(width):
hw5_245.py(17):         print(line)
$###$
hw5_245.py(6):     for index in range(height):
hw5_245.py(7):         line = ""
hw5_245.py(8):         if(index == 0 or index == height - 1):
hw5_245.py(11):         if(index != 0 and index != height - 1):
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(14):                     line = line + outline
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(16):                     line = line + fill
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(16):                     line = line + fill
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(16):                     line = line + fill
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(14):                     line = line + outline
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(12):             for number in range(width):
hw5_245.py(17):         print(line)
$###$
hw5_245.py(6):     for index in range(height):
hw5_245.py(7):         line = ""
hw5_245.py(8):         if(index == 0 or index == height - 1):
hw5_245.py(11):         if(index != 0 and index != height - 1):
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(14):                     line = line + outline
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(16):                     line = line + fill
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(16):                     line = line + fill
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(16):                     line = line + fill
hw5_245.py(12):             for number in range(width):
hw5_245.py(13):                 if(number == 0 or number == width - 1):
hw5_245.py(14):                     line = line + outline
hw5_245.py(15):                 if(number != 0 and number != width - 1):
hw5_245.py(12):             for number in range(width):
hw5_245.py(17):         print(line)
$###$
hw5_245.py(6):     for index in range(height):
hw5_245.py(7):         line = ""
hw5_245.py(8):         if(index == 0 or index == height - 1):
hw5_245.py(9):             for number in range(width):
hw5_245.py(10):                 line = line + outline
hw5_245.py(9):             for number in range(width):
hw5_245.py(10):                 line = line + outline
hw5_245.py(9):             for number in range(width):
hw5_245.py(10):                 line = line + outline
hw5_245.py(9):             for number in range(width):
hw5_245.py(10):                 line = line + outline
hw5_245.py(9):             for number in range(width):
hw5_245.py(10):                 line = line + outline
hw5_245.py(9):             for number in range(width):
hw5_245.py(11):         if(index != 0 and index != height - 1):
hw5_245.py(17):         print(line)
$$$$$
hw5_245.py(6):     for index in range(height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
