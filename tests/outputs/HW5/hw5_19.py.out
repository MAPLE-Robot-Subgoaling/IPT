 --- modulename: hw5_19, funcname: <module>
hw5_19.py(1): def main():
hw5_19.py(15): main()
 --- modulename: hw5_19, funcname: main
hw5_19.py(2):     print("Welcome to the box designer.")
Welcome to the box designer.
hw5_19.py(3):     width=int(input("Please enter a positive width of the box: "))
Please enter a positive width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_19.py(4):     height=int(input("Please enter a positive height of the box: "))
Please enter a positive height of the box: hw5_19.py(5):     outerSymbol=input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_19.py(6):     innerSymbol=input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_19.py(7):     for h in range(0,height):
hw5_19.py(8):         stringLine=''
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(14):         print(stringLine)
^^^^^^^^
hw5_19.py(7):     for h in range(0,height):
hw5_19.py(8):         stringLine=''
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(14):         print(stringLine)
^@@@@@@^
hw5_19.py(7):     for h in range(0,height):
hw5_19.py(8):         stringLine=''
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(14):         print(stringLine)
^@@@@@@^
hw5_19.py(7):     for h in range(0,height):
hw5_19.py(8):         stringLine=''
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(13):                 stringLine=stringLine+innerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(14):         print(stringLine)
^@@@@@@^
hw5_19.py(7):     for h in range(0,height):
hw5_19.py(8):         stringLine=''
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(10):             if (h == 0 or h == height-1 or w == 0 or w == width-1):
hw5_19.py(11):                 stringLine=stringLine+outerSymbol
hw5_19.py(9):         for w in range(0,width):
hw5_19.py(14):         print(stringLine)
^^^^^^^^
hw5_19.py(7):     for h in range(0,height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
