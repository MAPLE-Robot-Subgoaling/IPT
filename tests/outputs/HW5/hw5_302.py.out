 --- modulename: hw5_302, funcname: <module>
hw5_302.py(1): def main():
hw5_302.py(11): main()
 --- modulename: hw5_302, funcname: main
hw5_302.py(2):     w_Box = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_302.py(3):     h_Box = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_302.py(4):     sym_Box = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_302.py(5):     fill_Box = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_302.py(6):     for b in range(h_Box+1):
hw5_302.py(7):         if b == 0 or b == h_Box:
hw5_302.py(8):             print(sym_Box * w_Box)
$$$$$
hw5_302.py(6):     for b in range(h_Box+1):
hw5_302.py(7):         if b == 0 or b == h_Box:
hw5_302.py(9):         elif b > 0 and b < h_Box-1:
hw5_302.py(10):             print(sym_Box + (fill_Box) * (w_Box - 2) + sym_Box)
$###$
hw5_302.py(6):     for b in range(h_Box+1):
hw5_302.py(7):         if b == 0 or b == h_Box:
hw5_302.py(9):         elif b > 0 and b < h_Box-1:
hw5_302.py(10):             print(sym_Box + (fill_Box) * (w_Box - 2) + sym_Box)
$###$
hw5_302.py(6):     for b in range(h_Box+1):
hw5_302.py(7):         if b == 0 or b == h_Box:
hw5_302.py(9):         elif b > 0 and b < h_Box-1:
hw5_302.py(10):             print(sym_Box + (fill_Box) * (w_Box - 2) + sym_Box)
$###$
hw5_302.py(6):     for b in range(h_Box+1):
hw5_302.py(7):         if b == 0 or b == h_Box:
hw5_302.py(9):         elif b > 0 and b < h_Box-1:
hw5_302.py(6):     for b in range(h_Box+1):
hw5_302.py(7):         if b == 0 or b == h_Box:
hw5_302.py(8):             print(sym_Box * w_Box)
$$$$$
hw5_302.py(6):     for b in range(h_Box+1):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
