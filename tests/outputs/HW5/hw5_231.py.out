 --- modulename: hw5_231, funcname: <module>
hw5_231.py(1): def main():
hw5_231.py(15): main()
 --- modulename: hw5_231, funcname: main
hw5_231.py(2):     boxWidth = 0
hw5_231.py(3):     boxHeight = 0
hw5_231.py(4):     outlineChar = ""
hw5_231.py(5):     fillChar = ""
hw5_231.py(6):     boxWidth = int(input("Please enter the width of the box:"))
Please enter the width of the box: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_231.py(7):     boxHeight = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_231.py(8):     outlineChar = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_231.py(9):     fillChar = input("Please enter a symbol for the box fill")
Please enter a symbol for the box fill --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_231.py(10):     for  i in range(0, boxHeight):
hw5_231.py(11):         if (i == 0) or (i ==  boxHeight - 1):
hw5_231.py(12):             print(outlineChar * boxWidth)
$$$$$
hw5_231.py(10):     for  i in range(0, boxHeight):
hw5_231.py(11):         if (i == 0) or (i ==  boxHeight - 1):
hw5_231.py(14):             print(outlineChar + (fillChar * (boxWidth-2)) + outlineChar)
$###$
hw5_231.py(10):     for  i in range(0, boxHeight):
hw5_231.py(11):         if (i == 0) or (i ==  boxHeight - 1):
hw5_231.py(14):             print(outlineChar + (fillChar * (boxWidth-2)) + outlineChar)
$###$
hw5_231.py(10):     for  i in range(0, boxHeight):
hw5_231.py(11):         if (i == 0) or (i ==  boxHeight - 1):
hw5_231.py(14):             print(outlineChar + (fillChar * (boxWidth-2)) + outlineChar)
$###$
hw5_231.py(10):     for  i in range(0, boxHeight):
hw5_231.py(11):         if (i == 0) or (i ==  boxHeight - 1):
hw5_231.py(12):             print(outlineChar * boxWidth)
$$$$$
hw5_231.py(10):     for  i in range(0, boxHeight):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
