 --- modulename: hw5_388, funcname: <module>
hw5_388.py(1): def main():
hw5_388.py(17): main()
 --- modulename: hw5_388, funcname: main
hw5_388.py(2):     width = int(input("Please input the width of the box: "))
Please input the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_388.py(3):     height= int(input("Please input the height of the box: "))
Please input the height of the box: hw5_388.py(4):     symout = input("Please input the symbol you want outlined: ")
Please input the symbol you want outlined: hw5_388.py(5):     symfil = input("Please input the symbol you want to use to fill in: ")
Please input the symbol you want to use to fill in:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_388.py(6):     for i in range (height,0, -1):
hw5_388.py(7):         if i  == height:
hw5_388.py(8):             top = symout*width
hw5_388.py(9):             print(top)
$$$$$
hw5_388.py(10):         if i >1 and i < height:
hw5_388.py(14):         if i == 1:
hw5_388.py(6):     for i in range (height,0, -1):
hw5_388.py(7):         if i  == height:
hw5_388.py(10):         if i >1 and i < height:
hw5_388.py(11):             newwidth = width-2
hw5_388.py(12):             middle = symfil*newwidth
hw5_388.py(13):             print(symout+middle+symout)
$###$
hw5_388.py(14):         if i == 1:
hw5_388.py(6):     for i in range (height,0, -1):
hw5_388.py(7):         if i  == height:
hw5_388.py(10):         if i >1 and i < height:
hw5_388.py(11):             newwidth = width-2
hw5_388.py(12):             middle = symfil*newwidth
hw5_388.py(13):             print(symout+middle+symout)
$###$
hw5_388.py(14):         if i == 1:
hw5_388.py(6):     for i in range (height,0, -1):
hw5_388.py(7):         if i  == height:
hw5_388.py(10):         if i >1 and i < height:
hw5_388.py(11):             newwidth = width-2
hw5_388.py(12):             middle = symfil*newwidth
hw5_388.py(13):             print(symout+middle+symout)
$###$
hw5_388.py(14):         if i == 1:
hw5_388.py(6):     for i in range (height,0, -1):
hw5_388.py(7):         if i  == height:
hw5_388.py(10):         if i >1 and i < height:
hw5_388.py(14):         if i == 1:
hw5_388.py(15):             bottom = symout * width
hw5_388.py(16):             print(bottom)
$$$$$
hw5_388.py(6):     for i in range (height,0, -1):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
