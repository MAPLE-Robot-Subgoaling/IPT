 --- modulename: hw5_339, funcname: <module>
hw5_339.py(1): def main():
hw5_339.py(19): main()
 --- modulename: hw5_339, funcname: main
hw5_339.py(2):     print("")

hw5_339.py(3):     boxWidth = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_339.py(4):     boxHeight = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_339.py(5):     outline = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_339.py(6):     fill = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_339.py(7):     boxTop = outline
hw5_339.py(8):     boxMiddle = ""
hw5_339.py(9):     for x in range(boxWidth - 1):
hw5_339.py(10):         boxTop = boxTop + outline
hw5_339.py(9):     for x in range(boxWidth - 1):
hw5_339.py(10):         boxTop = boxTop + outline
hw5_339.py(9):     for x in range(boxWidth - 1):
hw5_339.py(10):         boxTop = boxTop + outline
hw5_339.py(9):     for x in range(boxWidth - 1):
hw5_339.py(10):         boxTop = boxTop + outline
hw5_339.py(9):     for x in range(boxWidth - 1):
hw5_339.py(11):     for x in range(boxWidth - 2):
hw5_339.py(12):         boxMiddle = boxMiddle + fill
hw5_339.py(11):     for x in range(boxWidth - 2):
hw5_339.py(12):         boxMiddle = boxMiddle + fill
hw5_339.py(11):     for x in range(boxWidth - 2):
hw5_339.py(12):         boxMiddle = boxMiddle + fill
hw5_339.py(11):     for x in range(boxWidth - 2):
hw5_339.py(13):     boxMiddle = outline + boxMiddle + outline
hw5_339.py(14):     print(boxTop)
$$$$$
hw5_339.py(15):     for x in range(boxHeight - 2):
hw5_339.py(16):         print(boxMiddle)
$###$
hw5_339.py(15):     for x in range(boxHeight - 2):
hw5_339.py(16):         print(boxMiddle)
$###$
hw5_339.py(15):     for x in range(boxHeight - 2):
hw5_339.py(16):         print(boxMiddle)
$###$
hw5_339.py(15):     for x in range(boxHeight - 2):
hw5_339.py(17):     if boxHeight != 1:
hw5_339.py(18):         print(boxTop)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
