 --- modulename: hw5_283, funcname: <module>
hw5_283.py(1): def main():
hw5_283.py(11): main()
 --- modulename: hw5_283, funcname: main
hw5_283.py(2):     width = int(input("please enter the width of the box: "))
please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_283.py(3):     height = int(input("please enter the height of the box: "))
please enter the height of the box: hw5_283.py(4):     boxOutline = (input("please enter a symbol for the box outline: "))
please enter a symbol for the box outline: hw5_283.py(5):     boxFilling = (input("please enter a symbol for the box fill: "))
please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_283.py(6):     for i in range(height):
hw5_283.py(7):         if i == 0 or i == (height-1):
hw5_283.py(8):             print((boxOutline)*(width))
$$$$$
hw5_283.py(6):     for i in range(height):
hw5_283.py(7):         if i == 0 or i == (height-1):
hw5_283.py(10):             print((boxOutline)+(boxFilling * (width - 2))+(boxOutline))
$###$
hw5_283.py(6):     for i in range(height):
hw5_283.py(7):         if i == 0 or i == (height-1):
hw5_283.py(10):             print((boxOutline)+(boxFilling * (width - 2))+(boxOutline))
$###$
hw5_283.py(6):     for i in range(height):
hw5_283.py(7):         if i == 0 or i == (height-1):
hw5_283.py(10):             print((boxOutline)+(boxFilling * (width - 2))+(boxOutline))
$###$
hw5_283.py(6):     for i in range(height):
hw5_283.py(7):         if i == 0 or i == (height-1):
hw5_283.py(8):             print((boxOutline)*(width))
$$$$$
hw5_283.py(6):     for i in range(height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
