 --- modulename: hw5_34, funcname: <module>
hw5_34.py(1): def main():
hw5_34.py(16): main()
 --- modulename: hw5_34, funcname: main
hw5_34.py(2):     width = int(input("Please enter the width of your box: "))
Please enter the width of your box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_34.py(3):     height = int(input("Please enter the height of your box: "))
Please enter the height of your box: hw5_34.py(4):     outside = input("Please enter the symbol you'd like as the outline your box: ")
Please enter the symbol you'd like as the outline your box: hw5_34.py(5):     inside = input("Please enter the symbol you want to fill your box: ")
Please enter the symbol you want to fill your box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_34.py(6):     if height != 1 and width != 1:
hw5_34.py(7):         for x in range(height):
hw5_34.py(8):             if x == 0:
hw5_34.py(9):                 print (outside * width)
$$$$$
hw5_34.py(10):             if 0 < x < height:
hw5_34.py(12):             if x == height - 1:
hw5_34.py(7):         for x in range(height):
hw5_34.py(8):             if x == 0:
hw5_34.py(10):             if 0 < x < height:
hw5_34.py(11):                 print (outside + inside * (width - 2) + outside)
$###$
hw5_34.py(12):             if x == height - 1:
hw5_34.py(7):         for x in range(height):
hw5_34.py(8):             if x == 0:
hw5_34.py(10):             if 0 < x < height:
hw5_34.py(11):                 print (outside + inside * (width - 2) + outside)
$###$
hw5_34.py(12):             if x == height - 1:
hw5_34.py(7):         for x in range(height):
hw5_34.py(8):             if x == 0:
hw5_34.py(10):             if 0 < x < height:
hw5_34.py(11):                 print (outside + inside * (width - 2) + outside)
$###$
hw5_34.py(12):             if x == height - 1:
hw5_34.py(7):         for x in range(height):
hw5_34.py(8):             if x == 0:
hw5_34.py(10):             if 0 < x < height:
hw5_34.py(11):                 print (outside + inside * (width - 2) + outside)
$###$
hw5_34.py(12):             if x == height - 1:
hw5_34.py(13):                 print (outside * width)
$$$$$
hw5_34.py(7):         for x in range(height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
