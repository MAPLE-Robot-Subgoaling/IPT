 --- modulename: hw5_63, funcname: <module>
hw5_63.py(1): def main():
hw5_63.py(12): main()
 --- modulename: hw5_63, funcname: main
hw5_63.py(2):     boxWidth = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_63.py(3):     boxHeight = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_63.py(4):     boxOutline = str(input("Please enter a symbol for the box outline: "))
Please enter a symbol for the box outline: hw5_63.py(5):     boxFill = str(input("Please enter a symbol for the box fill: "))
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_63.py(6):     fillLength = boxWidth - 2
hw5_63.py(7):     middleRows = boxOutline + (boxFill*fillLength)  + boxOutline
hw5_63.py(8):     print(boxOutline*boxWidth)
$$$$$
hw5_63.py(9):     for i in range(boxHeight-2):
hw5_63.py(10):         print(middleRows)
$###$
hw5_63.py(9):     for i in range(boxHeight-2):
hw5_63.py(10):         print(middleRows)
$###$
hw5_63.py(9):     for i in range(boxHeight-2):
hw5_63.py(10):         print(middleRows)
$###$
hw5_63.py(9):     for i in range(boxHeight-2):
hw5_63.py(11):     print(boxOutline*boxWidth)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
