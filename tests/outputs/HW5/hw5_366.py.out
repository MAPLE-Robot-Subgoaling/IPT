 --- modulename: hw5_366, funcname: <module>
hw5_366.py(1): def main():
hw5_366.py(14): main()
 --- modulename: hw5_366, funcname: main
hw5_366.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_366.py(3):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_366.py(4):     symbol = input("Please enter a symbol for the box outline:")
Please enter a symbol for the box outline:hw5_366.py(5):     fill = input("Please enter a symbol for the box fill:")
Please enter a symbol for the box fill: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_366.py(6):     height= height-2
hw5_366.py(7):     if height>1 or width>1:
hw5_366.py(8):         print(symbol*width)
$$$$$
hw5_366.py(9):         for w in range(0,height):
hw5_366.py(10):             print(symbol+(fill*(width-2)+symbol))
$###$
hw5_366.py(9):         for w in range(0,height):
hw5_366.py(10):             print(symbol+(fill*(width-2)+symbol))
$###$
hw5_366.py(9):         for w in range(0,height):
hw5_366.py(10):             print(symbol+(fill*(width-2)+symbol))
$###$
hw5_366.py(9):         for w in range(0,height):
hw5_366.py(11):         print(symbol*width)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
