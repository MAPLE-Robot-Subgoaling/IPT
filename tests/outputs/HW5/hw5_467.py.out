 --- modulename: hw5_467, funcname: <module>
hw5_467.py(1): def main():
hw5_467.py(7): def drawBox(boxWidth, boxHeight, boxOutline, boxFill):
hw5_467.py(17): main()
 --- modulename: hw5_467, funcname: main
hw5_467.py(2):     boxWidth = input("Please enter the width of the box: ")
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_467.py(3):     boxHeight = input("Please enter the height of the box: ")
Please enter the height of the box: hw5_467.py(4):     boxOutline = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_467.py(5):     boxFill = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_467.py(6):     drawBox(boxWidth, boxHeight, boxOutline, boxFill)
 --- modulename: hw5_467, funcname: drawBox
hw5_467.py(8):     boxWidth = int(boxWidth)
hw5_467.py(9):     boxHeight = int(boxHeight)
hw5_467.py(10):     for drawBox in range(int(boxHeight)):
hw5_467.py(11):         if drawBox != 0 and drawBox != (int(boxHeight) - 1): 
hw5_467.py(13):         if drawBox == 0:
hw5_467.py(14):             print(boxOutline * boxWidth)
$$$$$
hw5_467.py(15):         if drawBox == int(boxHeight) - 1:
hw5_467.py(10):     for drawBox in range(int(boxHeight)):
hw5_467.py(11):         if drawBox != 0 and drawBox != (int(boxHeight) - 1): 
hw5_467.py(12):             print(boxOutline + ((boxWidth - 2) * boxFill) + boxOutline)
$###$
hw5_467.py(13):         if drawBox == 0:
hw5_467.py(15):         if drawBox == int(boxHeight) - 1:
hw5_467.py(10):     for drawBox in range(int(boxHeight)):
hw5_467.py(11):         if drawBox != 0 and drawBox != (int(boxHeight) - 1): 
hw5_467.py(12):             print(boxOutline + ((boxWidth - 2) * boxFill) + boxOutline)
$###$
hw5_467.py(13):         if drawBox == 0:
hw5_467.py(15):         if drawBox == int(boxHeight) - 1:
hw5_467.py(10):     for drawBox in range(int(boxHeight)):
hw5_467.py(11):         if drawBox != 0 and drawBox != (int(boxHeight) - 1): 
hw5_467.py(12):             print(boxOutline + ((boxWidth - 2) * boxFill) + boxOutline)
$###$
hw5_467.py(13):         if drawBox == 0:
hw5_467.py(15):         if drawBox == int(boxHeight) - 1:
hw5_467.py(10):     for drawBox in range(int(boxHeight)):
hw5_467.py(11):         if drawBox != 0 and drawBox != (int(boxHeight) - 1): 
hw5_467.py(13):         if drawBox == 0:
hw5_467.py(15):         if drawBox == int(boxHeight) - 1:
hw5_467.py(16):             print(boxOutline * boxWidth)
$$$$$
hw5_467.py(10):     for drawBox in range(int(boxHeight)):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
