 --- modulename: hw5_382, funcname: <module>
hw5_382.py(1): def main():
hw5_382.py(13): main()
 --- modulename: hw5_382, funcname: main
hw5_382.py(2):    width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_382.py(3):    height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_382.py(4):    outline = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_382.py(5):    fill = input("please enter a symbol for the box fill: ")
please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_382.py(6):    print(outline * width)
$$$$$
hw5_382.py(7):    for i in range(height -2):
hw5_382.py(8):       print(outline + (fill * (width -2)) + outline)
$###$
hw5_382.py(7):    for i in range(height -2):
hw5_382.py(8):       print(outline + (fill * (width -2)) + outline)
$###$
hw5_382.py(7):    for i in range(height -2):
hw5_382.py(8):       print(outline + (fill * (width -2)) + outline)
$###$
hw5_382.py(7):    for i in range(height -2):
hw5_382.py(9):    if (height > 1): 
hw5_382.py(10):       print(outline * width)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
