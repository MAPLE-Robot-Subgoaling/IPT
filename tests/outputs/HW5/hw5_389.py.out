 --- modulename: hw5_389, funcname: <module>
hw5_389.py(1): def main():
hw5_389.py(12): main()
 --- modulename: hw5_389, funcname: main
hw5_389.py(2):     var_boxWidth = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_389.py(3):     var_boxHeight = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_389.py(4):     var_boxOutline = str(input("Please enter a symbol for the box outline: "))
Please enter a symbol for the box outline: hw5_389.py(5):     var_boxFill = str(input("Please enter a symbol for the box fill: "))
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_389.py(6):     lst_Height = []
hw5_389.py(7):     for i in range(var_boxHeight):
hw5_389.py(8):         if i == 0 or i == var_boxHeight - 1:
hw5_389.py(9):             print(var_boxOutline * var_boxWidth)
$$$$$
hw5_389.py(7):     for i in range(var_boxHeight):
hw5_389.py(8):         if i == 0 or i == var_boxHeight - 1:
hw5_389.py(11):             print(var_boxOutline + (var_boxFill * (var_boxWidth - 2)) + var_boxOutline)
$###$
hw5_389.py(7):     for i in range(var_boxHeight):
hw5_389.py(8):         if i == 0 or i == var_boxHeight - 1:
hw5_389.py(11):             print(var_boxOutline + (var_boxFill * (var_boxWidth - 2)) + var_boxOutline)
$###$
hw5_389.py(7):     for i in range(var_boxHeight):
hw5_389.py(8):         if i == 0 or i == var_boxHeight - 1:
hw5_389.py(11):             print(var_boxOutline + (var_boxFill * (var_boxWidth - 2)) + var_boxOutline)
$###$
hw5_389.py(7):     for i in range(var_boxHeight):
hw5_389.py(8):         if i == 0 or i == var_boxHeight - 1:
hw5_389.py(9):             print(var_boxOutline * var_boxWidth)
$$$$$
hw5_389.py(7):     for i in range(var_boxHeight):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
