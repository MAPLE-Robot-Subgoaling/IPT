 --- modulename: hw5_102, funcname: <module>
hw5_102.py(1): def main():
hw5_102.py(12): main()
 --- modulename: hw5_102, funcname: main
hw5_102.py(2):     arrayWidth = int(input("What is the width of the box: "))
What is the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_102.py(3):     arrayHeight = int(input("What is the height of the array: "))
What is the height of the array: hw5_102.py(4):     arrayOutside = str(input("What is the bodrer of the array: "))
What is the bodrer of the array: hw5_102.py(5):     arrayInside = str(input("What is the interal part of the array: "))
What is the interal part of the array:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_102.py(6):     n = 0
hw5_102.py(7):     for n in range(0, arrayHeight):
hw5_102.py(8):         if (n == 0 or n == arrayHeight - 1 ):
hw5_102.py(9):             print(arrayOutside * arrayHeight)
$$$$$
hw5_102.py(7):     for n in range(0, arrayHeight):
hw5_102.py(8):         if (n == 0 or n == arrayHeight - 1 ):
hw5_102.py(11):             print(arrayOutside + (arrayInside * (arrayWidth - 2) ) + arrayOutside)
$###$
hw5_102.py(7):     for n in range(0, arrayHeight):
hw5_102.py(8):         if (n == 0 or n == arrayHeight - 1 ):
hw5_102.py(11):             print(arrayOutside + (arrayInside * (arrayWidth - 2) ) + arrayOutside)
$###$
hw5_102.py(7):     for n in range(0, arrayHeight):
hw5_102.py(8):         if (n == 0 or n == arrayHeight - 1 ):
hw5_102.py(11):             print(arrayOutside + (arrayInside * (arrayWidth - 2) ) + arrayOutside)
$###$
hw5_102.py(7):     for n in range(0, arrayHeight):
hw5_102.py(8):         if (n == 0 or n == arrayHeight - 1 ):
hw5_102.py(9):             print(arrayOutside * arrayHeight)
$$$$$
hw5_102.py(7):     for n in range(0, arrayHeight):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
