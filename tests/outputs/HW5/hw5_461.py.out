 --- modulename: hw5_461, funcname: <module>
hw5_461.py(1): def main():
hw5_461.py(11): main()
 --- modulename: hw5_461, funcname: main
hw5_461.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_461.py(3):     heigh = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_461.py(4):     outline = input("Please enter the outlining symbol: ")
Please enter the outlining symbol: hw5_461.py(5):     content = input("Please enter the inside symbol: ")
Please enter the inside symbol:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_461.py(6):     for n in range(heigh):
hw5_461.py(7):             if n != 0 and n != (heigh - 1):
hw5_461.py(10):                 print(outline*width)
$$$$$
hw5_461.py(6):     for n in range(heigh):
hw5_461.py(7):             if n != 0 and n != (heigh - 1):
hw5_461.py(8):                 print(outline + content*(width-2) + outline)
$###$
hw5_461.py(6):     for n in range(heigh):
hw5_461.py(7):             if n != 0 and n != (heigh - 1):
hw5_461.py(8):                 print(outline + content*(width-2) + outline)
$###$
hw5_461.py(6):     for n in range(heigh):
hw5_461.py(7):             if n != 0 and n != (heigh - 1):
hw5_461.py(8):                 print(outline + content*(width-2) + outline)
$###$
hw5_461.py(6):     for n in range(heigh):
hw5_461.py(7):             if n != 0 and n != (heigh - 1):
hw5_461.py(10):                 print(outline*width)
$$$$$
hw5_461.py(6):     for n in range(heigh):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
