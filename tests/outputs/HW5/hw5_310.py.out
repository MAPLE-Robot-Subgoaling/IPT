 --- modulename: hw5_310, funcname: <module>
hw5_310.py(1): def main():
hw5_310.py(15): main()
 --- modulename: hw5_310, funcname: main
hw5_310.py(2):     width = int(input("Width: "))
Width:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_310.py(3):     height = int(input("Height: "))
Height: hw5_310.py(4):     outSym = input("Symbol out: ")
Symbol out: hw5_310.py(5):     inSym = input ("Symbol in: ")
Symbol in:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_310.py(6):     outList = ((outSym) * width)
hw5_310.py(7):     inList = ((outSym) + (inSym) * (width - 2) + (outSym))
hw5_310.py(8):     for n in range(1):
hw5_310.py(9):         print(outList)
$$$$$
hw5_310.py(8):     for n in range(1):
hw5_310.py(10):     for n in range(2, height):
hw5_310.py(11):         print (inList)
$###$
hw5_310.py(10):     for n in range(2, height):
hw5_310.py(11):         print (inList)
$###$
hw5_310.py(10):     for n in range(2, height):
hw5_310.py(11):         print (inList)
$###$
hw5_310.py(10):     for n in range(2, height):
hw5_310.py(12):     if height > 1:
hw5_310.py(13):         for n in range(height, height + 1):
hw5_310.py(14):             print (outList)
$$$$$
hw5_310.py(13):         for n in range(height, height + 1):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
