 --- modulename: hw5_255, funcname: <module>
hw5_255.py(1): def main():
hw5_255.py(15): main()
 --- modulename: hw5_255, funcname: main
hw5_255.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_255.py(3):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_255.py(4):     perimSym = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_255.py(5):     areaSym = input("Please enter a symbol for the box area: ")
Please enter a symbol for the box area:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_255.py(6):     for h in range(height + 1) :
hw5_255.py(7):         if h == 0 :
hw5_255.py(8):             print(perimSym * width)
$$$$$
hw5_255.py(6):     for h in range(height + 1) :
hw5_255.py(7):         if h == 0 :
hw5_255.py(9):         elif h > 0 and h < height - 1 :
hw5_255.py(10):             print(perimSym + areaSym * (width - 2) + perimSym)
$###$
hw5_255.py(6):     for h in range(height + 1) :
hw5_255.py(7):         if h == 0 :
hw5_255.py(9):         elif h > 0 and h < height - 1 :
hw5_255.py(10):             print(perimSym + areaSym * (width - 2) + perimSym)
$###$
hw5_255.py(6):     for h in range(height + 1) :
hw5_255.py(7):         if h == 0 :
hw5_255.py(9):         elif h > 0 and h < height - 1 :
hw5_255.py(10):             print(perimSym + areaSym * (width - 2) + perimSym)
$###$
hw5_255.py(6):     for h in range(height + 1) :
hw5_255.py(7):         if h == 0 :
hw5_255.py(9):         elif h > 0 and h < height - 1 :
hw5_255.py(11):         elif h == height and height == 1 :
hw5_255.py(13):         elif h == height :
hw5_255.py(6):     for h in range(height + 1) :
hw5_255.py(7):         if h == 0 :
hw5_255.py(9):         elif h > 0 and h < height - 1 :
hw5_255.py(11):         elif h == height and height == 1 :
hw5_255.py(13):         elif h == height :
hw5_255.py(14):             print(perimSym * width)
$$$$$
hw5_255.py(6):     for h in range(height + 1) :
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
