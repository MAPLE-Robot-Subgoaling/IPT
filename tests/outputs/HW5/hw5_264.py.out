 --- modulename: hw5_264, funcname: <module>
hw5_264.py(1): def main():
hw5_264.py(14): main()
 --- modulename: hw5_264, funcname: main
hw5_264.py(2):     NO_BOX = 1
hw5_264.py(3):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_264.py(4):     height = int(input("Please enter the height  of the box: "))
Please enter the height  of the box: hw5_264.py(5):     symbolOutline = input("Please enter the symbol for the box outline: ")
Please enter the symbol for the box outline: hw5_264.py(6):     symbolFill =  input("Please enter the symbol for the box fill: ")
Please enter the symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_264.py(7):     if height == NO_BOX:
hw5_264.py(10):         print(symbolOutline*width)    
$$$$$
hw5_264.py(11):         for i in range(0,height - 2):
hw5_264.py(12):             print(symbolOutline + (symbolFill*(width-2)) + symbolOutline)
$###$
hw5_264.py(11):         for i in range(0,height - 2):
hw5_264.py(12):             print(symbolOutline + (symbolFill*(width-2)) + symbolOutline)
$###$
hw5_264.py(11):         for i in range(0,height - 2):
hw5_264.py(12):             print(symbolOutline + (symbolFill*(width-2)) + symbolOutline)
$###$
hw5_264.py(11):         for i in range(0,height - 2):
hw5_264.py(13):         print(symbolOutline*width)    
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
