 --- modulename: hw5_123, funcname: <module>
hw5_123.py(1): def main():
hw5_123.py(16): main()
 --- modulename: hw5_123, funcname: main
hw5_123.py(2):     width=int(input("Please enter the width of the box:"))
Please enter the width of the box: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_123.py(3):     height=int(input("Please enter the height of the box:"))
Please enter the height of the box:hw5_123.py(4):     symbol_o=str(input("Please enter a symbol for the box outline:"))
Please enter a symbol for the box outline:hw5_123.py(5):     symbol_f=str(input("Please enter a symbol for the box fill:"))
Please enter a symbol for the box fill: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_123.py(6):     ex=list(range(0, width))
hw5_123.py(7):     up=list(range(0, height))
hw5_123.py(8):     put=symbol_o*width
hw5_123.py(9):     print(put)
$$$$$
hw5_123.py(10):     for i in range(0,height-2):
hw5_123.py(11):         across=width-2
hw5_123.py(12):         out=across*symbol_f
hw5_123.py(13):         print(symbol_o,out,symbol_o)
$ ### $
hw5_123.py(10):     for i in range(0,height-2):
hw5_123.py(11):         across=width-2
hw5_123.py(12):         out=across*symbol_f
hw5_123.py(13):         print(symbol_o,out,symbol_o)
$ ### $
hw5_123.py(10):     for i in range(0,height-2):
hw5_123.py(11):         across=width-2
hw5_123.py(12):         out=across*symbol_f
hw5_123.py(13):         print(symbol_o,out,symbol_o)
$ ### $
hw5_123.py(10):     for i in range(0,height-2):
hw5_123.py(14):     if height>=2:
hw5_123.py(15):         print(put)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
