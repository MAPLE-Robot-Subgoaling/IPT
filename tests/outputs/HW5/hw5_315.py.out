 --- modulename: hw5_315, funcname: <module>
hw5_315.py(1): def main():
hw5_315.py(21): main()
 --- modulename: hw5_315, funcname: main
hw5_315.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_315.py(3):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_315.py(4):     outline = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_315.py(5):     fill = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_315.py(6):     h = 0
hw5_315.py(7):     w = 0
hw5_315.py(8):     boxLine = ""
hw5_315.py(9):     for h in range(0,height):
hw5_315.py(10):         boxLine = ""
hw5_315.py(11):         if (h == 0) or (h == height-1):
hw5_315.py(12):             boxLine = outline * width
hw5_315.py(19):         print(boxLine)
$$$$$
hw5_315.py(9):     for h in range(0,height):
hw5_315.py(10):         boxLine = ""
hw5_315.py(11):         if (h == 0) or (h == height-1):
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(16):                     boxLine = boxLine + outline
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(18):                     boxLine = boxLine + fill
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(18):                     boxLine = boxLine + fill
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(18):                     boxLine = boxLine + fill
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(16):                     boxLine = boxLine + outline
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(19):         print(boxLine)
$###$
hw5_315.py(9):     for h in range(0,height):
hw5_315.py(10):         boxLine = ""
hw5_315.py(11):         if (h == 0) or (h == height-1):
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(16):                     boxLine = boxLine + outline
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(18):                     boxLine = boxLine + fill
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(18):                     boxLine = boxLine + fill
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(18):                     boxLine = boxLine + fill
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(16):                     boxLine = boxLine + outline
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(19):         print(boxLine)
$###$
hw5_315.py(9):     for h in range(0,height):
hw5_315.py(10):         boxLine = ""
hw5_315.py(11):         if (h == 0) or (h == height-1):
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(16):                     boxLine = boxLine + outline
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(18):                     boxLine = boxLine + fill
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(18):                     boxLine = boxLine + fill
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(18):                     boxLine = boxLine + fill
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(15):                 if (w == 0) or (w == width-1):
hw5_315.py(16):                     boxLine = boxLine + outline
hw5_315.py(14):             for w in range(0,width):
hw5_315.py(19):         print(boxLine)
$###$
hw5_315.py(9):     for h in range(0,height):
hw5_315.py(10):         boxLine = ""
hw5_315.py(11):         if (h == 0) or (h == height-1):
hw5_315.py(12):             boxLine = outline * width
hw5_315.py(19):         print(boxLine)
$$$$$
hw5_315.py(9):     for h in range(0,height):
hw5_315.py(20):     print("")

 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
