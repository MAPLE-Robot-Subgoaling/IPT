 --- modulename: hw5_425, funcname: <module>
hw5_425.py(1): def main():
hw5_425.py(14): main()
 --- modulename: hw5_425, funcname: main
hw5_425.py(2):     widthBox =int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_425.py(3):     heightBox =int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_425.py(4):     boxOut = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_425.py(5):     boxIn = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_425.py(6):     if(widthBox != 1) and (heightBox != 1):
hw5_425.py(7):         for a in range (0, 1):
hw5_425.py(8):             print(widthBox * boxOut)
$$$$$
hw5_425.py(7):         for a in range (0, 1):
hw5_425.py(9):         for a in range(1, heightBox-1):
hw5_425.py(10):             print((boxOut + (int(widthBox) - 2) * boxIn) + boxOut)
$###$
hw5_425.py(9):         for a in range(1, heightBox-1):
hw5_425.py(10):             print((boxOut + (int(widthBox) - 2) * boxIn) + boxOut)
$###$
hw5_425.py(9):         for a in range(1, heightBox-1):
hw5_425.py(10):             print((boxOut + (int(widthBox) - 2) * boxIn) + boxOut)
$###$
hw5_425.py(9):         for a in range(1, heightBox-1):
hw5_425.py(11):         print(widthBox * boxOut)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
