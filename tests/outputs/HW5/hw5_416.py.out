 --- modulename: hw5_416, funcname: <module>
hw5_416.py(1): def main():
hw5_416.py(15): main()
 --- modulename: hw5_416, funcname: main
hw5_416.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_416.py(3):     height= int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_416.py(4):     symbolOutline = input("Please enter the symbol for the box outline: ")
Please enter the symbol for the box outline: hw5_416.py(5):     symbolFill = input("Please enter the symbol for the box fill: ")
Please enter the symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_416.py(6):     if (height !=1 and width !=1):
hw5_416.py(7):         print(width * symbolOutline)
$$$$$
hw5_416.py(8):         width2 = width -2
hw5_416.py(9):         height2 = height-2
hw5_416.py(10):         for w in range (height2):
hw5_416.py(11):             print(symbolOutline + symbolFill *width2 +symbolOutline)
$###$
hw5_416.py(10):         for w in range (height2):
hw5_416.py(11):             print(symbolOutline + symbolFill *width2 +symbolOutline)
$###$
hw5_416.py(10):         for w in range (height2):
hw5_416.py(11):             print(symbolOutline + symbolFill *width2 +symbolOutline)
$###$
hw5_416.py(10):         for w in range (height2):
hw5_416.py(12):         print(width *symbolOutline)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
