 --- modulename: hw5_122, funcname: <module>
hw5_122.py(1): def main():
hw5_122.py(12): main()
 --- modulename: hw5_122, funcname: main
hw5_122.py(2):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_122.py(3):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box: hw5_122.py(4):     outlined = input("Please enter a symbol for the box's outline: ")
Please enter a symbol for the box's outline: hw5_122.py(5):     filler = input("Please enter a symbol for the box's filling: ")
Please enter a symbol for the box's filling:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_122.py(6):     MIN=1
hw5_122.py(7):     print(width*outlined)
$$$$$
hw5_122.py(8):     for n in range(0, height - 2, 1):
hw5_122.py(9):         print(outlined + ((width - 2) * filler) + outlined)
$###$
hw5_122.py(8):     for n in range(0, height - 2, 1):
hw5_122.py(9):         print(outlined + ((width - 2) * filler) + outlined)
$###$
hw5_122.py(8):     for n in range(0, height - 2, 1):
hw5_122.py(9):         print(outlined + ((width - 2) * filler) + outlined)
$###$
hw5_122.py(8):     for n in range(0, height - 2, 1):
hw5_122.py(10):     if height > MIN:
hw5_122.py(11):         print(width*outlined)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
