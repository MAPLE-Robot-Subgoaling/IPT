 --- modulename: hw5_108, funcname: <module>
hw5_108.py(1): def main():
hw5_108.py(15): main()
 --- modulename: hw5_108, funcname: main
hw5_108.py(2):     width = int(input("Please choose a width: "))
Please choose a width:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_108.py(3):     height = int(input("Please choose a height: "))
Please choose a height: hw5_108.py(4):     widthSym = str(input("Please enter a symbol for the outline of the box: "))
Please enter a symbol for the outline of the box: hw5_108.py(5):     heightSym = str(input("Please enter a symbol for the box fill: "))
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_108.py(6):     if height == 1:
hw5_108.py(8):     elif height == 0:
hw5_108.py(11):         print(widthSym * width)
$$$$$
hw5_108.py(12):         for h in range(height - 2): 
hw5_108.py(13):             print(widthSym + ((width-2) * heightSym) + widthSym)
$###$
hw5_108.py(12):         for h in range(height - 2): 
hw5_108.py(13):             print(widthSym + ((width-2) * heightSym) + widthSym)
$###$
hw5_108.py(12):         for h in range(height - 2): 
hw5_108.py(13):             print(widthSym + ((width-2) * heightSym) + widthSym)
$###$
hw5_108.py(12):         for h in range(height - 2): 
hw5_108.py(14):         print(widthSym * width)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
