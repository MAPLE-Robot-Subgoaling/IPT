 --- modulename: hw5_319, funcname: <module>
hw5_319.py(1): def main():
hw5_319.py(14): main()
 --- modulename: hw5_319, funcname: main
hw5_319.py(2):     height = int(input("Please enter the height of your box "))
Please enter the height of your box  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_319.py(3):     width = int(input("Please enter the width of your box "))
Please enter the width of your box hw5_319.py(4):     OUTLINE = input("Please enter a symbol to outline your box ")
Please enter a symbol to outline your box hw5_319.py(5):     FILL = input("Please enter a symbol to fill your box ")
Please enter a symbol to fill your box  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_319.py(6):     listWidth = list(range(width))
hw5_319.py(7):     listHeight = list(range(0, height - 2)) 
hw5_319.py(8):     print(len(listWidth) * OUTLINE)
$$$$$
hw5_319.py(9):     for h in listHeight:
hw5_319.py(10):         str(OUTLINE)
hw5_319.py(11):         fillMiddle = str((len(listWidth) - 2) * FILL)
hw5_319.py(12):         print((OUTLINE + fillMiddle +  OUTLINE))
$###$
hw5_319.py(9):     for h in listHeight:
hw5_319.py(10):         str(OUTLINE)
hw5_319.py(11):         fillMiddle = str((len(listWidth) - 2) * FILL)
hw5_319.py(12):         print((OUTLINE + fillMiddle +  OUTLINE))
$###$
hw5_319.py(9):     for h in listHeight:
hw5_319.py(10):         str(OUTLINE)
hw5_319.py(11):         fillMiddle = str((len(listWidth) - 2) * FILL)
hw5_319.py(12):         print((OUTLINE + fillMiddle +  OUTLINE))
$###$
hw5_319.py(9):     for h in listHeight:
hw5_319.py(13):     print(len(listWidth) * OUTLINE)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
