 --- modulename: hw5_376, funcname: <module>
hw5_376.py(1): def main():
hw5_376.py(13): main()
 --- modulename: hw5_376, funcname: main
hw5_376.py(2):     widthBox = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_376.py(3):     heightBox = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_376.py(4):     boxOutline = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_376.py(5):     boxFill = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_376.py(6):     width = widthBox - 2
hw5_376.py(7):     for i in range(0, heightBox , 1):
hw5_376.py(8):         if i == 0 or i == heightBox-1:
hw5_376.py(9):             print(boxOutline * widthBox)
$$$$$
hw5_376.py(7):     for i in range(0, heightBox , 1):
hw5_376.py(8):         if i == 0 or i == heightBox-1:
hw5_376.py(11):             line = (boxFill * width)
hw5_376.py(12):             print(boxOutline + line + boxOutline)
$###$
hw5_376.py(7):     for i in range(0, heightBox , 1):
hw5_376.py(8):         if i == 0 or i == heightBox-1:
hw5_376.py(11):             line = (boxFill * width)
hw5_376.py(12):             print(boxOutline + line + boxOutline)
$###$
hw5_376.py(7):     for i in range(0, heightBox , 1):
hw5_376.py(8):         if i == 0 or i == heightBox-1:
hw5_376.py(11):             line = (boxFill * width)
hw5_376.py(12):             print(boxOutline + line + boxOutline)
$###$
hw5_376.py(7):     for i in range(0, heightBox , 1):
hw5_376.py(8):         if i == 0 or i == heightBox-1:
hw5_376.py(9):             print(boxOutline * widthBox)
$$$$$
hw5_376.py(7):     for i in range(0, heightBox , 1):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
