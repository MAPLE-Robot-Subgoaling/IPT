 --- modulename: hw5_197, funcname: <module>
hw5_197.py(1): def main():
hw5_197.py(14): main()
 --- modulename: hw5_197, funcname: main
hw5_197.py(2):     boxWidth = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_197.py(3):     boxHeight = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_197.py(4):     boxOutline = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_197.py(5):     boxFill = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_197.py(6):     for i in range(1, boxHeight +1, 1) :
hw5_197.py(7):         if (i == 1) or (i == boxHeight):
hw5_197.py(8):              boxTop = boxOutline* boxWidth
hw5_197.py(9):              print (boxTop)
$$$$$
hw5_197.py(13):         i = i + 1
hw5_197.py(6):     for i in range(1, boxHeight +1, 1) :
hw5_197.py(7):         if (i == 1) or (i == boxHeight):
hw5_197.py(11):             boxInside = boxOutline + (boxFill *(boxWidth - 2)) + boxOutline
hw5_197.py(12):             print(boxInside)
$###$
hw5_197.py(13):         i = i + 1
hw5_197.py(6):     for i in range(1, boxHeight +1, 1) :
hw5_197.py(7):         if (i == 1) or (i == boxHeight):
hw5_197.py(11):             boxInside = boxOutline + (boxFill *(boxWidth - 2)) + boxOutline
hw5_197.py(12):             print(boxInside)
$###$
hw5_197.py(13):         i = i + 1
hw5_197.py(6):     for i in range(1, boxHeight +1, 1) :
hw5_197.py(7):         if (i == 1) or (i == boxHeight):
hw5_197.py(11):             boxInside = boxOutline + (boxFill *(boxWidth - 2)) + boxOutline
hw5_197.py(12):             print(boxInside)
$###$
hw5_197.py(13):         i = i + 1
hw5_197.py(6):     for i in range(1, boxHeight +1, 1) :
hw5_197.py(7):         if (i == 1) or (i == boxHeight):
hw5_197.py(8):              boxTop = boxOutline* boxWidth
hw5_197.py(9):              print (boxTop)
$$$$$
hw5_197.py(13):         i = i + 1
hw5_197.py(6):     for i in range(1, boxHeight +1, 1) :
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
