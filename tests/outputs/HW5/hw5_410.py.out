 --- modulename: hw5_410, funcname: <module>
hw5_410.py(1): def main():
hw5_410.py(15): main()
 --- modulename: hw5_410, funcname: main
hw5_410.py(2):     width = int(input("Please enter the width of the box:"))
Please enter the width of the box: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_410.py(3):     hieght = int(input("Please enter the height of the box:"))
Please enter the height of the box:hw5_410.py(4):     symbol = input("Please enter a symbol for the box outline;")
Please enter a symbol for the box outline;hw5_410.py(5):     boxFill = input("Please enter a symbol for the box fill;")
Please enter a symbol for the box fill; --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_410.py(6):     count = 0
hw5_410.py(7):     if hieght== 1:
hw5_410.py(10):         print(width * symbol)
$$$$$
hw5_410.py(11):         while (hieght - 2 > count):
hw5_410.py(12):             print(symbol+boxFill * (width-2)+symbol)
$###$
hw5_410.py(13):             count = count +1 
hw5_410.py(11):         while (hieght - 2 > count):
hw5_410.py(12):             print(symbol+boxFill * (width-2)+symbol)
$###$
hw5_410.py(13):             count = count +1 
hw5_410.py(11):         while (hieght - 2 > count):
hw5_410.py(12):             print(symbol+boxFill * (width-2)+symbol)
$###$
hw5_410.py(13):             count = count +1 
hw5_410.py(11):         while (hieght - 2 > count):
hw5_410.py(14):         print(width * symbol)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
