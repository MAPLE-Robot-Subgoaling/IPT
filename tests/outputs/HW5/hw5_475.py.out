 --- modulename: hw5_475, funcname: <module>
hw5_475.py(1): def main():
hw5_475.py(12): main()
 --- modulename: hw5_475, funcname: main
hw5_475.py(2):     width = int(input("What is the width of the box?"))
What is the width of the box? --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_475.py(3):     height = int(input("What is the height of the box?"))
What is the height of the box?hw5_475.py(4):     outlineSymbol = str(input("What is the outline for the box?"))
What is the outline for the box?hw5_475.py(5):     fillSymbol = str(input("What is the fill for the box?"))
What is the fill for the box? --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_475.py(6):     smallHeight = height - 2
hw5_475.py(7):     smallWidth = width - 2
hw5_475.py(8):     print(outlineSymbol * width)
$$$$$
hw5_475.py(9):     for i in range(smallHeight):
hw5_475.py(10):         print(outlineSymbol + fillSymbol * smallWidth + outlineSymbol)
$###$
hw5_475.py(9):     for i in range(smallHeight):
hw5_475.py(10):         print(outlineSymbol + fillSymbol * smallWidth + outlineSymbol)
$###$
hw5_475.py(9):     for i in range(smallHeight):
hw5_475.py(10):         print(outlineSymbol + fillSymbol * smallWidth + outlineSymbol)
$###$
hw5_475.py(9):     for i in range(smallHeight):
hw5_475.py(11):     print(outlineSymbol * width)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
