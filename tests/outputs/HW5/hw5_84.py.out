 --- modulename: hw5_84, funcname: <module>
hw5_84.py(1): def main() :
hw5_84.py(11): main()
 --- modulename: hw5_84, funcname: main
hw5_84.py(2):     boxWidth = int(input("Enter the width of a box: "))
Enter the width of a box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_84.py(3):     boxHeight = int(input("Enter the height of a box: "))
Enter the height of a box: hw5_84.py(4):     boxSymbolOutline = input("Enter a symbol to outline a box: ")
Enter a symbol to outline a box: hw5_84.py(5):     boxSymbolFill = input("Enter a symbol to fill a box: ")
Enter a symbol to fill a box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_84.py(6):     for w in range(0, boxHeight):
hw5_84.py(7):         if  w >  0 and w != boxHeight - 1 :
hw5_84.py(10):             print(boxSymbolOutline * boxWidth)
$$$$$
hw5_84.py(6):     for w in range(0, boxHeight):
hw5_84.py(7):         if  w >  0 and w != boxHeight - 1 :
hw5_84.py(8):             print(boxSymbolOutline + boxSymbolFill*(boxWidth - 2) + boxSymbolOutline)
$###$
hw5_84.py(6):     for w in range(0, boxHeight):
hw5_84.py(7):         if  w >  0 and w != boxHeight - 1 :
hw5_84.py(8):             print(boxSymbolOutline + boxSymbolFill*(boxWidth - 2) + boxSymbolOutline)
$###$
hw5_84.py(6):     for w in range(0, boxHeight):
hw5_84.py(7):         if  w >  0 and w != boxHeight - 1 :
hw5_84.py(8):             print(boxSymbolOutline + boxSymbolFill*(boxWidth - 2) + boxSymbolOutline)
$###$
hw5_84.py(6):     for w in range(0, boxHeight):
hw5_84.py(7):         if  w >  0 and w != boxHeight - 1 :
hw5_84.py(10):             print(boxSymbolOutline * boxWidth)
$$$$$
hw5_84.py(6):     for w in range(0, boxHeight):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
