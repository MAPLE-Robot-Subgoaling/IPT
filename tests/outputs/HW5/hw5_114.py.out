 --- modulename: hw5_114, funcname: <module>
hw5_114.py(1): def main():
hw5_114.py(13): main()
 --- modulename: hw5_114, funcname: main
hw5_114.py(2):     width = int(input("enter width of box "))
enter width of box  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_114.py(3):     height = int(input("enter height of box "))
enter height of box hw5_114.py(4):     outline = input("enter a symbol for the outline of the box ")
enter a symbol for the outline of the box hw5_114.py(5):     fill =  input("enter a symbol for the fill of the bod")
enter a symbol for the fill of the bod --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_114.py(6):     top = outline * width
hw5_114.py(7):     print(top)
$$$$$
hw5_114.py(8):     for i in range (0, height -2):
hw5_114.py(9):          inside = (width -2)*fill
hw5_114.py(10):          print(outline, inside, outline)
$ ### $
hw5_114.py(8):     for i in range (0, height -2):
hw5_114.py(9):          inside = (width -2)*fill
hw5_114.py(10):          print(outline, inside, outline)
$ ### $
hw5_114.py(8):     for i in range (0, height -2):
hw5_114.py(9):          inside = (width -2)*fill
hw5_114.py(10):          print(outline, inside, outline)
$ ### $
hw5_114.py(8):     for i in range (0, height -2):
hw5_114.py(11):     if height >= 2:
hw5_114.py(12):           print(top)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
