 --- modulename: hw5_120, funcname: <module>
hw5_120.py(1): def main():
hw5_120.py(13): main()
 --- modulename: hw5_120, funcname: main
hw5_120.py(2):     widthBox = int(input("Please enter the width of the box:"))
Please enter the width of the box: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_120.py(3):     heightBox = int(input("Please enter the height of the box:"))
Please enter the height of the box:hw5_120.py(4):     outlineBox = input("Please enter a symbol for the box outline:")
Please enter a symbol for the box outline:hw5_120.py(5):     fillBox = input("Please enter a symbol for the box fill:")
Please enter a symbol for the box fill: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_120.py(6):     for o in outlineBox:
hw5_120.py(7):         print(outlineBox * widthBox)
$$$$$
hw5_120.py(6):     for o in outlineBox:
hw5_120.py(8):     for f in (fillBox * (heightBox - 2)):
hw5_120.py(9):         insideBox = (outlineBox + (fillBox * (widthBox - 2)) + outlineBox)
hw5_120.py(10):         print(insideBox)
$###$
hw5_120.py(8):     for f in (fillBox * (heightBox - 2)):
hw5_120.py(9):         insideBox = (outlineBox + (fillBox * (widthBox - 2)) + outlineBox)
hw5_120.py(10):         print(insideBox)
$###$
hw5_120.py(8):     for f in (fillBox * (heightBox - 2)):
hw5_120.py(9):         insideBox = (outlineBox + (fillBox * (widthBox - 2)) + outlineBox)
hw5_120.py(10):         print(insideBox)
$###$
hw5_120.py(8):     for f in (fillBox * (heightBox - 2)):
hw5_120.py(11):     for o in outlineBox:
hw5_120.py(12):         print(outlineBox * widthBox)
$$$$$
hw5_120.py(11):     for o in outlineBox:
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
