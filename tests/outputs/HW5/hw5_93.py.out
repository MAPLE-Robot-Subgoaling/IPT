 --- modulename: hw5_93, funcname: <module>
hw5_93.py(1): def main ():
hw5_93.py(11): main()
 --- modulename: hw5_93, funcname: main
hw5_93.py(2):     width= int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_93.py(3):     height= int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_93.py(4):     out= input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_93.py(5):     fill= input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_93.py(6):     for outBox in range(height):
hw5_93.py(7):         if outBox == 0 or outBox == (height-1):
hw5_93.py(8):             print("",(out* width))
 $$$$$
hw5_93.py(6):     for outBox in range(height):
hw5_93.py(7):         if outBox == 0 or outBox == (height-1):
hw5_93.py(10):             print("", (out + (fill*(width-2))+ out))
 $###$
hw5_93.py(6):     for outBox in range(height):
hw5_93.py(7):         if outBox == 0 or outBox == (height-1):
hw5_93.py(10):             print("", (out + (fill*(width-2))+ out))
 $###$
hw5_93.py(6):     for outBox in range(height):
hw5_93.py(7):         if outBox == 0 or outBox == (height-1):
hw5_93.py(10):             print("", (out + (fill*(width-2))+ out))
 $###$
hw5_93.py(6):     for outBox in range(height):
hw5_93.py(7):         if outBox == 0 or outBox == (height-1):
hw5_93.py(8):             print("",(out* width))
 $$$$$
hw5_93.py(6):     for outBox in range(height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
