 --- modulename: hw5_398, funcname: <module>
hw5_398.py(1): def main():
hw5_398.py(16): main()
 --- modulename: hw5_398, funcname: main
hw5_398.py(2):     MIDVAR = 2
hw5_398.py(3):     ENDVAR = 1
hw5_398.py(4):     widthBox = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_398.py(5):     heightBox = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_398.py(6):     outlineBox = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_398.py(7):     fillBox = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_398.py(8):     firstLine = widthBox * outlineBox
hw5_398.py(9):     print(firstLine)
$$$$$
hw5_398.py(10):     midOutline = (heightBox - MIDVAR)
hw5_398.py(11):     for i in range(midOutline):
hw5_398.py(12):         midBox = (outlineBox + (fillBox * (widthBox - MIDVAR))+ outlineBox)
hw5_398.py(13):         print(midBox)
$###$
hw5_398.py(11):     for i in range(midOutline):
hw5_398.py(12):         midBox = (outlineBox + (fillBox * (widthBox - MIDVAR))+ outlineBox)
hw5_398.py(13):         print(midBox)
$###$
hw5_398.py(11):     for i in range(midOutline):
hw5_398.py(12):         midBox = (outlineBox + (fillBox * (widthBox - MIDVAR))+ outlineBox)
hw5_398.py(13):         print(midBox)
$###$
hw5_398.py(11):     for i in range(midOutline):
hw5_398.py(14):     if heightBox != ENDVAR:
hw5_398.py(15):             print(firstLine)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
