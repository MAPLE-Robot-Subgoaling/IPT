 --- modulename: hw5_232, funcname: <module>
hw5_232.py(1): def main():
hw5_232.py(15): main()
 --- modulename: hw5_232, funcname: main
hw5_232.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_232.py(3):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_232.py(4):     outline =input("Please enter the symbol for the box outline: ")
Please enter the symbol for the box outline: hw5_232.py(5):     fill = input("Please enter the symbol for the box fill: ")
Please enter the symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_232.py(6):     i = 1
hw5_232.py(7):     total = outline * width
hw5_232.py(8):     print(total)
$$$$$
hw5_232.py(9):     center = outline * width
hw5_232.py(10):     for h in range(0 , height):
hw5_232.py(11):         while i > 0 and i < width:
hw5_232.py(12):             center[i] = fill
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
