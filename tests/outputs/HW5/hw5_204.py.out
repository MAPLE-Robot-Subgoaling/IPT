 --- modulename: hw5_204, funcname: <module>
hw5_204.py(1): def main():
hw5_204.py(22): main()
 --- modulename: hw5_204, funcname: main
hw5_204.py(2):     width = int(input(" Please enter the width of the box:  "))
 Please enter the width of the box:   --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_204.py(3):     height = int(input(" Please enter the height of the box:  "))
 Please enter the height of the box:  hw5_204.py(4):     symbol_o = input(" Please enter a symbol for the box outline:  ")
 Please enter a symbol for the box outline:  hw5_204.py(5):     symbol_i = input(" Please enter a symbol for the box fill:  ")
 Please enter a symbol for the box fill:   --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_204.py(6):     height = height - 2
hw5_204.py(7):     if height <= 1 and width <= 1:
hw5_204.py(9):     elif width == 2 and (height + 2) == 2:
hw5_204.py(12):     elif height <= 1:
hw5_204.py(14):     elif width <= 1:
hw5_204.py(18):         print(symbol_o * width)
$$$$$
hw5_204.py(19):         for w in range(0,height) :
hw5_204.py(20):             print(symbol_o + (symbol_i * (width - 2)) + symbol_o)
$###$
hw5_204.py(19):         for w in range(0,height) :
hw5_204.py(20):             print(symbol_o + (symbol_i * (width - 2)) + symbol_o)
$###$
hw5_204.py(19):         for w in range(0,height) :
hw5_204.py(20):             print(symbol_o + (symbol_i * (width - 2)) + symbol_o)
$###$
hw5_204.py(19):         for w in range(0,height) :
hw5_204.py(21):         print(symbol_o * width)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
