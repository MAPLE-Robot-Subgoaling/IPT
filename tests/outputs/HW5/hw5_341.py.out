 --- modulename: hw5_341, funcname: <module>
hw5_341.py(1): def main():
hw5_341.py(18): main()
 --- modulename: hw5_341, funcname: main
hw5_341.py(2): 	boxWidth = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_341.py(3): 	boxHeight = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_341.py(4): 	boxOutline = str(input("Please enter a symbol for the box outline: "))
Please enter a symbol for the box outline: hw5_341.py(5): 	boxFill = str(input("Please enter a symbol for the box fill: "))
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_341.py(6): 	if boxHeight == 1 and boxWidth == 1 :
hw5_341.py(8): 	elif boxHeight == 1 :
hw5_341.py(10): 	elif boxWidth == 1 :
hw5_341.py(14): 		print(boxOutline*boxWidth)
$$$$$
hw5_341.py(15): 		for n in range(1,boxHeight-1):
hw5_341.py(16): 			print(boxOutline + boxFill*(boxWidth-2) + boxOutline)
$###$
hw5_341.py(15): 		for n in range(1,boxHeight-1):
hw5_341.py(16): 			print(boxOutline + boxFill*(boxWidth-2) + boxOutline)
$###$
hw5_341.py(15): 		for n in range(1,boxHeight-1):
hw5_341.py(16): 			print(boxOutline + boxFill*(boxWidth-2) + boxOutline)
$###$
hw5_341.py(15): 		for n in range(1,boxHeight-1):
hw5_341.py(17): 		print(boxOutline*boxWidth)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
