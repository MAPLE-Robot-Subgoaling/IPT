 --- modulename: hw5_70, funcname: <module>
hw5_70.py(1): def main():
hw5_70.py(14): main()
 --- modulename: hw5_70, funcname: main
hw5_70.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_70.py(3):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_70.py(4):     outside = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_70.py(5):     inside = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_70.py(6):     filling = [inside]*(width - 2) 
hw5_70.py(7):     buns = [outside]*width 
hw5_70.py(8):     wall = [outside] 
hw5_70.py(9):     print(buns)
['$', '$', '$', '$', '$']
hw5_70.py(10):     for n in range(height - 2): 
hw5_70.py(11):         print(wall + filling + wall)
['$', '#', '#', '#', '$']
hw5_70.py(10):     for n in range(height - 2): 
hw5_70.py(11):         print(wall + filling + wall)
['$', '#', '#', '#', '$']
hw5_70.py(10):     for n in range(height - 2): 
hw5_70.py(11):         print(wall + filling + wall)
['$', '#', '#', '#', '$']
hw5_70.py(10):     for n in range(height - 2): 
hw5_70.py(12):     if width and height != 1: 
hw5_70.py(13):         print(buns)
['$', '$', '$', '$', '$']
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
