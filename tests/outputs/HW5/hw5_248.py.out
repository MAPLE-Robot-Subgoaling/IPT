 --- modulename: hw5_248, funcname: <module>
hw5_248.py(1): def main():
hw5_248.py(11): main()
 --- modulename: hw5_248, funcname: main
hw5_248.py(2):     width = int(input("Please enter the height of the box:"))
Please enter the height of the box: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_248.py(3):     height = int(input("Please enter the width of the box:"))
Please enter the width of the box:hw5_248.py(4):     outline = input("Enter the symbol for the outline")
Enter the symbol for the outlinehw5_248.py(5):     fill = input("Enter the symbol you wish to fill the box with:")
Enter the symbol you wish to fill the box with: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_248.py(6):     for i in range(height):
hw5_248.py(7):         if i % height == 0 or i%height == height-1:
hw5_248.py(8):             print(outline*width)
$$$$$
hw5_248.py(6):     for i in range(height):
hw5_248.py(7):         if i % height == 0 or i%height == height-1:
hw5_248.py(10):             print(outline+fill*(width-2)+outline)
$###$
hw5_248.py(6):     for i in range(height):
hw5_248.py(7):         if i % height == 0 or i%height == height-1:
hw5_248.py(10):             print(outline+fill*(width-2)+outline)
$###$
hw5_248.py(6):     for i in range(height):
hw5_248.py(7):         if i % height == 0 or i%height == height-1:
hw5_248.py(10):             print(outline+fill*(width-2)+outline)
$###$
hw5_248.py(6):     for i in range(height):
hw5_248.py(7):         if i % height == 0 or i%height == height-1:
hw5_248.py(8):             print(outline*width)
$$$$$
hw5_248.py(6):     for i in range(height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
