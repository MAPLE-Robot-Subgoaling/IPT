 --- modulename: hw5_187, funcname: <module>
hw5_187.py(1): def main():
hw5_187.py(15): main()
 --- modulename: hw5_187, funcname: main
hw5_187.py(2):     boxWidth=int(input("Please enter the width of the box:"))
Please enter the width of the box: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_187.py(3):     boxHeight=int(input("Please enter the height of the box:"))
Please enter the height of the box:hw5_187.py(4):     sym1=input("Please enter a symbol for the box outline:")
Please enter a symbol for the box outline:hw5_187.py(5):     sym2=input("Please enter a symbol for the box fill:")
Please enter a symbol for the box fill: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_187.py(6):     innerHeight = boxHeight - 2
hw5_187.py(7):     innerWidth = boxWidth - 2
hw5_187.py(8):     innerRow = sym1 + sym2 * innerWidth + sym1
hw5_187.py(9):     counterList = [0] * innerHeight
hw5_187.py(10):     print(sym1*boxWidth)
$$$$$
hw5_187.py(11):     for a in counterList:
hw5_187.py(12):         print(innerRow)
$###$
hw5_187.py(11):     for a in counterList:
hw5_187.py(12):         print(innerRow)
$###$
hw5_187.py(11):     for a in counterList:
hw5_187.py(12):         print(innerRow)
$###$
hw5_187.py(11):     for a in counterList:
hw5_187.py(13):     if boxHeight != 1:
hw5_187.py(14):         print(sym1*boxWidth)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
