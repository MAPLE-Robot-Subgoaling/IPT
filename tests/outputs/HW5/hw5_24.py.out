 --- modulename: hw5_24, funcname: <module>
hw5_24.py(1): WALL = 2
hw5_24.py(2): CONDITION = 1
hw5_24.py(3): def main():
hw5_24.py(16): main()
 --- modulename: hw5_24, funcname: main
hw5_24.py(4):     width = int(input("Enter the width "))
Enter the width  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_24.py(5):     height = int(input("Enter the height "))
Enter the height hw5_24.py(6):     out_sym = input("enter the outer sym ")
enter the outer sym hw5_24.py(7):     fil_sym = input("enter the inner sym ")
enter the inner sym  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_24.py(8):     for i in range(1):
hw5_24.py(9):         outer_shell = width * out_sym
hw5_24.py(10):         print(outer_shell)
$$$$$
hw5_24.py(11):         for i in range(height-WALL):
hw5_24.py(12):             var = out_sym + (fil_sym *(width-WALL))+out_sym
hw5_24.py(13):             print(var)
$###$
hw5_24.py(11):         for i in range(height-WALL):
hw5_24.py(12):             var = out_sym + (fil_sym *(width-WALL))+out_sym
hw5_24.py(13):             print(var)
$###$
hw5_24.py(11):         for i in range(height-WALL):
hw5_24.py(12):             var = out_sym + (fil_sym *(width-WALL))+out_sym
hw5_24.py(13):             print(var)
$###$
hw5_24.py(11):         for i in range(height-WALL):
hw5_24.py(14):         if height != CONDITION:
hw5_24.py(15):             print(outer_shell)
$$$$$
hw5_24.py(8):     for i in range(1):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
