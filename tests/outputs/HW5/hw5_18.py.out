 --- modulename: hw5_18, funcname: <module>
hw5_18.py(1): def main():
hw5_18.py(18): main()
 --- modulename: hw5_18, funcname: main
hw5_18.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_18.py(3):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_18.py(4):     outline = input("Please enter the symbol for the box outline: ")
Please enter the symbol for the box outline: hw5_18.py(5):     filling = input("Please enter the symbol for the box fill: ")
Please enter the symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_18.py(6):     for i in range(height):
hw5_18.py(7):         toPrint = ""
hw5_18.py(8):         if i == 0 or i == height - 1:
hw5_18.py(9):             for n in range(width):
hw5_18.py(10):                 toPrint = toPrint + outline
hw5_18.py(9):             for n in range(width):
hw5_18.py(10):                 toPrint = toPrint + outline
hw5_18.py(9):             for n in range(width):
hw5_18.py(10):                 toPrint = toPrint + outline
hw5_18.py(9):             for n in range(width):
hw5_18.py(10):                 toPrint = toPrint + outline
hw5_18.py(9):             for n in range(width):
hw5_18.py(10):                 toPrint = toPrint + outline
hw5_18.py(9):             for n in range(width):
hw5_18.py(17):         print(toPrint)
$$$$$
hw5_18.py(6):     for i in range(height):
hw5_18.py(7):         toPrint = ""
hw5_18.py(8):         if i == 0 or i == height - 1:
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(14):                     toPrint = toPrint + outline
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(16):                     toPrint = toPrint + filling
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(16):                     toPrint = toPrint + filling
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(16):                     toPrint = toPrint + filling
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(14):                     toPrint = toPrint + outline
hw5_18.py(12):             for n in range(width):
hw5_18.py(17):         print(toPrint)
$###$
hw5_18.py(6):     for i in range(height):
hw5_18.py(7):         toPrint = ""
hw5_18.py(8):         if i == 0 or i == height - 1:
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(14):                     toPrint = toPrint + outline
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(16):                     toPrint = toPrint + filling
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(16):                     toPrint = toPrint + filling
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(16):                     toPrint = toPrint + filling
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(14):                     toPrint = toPrint + outline
hw5_18.py(12):             for n in range(width):
hw5_18.py(17):         print(toPrint)
$###$
hw5_18.py(6):     for i in range(height):
hw5_18.py(7):         toPrint = ""
hw5_18.py(8):         if i == 0 or i == height - 1:
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(14):                     toPrint = toPrint + outline
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(16):                     toPrint = toPrint + filling
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(16):                     toPrint = toPrint + filling
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(16):                     toPrint = toPrint + filling
hw5_18.py(12):             for n in range(width):
hw5_18.py(13):                 if n == 0 or n == width - 1:
hw5_18.py(14):                     toPrint = toPrint + outline
hw5_18.py(12):             for n in range(width):
hw5_18.py(17):         print(toPrint)
$###$
hw5_18.py(6):     for i in range(height):
hw5_18.py(7):         toPrint = ""
hw5_18.py(8):         if i == 0 or i == height - 1:
hw5_18.py(9):             for n in range(width):
hw5_18.py(10):                 toPrint = toPrint + outline
hw5_18.py(9):             for n in range(width):
hw5_18.py(10):                 toPrint = toPrint + outline
hw5_18.py(9):             for n in range(width):
hw5_18.py(10):                 toPrint = toPrint + outline
hw5_18.py(9):             for n in range(width):
hw5_18.py(10):                 toPrint = toPrint + outline
hw5_18.py(9):             for n in range(width):
hw5_18.py(10):                 toPrint = toPrint + outline
hw5_18.py(9):             for n in range(width):
hw5_18.py(17):         print(toPrint)
$$$$$
hw5_18.py(6):     for i in range(height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
