 --- modulename: hw5_59, funcname: <module>
hw5_59.py(1): def main():
hw5_59.py(14): main()
 --- modulename: hw5_59, funcname: main
hw5_59.py(2): 	userWidth = int(input("What is the width of your box? "))
What is the width of your box?  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_59.py(3): 	userHeight = int(input("What is the height of your box? "))
What is the height of your box? hw5_59.py(4): 	userOutline = input("What is the symbol that you would like the box to be outlined in? ")
What is the symbol that you would like the box to be outlined in? hw5_59.py(5): 	userFiller = input("What is the symbol you would like the box to be filled in with? ")
What is the symbol you would like the box to be filled in with?  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_59.py(6): 	NO_BOX = 1
hw5_59.py(7): 	if userWidth == NO_BOX and userHeight == NO_BOX:
hw5_59.py(10): 		print (userOutline * userWidth)
$$$$$
hw5_59.py(11): 		for i in range (0, userHeight - 2):
hw5_59.py(12): 			print (userOutline + (userFiller * (userWidth - 2)) + userOutline)
$###$
hw5_59.py(11): 		for i in range (0, userHeight - 2):
hw5_59.py(12): 			print (userOutline + (userFiller * (userWidth - 2)) + userOutline)
$###$
hw5_59.py(11): 		for i in range (0, userHeight - 2):
hw5_59.py(12): 			print (userOutline + (userFiller * (userWidth - 2)) + userOutline)
$###$
hw5_59.py(11): 		for i in range (0, userHeight - 2):
hw5_59.py(13): 		print (userOutline * userWidth)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
