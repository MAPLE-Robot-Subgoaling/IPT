 --- modulename: hw5_333, funcname: <module>
hw5_333.py(1): def main():
hw5_333.py(11): main()
 --- modulename: hw5_333, funcname: main
hw5_333.py(2):     wBox = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_333.py(3):     hBox = int(input("Please input the height of the box: "))
Please input the height of the box: hw5_333.py(4):     outSymb = str(input("Please enter a symbol for the box outline: "))
Please enter a symbol for the box outline: hw5_333.py(5):     inSymb = str(input("Please enter a symbol for the box fill: "))
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_333.py(6):     insideBox = (wBox - 2)
hw5_333.py(7):     print(wBox*outSymb)
$$$$$
hw5_333.py(8):     for x in range(hBox - 2):
hw5_333.py(9):         print(outSymb + (inSymb * insideBox) + outSymb)
$###$
hw5_333.py(8):     for x in range(hBox - 2):
hw5_333.py(9):         print(outSymb + (inSymb * insideBox) + outSymb)
$###$
hw5_333.py(8):     for x in range(hBox - 2):
hw5_333.py(9):         print(outSymb + (inSymb * insideBox) + outSymb)
$###$
hw5_333.py(8):     for x in range(hBox - 2):
hw5_333.py(10):     print(wBox*outSymb)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
