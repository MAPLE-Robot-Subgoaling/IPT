 --- modulename: hw5_494, funcname: <module>
hw5_494.py(1): def main():
hw5_494.py(10): main()
 --- modulename: hw5_494, funcname: main
hw5_494.py(2):     widNum = int(input("What do you want the width to be?: "))
What do you want the width to be?:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_494.py(3):     lengNum = int(input("What do you want the legnth to be?: "))
What do you want the legnth to be?: hw5_494.py(4):     sym1 = input("What symbol do you want the outside of the box to be?: ")
What symbol do you want the outside of the box to be?: hw5_494.py(5):     sym2 = input("What symbol do you want the inside of the box to be?: ")
What symbol do you want the inside of the box to be?:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_494.py(6):     print(sym1*widNum)
$$$$$
hw5_494.py(7):     for h in range(lengNum-2):
hw5_494.py(8):         print(sym1+sym2*(widNum-2)+sym1)
$###$
hw5_494.py(7):     for h in range(lengNum-2):
hw5_494.py(8):         print(sym1+sym2*(widNum-2)+sym1)
$###$
hw5_494.py(7):     for h in range(lengNum-2):
hw5_494.py(8):         print(sym1+sym2*(widNum-2)+sym1)
$###$
hw5_494.py(7):     for h in range(lengNum-2):
hw5_494.py(9):     print(sym1*widNum)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
