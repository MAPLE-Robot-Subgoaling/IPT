 --- modulename: hw5_372, funcname: <module>
hw5_372.py(1): def main():
hw5_372.py(13): main()
 --- modulename: hw5_372, funcname: main
hw5_372.py(2):     width=int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_372.py(3):     height=int(input("Please enter a height of the box: "))
Please enter a height of the box: hw5_372.py(4):     outline=str(input("Please enter a symbol for the outline: "))
Please enter a symbol for the outline: hw5_372.py(5):     fill=str(input("Please enter a symbol fo the box fill: "))
Please enter a symbol fo the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_372.py(6):     if (width==1 and height==1):
hw5_372.py(9):         print(outline*width)
$$$$$
hw5_372.py(10):         for i in range(height-2):
hw5_372.py(11):             print(outline+fill*(width-2)+outline)
$###$
hw5_372.py(10):         for i in range(height-2):
hw5_372.py(11):             print(outline+fill*(width-2)+outline)
$###$
hw5_372.py(10):         for i in range(height-2):
hw5_372.py(11):             print(outline+fill*(width-2)+outline)
$###$
hw5_372.py(10):         for i in range(height-2):
hw5_372.py(12):         print(outline*width)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
