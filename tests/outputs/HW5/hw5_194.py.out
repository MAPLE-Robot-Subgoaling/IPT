 --- modulename: hw5_194, funcname: <module>
hw5_194.py(1): def main():
hw5_194.py(12): main()
 --- modulename: hw5_194, funcname: main
hw5_194.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_194.py(3):     height = int(input("Please enterthe height of the box: "))
Please enterthe height of the box: hw5_194.py(4):     outline = input("Please enter the symbol for the outline: ")
Please enter the symbol for the outline: hw5_194.py(5):     inside = input("Please enter the symbol to fill the box: ")
Please enter the symbol to fill the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_194.py(6):     rowList = range(height)
hw5_194.py(7):     for a in rowList:
hw5_194.py(8):         if a == rowList[0] or a == rowList[-1]:
hw5_194.py(9):             print(outline * width)
$$$$$
hw5_194.py(7):     for a in rowList:
hw5_194.py(8):         if a == rowList[0] or a == rowList[-1]:
hw5_194.py(11):             print(outline + inside * (width - 2) + outline)
$###$
hw5_194.py(7):     for a in rowList:
hw5_194.py(8):         if a == rowList[0] or a == rowList[-1]:
hw5_194.py(11):             print(outline + inside * (width - 2) + outline)
$###$
hw5_194.py(7):     for a in rowList:
hw5_194.py(8):         if a == rowList[0] or a == rowList[-1]:
hw5_194.py(11):             print(outline + inside * (width - 2) + outline)
$###$
hw5_194.py(7):     for a in rowList:
hw5_194.py(8):         if a == rowList[0] or a == rowList[-1]:
hw5_194.py(9):             print(outline * width)
$$$$$
hw5_194.py(7):     for a in rowList:
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
