 --- modulename: hw5_64, funcname: <module>
hw5_64.py(1): def main():
hw5_64.py(8): main()
 --- modulename: hw5_64, funcname: main
hw5_64.py(2):     length = int(input("Please enter a positive integer below 12(length): "))                       
Please enter a positive integer below 12(length):  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_64.py(3):     height = int(input("Please enter a positive integer below 12(height): ")) 
Please enter a positive integer below 12(height): hw5_64.py(4):     outer_symbol = input("Enter a letter to be the border of the box: ")
Enter a letter to be the border of the box: hw5_64.py(5):     inner_symbol = input("Enter a letter to fill the box: ")
Enter a letter to fill the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_64.py(6):     for i in range(height):
hw5_64.py(7):         print(i)
0
hw5_64.py(6):     for i in range(height):
hw5_64.py(7):         print(i)
1
hw5_64.py(6):     for i in range(height):
hw5_64.py(7):         print(i)
2
hw5_64.py(6):     for i in range(height):
hw5_64.py(7):         print(i)
3
hw5_64.py(6):     for i in range(height):
hw5_64.py(7):         print(i)
4
hw5_64.py(6):     for i in range(height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
