 --- modulename: hw5_51, funcname: <module>
hw5_51.py(1): def main():
hw5_51.py(14): main()
 --- modulename: hw5_51, funcname: main
hw5_51.py(2):     widBox = int(input("Please enter ther width of the box:"))
Please enter ther width of the box: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_51.py(3):     heightBox = int(input("Please enter the height of the box:"))
Please enter the height of the box:hw5_51.py(4):     lineBox = input("Please enter a symbol for the box outline:")
Please enter a symbol for the box outline:hw5_51.py(5):     fillBox = input("Please enter a symbol for the box fill:")
Please enter a symbol for the box fill: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_51.py(6):     if widBox !=0 and heightBox !=0:
hw5_51.py(7):         print(widBox*lineBox)
$$$$$
hw5_51.py(8):         for i in range(heightBox-2):
hw5_51.py(9):             print(lineBox+(fillBox*(widBox-2))+lineBox)
$###$
hw5_51.py(8):         for i in range(heightBox-2):
hw5_51.py(9):             print(lineBox+(fillBox*(widBox-2))+lineBox)
$###$
hw5_51.py(8):         for i in range(heightBox-2):
hw5_51.py(9):             print(lineBox+(fillBox*(widBox-2))+lineBox)
$###$
hw5_51.py(8):         for i in range(heightBox-2):
hw5_51.py(10):         if heightBox != 1:
hw5_51.py(11):             print(widBox*lineBox)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
