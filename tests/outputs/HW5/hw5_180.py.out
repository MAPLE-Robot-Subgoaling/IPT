 --- modulename: hw5_180, funcname: <module>
hw5_180.py(1): def main():
hw5_180.py(11): main()
 --- modulename: hw5_180, funcname: main
hw5_180.py(2):     width = int(input("What is the width of the box? "))
What is the width of the box?  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_180.py(3):     height = int(input("What is the height of the box? "))
What is the height of the box? hw5_180.py(4):     border = input("What is the outside of the box made of? ")
What is the outside of the box made of? hw5_180.py(5):     fill = input("What is the inside of the box made of? ")
What is the inside of the box made of?  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_180.py(6):     for h in range(height):
hw5_180.py(7):         if h == 0 or h == height - 1:
hw5_180.py(8):             print(border*width)
$$$$$
hw5_180.py(6):     for h in range(height):
hw5_180.py(7):         if h == 0 or h == height - 1:
hw5_180.py(10):             print(border + fill*(width-2) + border)
$###$
hw5_180.py(6):     for h in range(height):
hw5_180.py(7):         if h == 0 or h == height - 1:
hw5_180.py(10):             print(border + fill*(width-2) + border)
$###$
hw5_180.py(6):     for h in range(height):
hw5_180.py(7):         if h == 0 or h == height - 1:
hw5_180.py(10):             print(border + fill*(width-2) + border)
$###$
hw5_180.py(6):     for h in range(height):
hw5_180.py(7):         if h == 0 or h == height - 1:
hw5_180.py(8):             print(border*width)
$$$$$
hw5_180.py(6):     for h in range(height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
