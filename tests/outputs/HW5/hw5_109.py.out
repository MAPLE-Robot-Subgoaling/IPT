 --- modulename: hw5_109, funcname: <module>
hw5_109.py(1): def main():
hw5_109.py(12): main()
 --- modulename: hw5_109, funcname: main
hw5_109.py(2):     widthBox = int(input("Please enter the width of the box:"))
Please enter the width of the box: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_109.py(3):     heightBox = int(input("Please enter the height of the box:"))
Please enter the height of the box:hw5_109.py(4):     symbolOutlined = input("Please enter a symbol for the box ouline:")
Please enter a symbol for the box ouline:hw5_109.py(5):     symbolFilled = input("Please enter a symbol for the box fill:")
Please enter a symbol for the box fill: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_109.py(6):     combine = symbolOutlined + (symbolFilled * (widthBox -2)) + symbolOutlined
hw5_109.py(7):     for everyline in range(heightBox): 
hw5_109.py(8):         if everyline == 0 or everyline == (heightBox - 1):            
hw5_109.py(9):             print(symbolOutlined* widthBox)
$$$$$
hw5_109.py(7):     for everyline in range(heightBox): 
hw5_109.py(8):         if everyline == 0 or everyline == (heightBox - 1):            
hw5_109.py(11):             print(combine)
$###$
hw5_109.py(7):     for everyline in range(heightBox): 
hw5_109.py(8):         if everyline == 0 or everyline == (heightBox - 1):            
hw5_109.py(11):             print(combine)
$###$
hw5_109.py(7):     for everyline in range(heightBox): 
hw5_109.py(8):         if everyline == 0 or everyline == (heightBox - 1):            
hw5_109.py(11):             print(combine)
$###$
hw5_109.py(7):     for everyline in range(heightBox): 
hw5_109.py(8):         if everyline == 0 or everyline == (heightBox - 1):            
hw5_109.py(9):             print(symbolOutlined* widthBox)
$$$$$
hw5_109.py(7):     for everyline in range(heightBox): 
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
