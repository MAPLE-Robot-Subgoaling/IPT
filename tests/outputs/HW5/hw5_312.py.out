 --- modulename: hw5_312, funcname: <module>
hw5_312.py(1): def main():
hw5_312.py(14): main()
 --- modulename: hw5_312, funcname: main
hw5_312.py(2):     width = input("Please enter the width of the box: ")
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_312.py(3):     width = int(width)
hw5_312.py(4):     height = input("Please enter the height of the box: ")
Please enter the height of the box: hw5_312.py(5):     height = int(height)
hw5_312.py(6):     outline = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_312.py(7):     fill = input("Please enter symbol for the box to be filled with: ")
Please enter symbol for the box to be filled with:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_312.py(8):     print(outline*width)
$$$$$
hw5_312.py(9):     if(height > 1):
hw5_312.py(10):         if(height > 2):
hw5_312.py(11):             for i in range(height-2):
hw5_312.py(12):                 print(outline + (fill*(width-2)) + outline)
$###$
hw5_312.py(11):             for i in range(height-2):
hw5_312.py(12):                 print(outline + (fill*(width-2)) + outline)
$###$
hw5_312.py(11):             for i in range(height-2):
hw5_312.py(12):                 print(outline + (fill*(width-2)) + outline)
$###$
hw5_312.py(11):             for i in range(height-2):
hw5_312.py(13):         print(outline*width)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
