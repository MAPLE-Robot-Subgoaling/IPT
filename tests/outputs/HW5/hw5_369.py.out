 --- modulename: hw5_369, funcname: <module>
hw5_369.py(1): def main():
hw5_369.py(12): main()
 --- modulename: hw5_369, funcname: main
hw5_369.py(2):     width = int(input("Please enter the width of the box:" ))
Please enter the width of the box: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_369.py(3):     height = int(input("Please enter the height of the box:" ))
Please enter the height of the box:hw5_369.py(4):     outline = input("Please enter a symbol for the box outline:" )
Please enter a symbol for the box outline:hw5_369.py(5):     filler = input("Please enter a symbol for the box fill:" )
Please enter a symbol for the box fill: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_369.py(6):     if height == 1:
hw5_369.py(8):     print(outline*width)
$$$$$
hw5_369.py(9):     for i in range(height-2):
hw5_369.py(10):         print(outline + (width-2)*filler + outline)
$###$
hw5_369.py(9):     for i in range(height-2):
hw5_369.py(10):         print(outline + (width-2)*filler + outline)
$###$
hw5_369.py(9):     for i in range(height-2):
hw5_369.py(10):         print(outline + (width-2)*filler + outline)
$###$
hw5_369.py(9):     for i in range(height-2):
hw5_369.py(11):     print(outline*width)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
