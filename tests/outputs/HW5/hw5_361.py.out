 --- modulename: hw5_361, funcname: <module>
hw5_361.py(1): def main():
hw5_361.py(15): main()
 --- modulename: hw5_361, funcname: main
hw5_361.py(2):     width=int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_361.py(3):     height=int(input("Please enter the heigh of the box: "))
Please enter the heigh of the box: hw5_361.py(4):     outline=input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_361.py(5):     fill=input("please enter a symbol for the box fill: ")
please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_361.py(6):     for b in range(1,height+1):
hw5_361.py(7):         if b==1 or b==height:
hw5_361.py(8):             print(outline*width)
$$$$$
hw5_361.py(6):     for b in range(1,height+1):
hw5_361.py(7):         if b==1 or b==height:
hw5_361.py(10):             filler=width-2
hw5_361.py(11):             if filler>0:
hw5_361.py(12):                 print(outline+(fill*filler)+outline)
$###$
hw5_361.py(6):     for b in range(1,height+1):
hw5_361.py(7):         if b==1 or b==height:
hw5_361.py(10):             filler=width-2
hw5_361.py(11):             if filler>0:
hw5_361.py(12):                 print(outline+(fill*filler)+outline)
$###$
hw5_361.py(6):     for b in range(1,height+1):
hw5_361.py(7):         if b==1 or b==height:
hw5_361.py(10):             filler=width-2
hw5_361.py(11):             if filler>0:
hw5_361.py(12):                 print(outline+(fill*filler)+outline)
$###$
hw5_361.py(6):     for b in range(1,height+1):
hw5_361.py(7):         if b==1 or b==height:
hw5_361.py(8):             print(outline*width)
$$$$$
hw5_361.py(6):     for b in range(1,height+1):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
