 --- modulename: hw5_490, funcname: <module>
hw5_490.py(1): def main():
hw5_490.py(21): main()
 --- modulename: hw5_490, funcname: main
hw5_490.py(2): 	width = int(input('Enter the width of the box: '))
Enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_490.py(3): 	height = int(input('Enter the height of the box: '))
Enter the height of the box: hw5_490.py(4): 	symOut = input('Enter the symbol for the outline: ')
Enter the symbol for the outline: hw5_490.py(5): 	symIn = input('Enter the symbol to fill in: ')
Enter the symbol to fill in:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_490.py(6): 	line = ''
hw5_490.py(7): 	Hrange = range(height)
hw5_490.py(8): 	Wrange = range(width)
hw5_490.py(9): 	for y in Hrange:
hw5_490.py(10): 		if Hrange[y] == 0 or Hrange[y] == (height - 1):
hw5_490.py(11): 			line = symOut * width
hw5_490.py(12): 			print(line)
$$$$$
hw5_490.py(9): 	for y in Hrange:
hw5_490.py(10): 		if Hrange[y] == 0 or Hrange[y] == (height - 1):
hw5_490.py(14): 			line = ''
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(17): 					line = line + symOut
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(19): 					line = line + symIn
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(19): 					line = line + symIn
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(19): 					line = line + symIn
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(17): 					line = line + symOut
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(20): 			print(line)
$###$
hw5_490.py(9): 	for y in Hrange:
hw5_490.py(10): 		if Hrange[y] == 0 or Hrange[y] == (height - 1):
hw5_490.py(14): 			line = ''
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(17): 					line = line + symOut
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(19): 					line = line + symIn
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(19): 					line = line + symIn
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(19): 					line = line + symIn
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(17): 					line = line + symOut
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(20): 			print(line)
$###$
hw5_490.py(9): 	for y in Hrange:
hw5_490.py(10): 		if Hrange[y] == 0 or Hrange[y] == (height - 1):
hw5_490.py(14): 			line = ''
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(17): 					line = line + symOut
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(19): 					line = line + symIn
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(19): 					line = line + symIn
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(19): 					line = line + symIn
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(16): 				if Wrange[x] == 0 or Wrange[x] == (width - 1):
hw5_490.py(17): 					line = line + symOut
hw5_490.py(15): 			for x in Wrange:
hw5_490.py(20): 			print(line)
$###$
hw5_490.py(9): 	for y in Hrange:
hw5_490.py(10): 		if Hrange[y] == 0 or Hrange[y] == (height - 1):
hw5_490.py(11): 			line = symOut * width
hw5_490.py(12): 			print(line)
$$$$$
hw5_490.py(9): 	for y in Hrange:
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
