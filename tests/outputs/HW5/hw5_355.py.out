 --- modulename: hw5_355, funcname: <module>
hw5_355.py(1): def main():
hw5_355.py(14): main()
 --- modulename: hw5_355, funcname: main
hw5_355.py(2):     widthOfBox = int(input("Please enter the width of the box:"))
Please enter the width of the box: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_355.py(3):     heightOfBox=int(input("Please enter the height of the box:"))
Please enter the height of the box:hw5_355.py(4):     symbolForBoxOutline= str(input("Please enter a symbol for the box outline:"))
Please enter a symbol for the box outline:hw5_355.py(5):     symbolForBoxFill= str(input("Please enter a symbol for the box fill:"))
Please enter a symbol for the box fill: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_355.py(6):     print()

hw5_355.py(7):     for i in range(1,heightOfBox,1):
hw5_355.py(8):         if i==1:
hw5_355.py(9):             print(symbolForBoxOutline,symbolForBoxOutline * (widthOfBox-2),symbolForBoxOutline)
$ $$$ $
hw5_355.py(7):     for i in range(1,heightOfBox,1):
hw5_355.py(8):         if i==1:
hw5_355.py(10):         elif  i< heightOfBox :
hw5_355.py(11):             print(symbolForBoxOutline, symbolForBoxFill*(widthOfBox-2), symbolForBoxOutline)
$ ### $
hw5_355.py(7):     for i in range(1,heightOfBox,1):
hw5_355.py(8):         if i==1:
hw5_355.py(10):         elif  i< heightOfBox :
hw5_355.py(11):             print(symbolForBoxOutline, symbolForBoxFill*(widthOfBox-2), symbolForBoxOutline)
$ ### $
hw5_355.py(7):     for i in range(1,heightOfBox,1):
hw5_355.py(8):         if i==1:
hw5_355.py(10):         elif  i< heightOfBox :
hw5_355.py(11):             print(symbolForBoxOutline, symbolForBoxFill*(widthOfBox-2), symbolForBoxOutline)
$ ### $
hw5_355.py(7):     for i in range(1,heightOfBox,1):
hw5_355.py(12):     print(symbolForBoxOutline,symbolForBoxOutline * (widthOfBox-2),symbolForBoxOutline)
$ $$$ $
hw5_355.py(13):     print()

 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
