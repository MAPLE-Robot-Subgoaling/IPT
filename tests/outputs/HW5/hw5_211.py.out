 --- modulename: hw5_211, funcname: <module>
hw5_211.py(1): def main():
hw5_211.py(16): main()
 --- modulename: hw5_211, funcname: main
hw5_211.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_211.py(3):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_211.py(4):     outline = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_211.py(5):     fill = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_211.py(6):     if(height == 0 or height == 1):
hw5_211.py(8):     if(height == 2):
hw5_211.py(11):     if(height > 2):
hw5_211.py(12):         print(outline * width)
$$$$$
hw5_211.py(13):         for num in range(0, height - 2):
hw5_211.py(14):             print(outline + (fill * (width - 2)) + outline)
$###$
hw5_211.py(13):         for num in range(0, height - 2):
hw5_211.py(14):             print(outline + (fill * (width - 2)) + outline)
$###$
hw5_211.py(13):         for num in range(0, height - 2):
hw5_211.py(14):             print(outline + (fill * (width - 2)) + outline)
$###$
hw5_211.py(13):         for num in range(0, height - 2):
hw5_211.py(15):         print(outline * width)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
