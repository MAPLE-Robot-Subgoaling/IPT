 --- modulename: hw5_448, funcname: <module>
hw5_448.py(1): def main():
hw5_448.py(13): main()
 --- modulename: hw5_448, funcname: main
hw5_448.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_448.py(3):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_448.py(4):     symbol = input("Please enter the symbol for the box outline: ")
Please enter the symbol for the box outline: hw5_448.py(5):     filling = input("Please enter the symbol for the box filling: ")
Please enter the symbol for the box filling:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_448.py(6):     fillWidth = width - 2
hw5_448.py(7):     for box in range(1,height):
hw5_448.py(8):         if box == 1:
hw5_448.py(9):             print (symbol*width)
$$$$$
hw5_448.py(7):     for box in range(1,height):
hw5_448.py(8):         if box == 1:
hw5_448.py(11):             print (symbol+(fillWidth*filling)+symbol)
$###$
hw5_448.py(7):     for box in range(1,height):
hw5_448.py(8):         if box == 1:
hw5_448.py(11):             print (symbol+(fillWidth*filling)+symbol)
$###$
hw5_448.py(7):     for box in range(1,height):
hw5_448.py(8):         if box == 1:
hw5_448.py(11):             print (symbol+(fillWidth*filling)+symbol)
$###$
hw5_448.py(7):     for box in range(1,height):
hw5_448.py(12):     print(symbol*width)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
