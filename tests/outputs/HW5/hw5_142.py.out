 --- modulename: hw5_142, funcname: <module>
hw5_142.py(1): def main():
hw5_142.py(17): main()
 --- modulename: hw5_142, funcname: main
hw5_142.py(2):     x = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_142.py(3):     y = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_142.py(4):     a = str(input("Please enter a symbol for the box outline: "))
Please enter a symbol for the box outline: hw5_142.py(5):     b = str(input("Please enter a symbol for the box fill: "))
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_142.py(6):     for n in range(0, y):
hw5_142.py(7):         c = ""
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(10):                 c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(10):                 c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(10):                 c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(10):                 c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(10):                 c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(16):         print(c)
$$$$$
hw5_142.py(6):     for n in range(0, y):
hw5_142.py(7):         c = ""
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(13):                     c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(15):                     c = c + b
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(15):                     c = c + b
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(15):                     c = c + b
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(13):                     c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(16):         print(c)
$###$
hw5_142.py(6):     for n in range(0, y):
hw5_142.py(7):         c = ""
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(13):                     c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(15):                     c = c + b
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(15):                     c = c + b
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(15):                     c = c + b
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(13):                     c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(16):         print(c)
$###$
hw5_142.py(6):     for n in range(0, y):
hw5_142.py(7):         c = ""
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(13):                     c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(15):                     c = c + b
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(15):                     c = c + b
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(15):                     c = c + b
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(12):                 if m == 0 or m == (x - 1):
hw5_142.py(13):                     c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(16):         print(c)
$###$
hw5_142.py(6):     for n in range(0, y):
hw5_142.py(7):         c = ""
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(10):                 c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(10):                 c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(10):                 c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(10):                 c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(9):             if n == 0 or n == (y - 1):
hw5_142.py(10):                 c = c + a
hw5_142.py(8):         for m in range(0, x):
hw5_142.py(16):         print(c)
$$$$$
hw5_142.py(6):     for n in range(0, y):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
