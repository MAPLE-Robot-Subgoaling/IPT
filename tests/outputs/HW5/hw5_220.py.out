 --- modulename: hw5_220, funcname: <module>
hw5_220.py(1): def main():
hw5_220.py(19): main()
 --- modulename: hw5_220, funcname: main
hw5_220.py(2):     width=(int)(input("Please enter the width of the box:"))
Please enter the width of the box: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_220.py(3):     height=(int)(input("Please enter the height of the box:"))
Please enter the height of the box:hw5_220.py(4):     outline=(input("Please enter a symbol for the box outline:"))
Please enter a symbol for the box outline:hw5_220.py(5):     fill=(input("Please enter a symbol for the box fill:"))
Please enter a symbol for the box fill: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_220.py(6):     top_bottom=""
hw5_220.py(7):     middle=""
hw5_220.py(8):     for x in range(0,width+1):
hw5_220.py(9):         top_bottom=top_bottom+outline
hw5_220.py(8):     for x in range(0,width+1):
hw5_220.py(9):         top_bottom=top_bottom+outline
hw5_220.py(8):     for x in range(0,width+1):
hw5_220.py(10):     for x in range(0,width-2):
hw5_220.py(14):     middle=outline+middle+outline
hw5_220.py(15):     print(top_bottom)
%%
hw5_220.py(16):     for x in range(0,height-2):
hw5_220.py(18):     print(top_bottom)
%%
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
