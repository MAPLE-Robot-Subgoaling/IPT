 --- modulename: hw5_43, funcname: <module>
hw5_43.py(1): def main():
hw5_43.py(11): main()
 --- modulename: hw5_43, funcname: main
hw5_43.py(2):     width = int(input("Width of box: "))
Width of box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_43.py(3):     height = int(input("Height of box: "))
Height of box: hw5_43.py(4):     outline = str(input("Symbol for box outline: "))
Symbol for box outline: hw5_43.py(5):     fill = str(input("Symbol for box fill: "))
Symbol for box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_43.py(6):     for y in range (0, height):
hw5_43.py(7):         if (y == 0 or y == height-1):
hw5_43.py(8):             print(outline * width)
$$$$$
hw5_43.py(6):     for y in range (0, height):
hw5_43.py(7):         if (y == 0 or y == height-1):
hw5_43.py(10):             print(outline + fill * (width - 2) + outline)
$###$
hw5_43.py(6):     for y in range (0, height):
hw5_43.py(7):         if (y == 0 or y == height-1):
hw5_43.py(10):             print(outline + fill * (width - 2) + outline)
$###$
hw5_43.py(6):     for y in range (0, height):
hw5_43.py(7):         if (y == 0 or y == height-1):
hw5_43.py(10):             print(outline + fill * (width - 2) + outline)
$###$
hw5_43.py(6):     for y in range (0, height):
hw5_43.py(7):         if (y == 0 or y == height-1):
hw5_43.py(8):             print(outline * width)
$$$$$
hw5_43.py(6):     for y in range (0, height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
