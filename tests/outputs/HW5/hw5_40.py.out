 --- modulename: hw5_40, funcname: <module>
hw5_40.py(1): def main():
hw5_40.py(13): main()
 --- modulename: hw5_40, funcname: main
hw5_40.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_40.py(3):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_40.py(4):     outline = input("Please enter the symbol for the box outline: ")
Please enter the symbol for the box outline: hw5_40.py(5):     filler = input("Please enter the symbol for the box outline: ")
Please enter the symbol for the box outline:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_40.py(6):     INSIDE = width - 2
hw5_40.py(7):     for h in range(height):
hw5_40.py(8):         if h == 0 or h == height - 1:
hw5_40.py(9):             print(outline*width)
$$$$$
hw5_40.py(7):     for h in range(height):
hw5_40.py(8):         if h == 0 or h == height - 1:
hw5_40.py(11):             print(outline + filler*INSIDE + outline)
$###$
hw5_40.py(7):     for h in range(height):
hw5_40.py(8):         if h == 0 or h == height - 1:
hw5_40.py(11):             print(outline + filler*INSIDE + outline)
$###$
hw5_40.py(7):     for h in range(height):
hw5_40.py(8):         if h == 0 or h == height - 1:
hw5_40.py(11):             print(outline + filler*INSIDE + outline)
$###$
hw5_40.py(7):     for h in range(height):
hw5_40.py(8):         if h == 0 or h == height - 1:
hw5_40.py(9):             print(outline*width)
$$$$$
hw5_40.py(7):     for h in range(height):
hw5_40.py(12):     print()

 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
