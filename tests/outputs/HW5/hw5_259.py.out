 --- modulename: hw5_259, funcname: <module>
hw5_259.py(1): def main():
hw5_259.py(20): main()
 --- modulename: hw5_259, funcname: main
hw5_259.py(2):     BOTTOM_LIST = 0
hw5_259.py(3):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_259.py(4):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_259.py(5):     outline = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_259.py(6):     fill = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_259.py(7):     boxString = ""
hw5_259.py(8):     for i in list(range(BOTTOM_LIST, height)):
hw5_259.py(9):         if i == BOTTOM_LIST or i == height - 1:
hw5_259.py(10):             boxString = outline * width
hw5_259.py(11):             print(boxString)
$$$$$
hw5_259.py(19):         boxString = ""
hw5_259.py(8):     for i in list(range(BOTTOM_LIST, height)):
hw5_259.py(9):         if i == BOTTOM_LIST or i == height - 1:
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(15):                     boxString += outline
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(17):                     boxString += fill
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(17):                     boxString += fill
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(17):                     boxString += fill
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(15):                     boxString += outline
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(18):             print(boxString)
$###$
hw5_259.py(19):         boxString = ""
hw5_259.py(8):     for i in list(range(BOTTOM_LIST, height)):
hw5_259.py(9):         if i == BOTTOM_LIST or i == height - 1:
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(15):                     boxString += outline
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(17):                     boxString += fill
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(17):                     boxString += fill
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(17):                     boxString += fill
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(15):                     boxString += outline
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(18):             print(boxString)
$###$
hw5_259.py(19):         boxString = ""
hw5_259.py(8):     for i in list(range(BOTTOM_LIST, height)):
hw5_259.py(9):         if i == BOTTOM_LIST or i == height - 1:
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(15):                     boxString += outline
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(17):                     boxString += fill
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(17):                     boxString += fill
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(17):                     boxString += fill
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(14):                 if j == BOTTOM_LIST or j == width - 1:
hw5_259.py(15):                     boxString += outline
hw5_259.py(13):             for j in list(range(BOTTOM_LIST, width)):
hw5_259.py(18):             print(boxString)
$###$
hw5_259.py(19):         boxString = ""
hw5_259.py(8):     for i in list(range(BOTTOM_LIST, height)):
hw5_259.py(9):         if i == BOTTOM_LIST or i == height - 1:
hw5_259.py(10):             boxString = outline * width
hw5_259.py(11):             print(boxString)
$$$$$
hw5_259.py(19):         boxString = ""
hw5_259.py(8):     for i in list(range(BOTTOM_LIST, height)):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
