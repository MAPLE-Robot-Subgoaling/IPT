 --- modulename: hw5_427, funcname: <module>
hw5_427.py(1): def main():
hw5_427.py(12): main()
 --- modulename: hw5_427, funcname: main
hw5_427.py(2):     width = int(input("Please input the width "))
Please input the width  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_427.py(3):     height = int(input("Please input the height "))
Please input the height hw5_427.py(4):     outSymbol = input("Please provide a symbol for the borders ")
Please provide a symbol for the borders hw5_427.py(5):     inSymbol = input("Please provide a symbol for the interior ")
Please provide a symbol for the interior  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_427.py(6):     newHeight = height - 2
hw5_427.py(7):     print(width * outSymbol)
$$$$$
hw5_427.py(8):     for c in range(0, newHeight):
hw5_427.py(9):         if c > 0 or c < newHeight:
hw5_427.py(10):             print(outSymbol + (width-2) * inSymbol + outSymbol)
$###$
hw5_427.py(8):     for c in range(0, newHeight):
hw5_427.py(9):         if c > 0 or c < newHeight:
hw5_427.py(10):             print(outSymbol + (width-2) * inSymbol + outSymbol)
$###$
hw5_427.py(8):     for c in range(0, newHeight):
hw5_427.py(9):         if c > 0 or c < newHeight:
hw5_427.py(10):             print(outSymbol + (width-2) * inSymbol + outSymbol)
$###$
hw5_427.py(8):     for c in range(0, newHeight):
hw5_427.py(11):     print(width * outSymbol)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
