 --- modulename: hw5_32, funcname: <module>
hw5_32.py(1): def main():
hw5_32.py(12): main()
 --- modulename: hw5_32, funcname: main
hw5_32.py(2):     boxWidth = int(input( "Please enter the width of the box:  "))
Please enter the width of the box:   --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_32.py(3):     boxHeight = int(input( "Please enter the height of the box:  "))
Please enter the height of the box:  hw5_32.py(4):     boxOutline = input( "Please enter a symbol for the box outline:  ")
Please enter a symbol for the box outline:  hw5_32.py(5):     boxFill = input( "Please enter a symbol for the box fill:  ")
Please enter a symbol for the box fill:   --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_32.py(6):     OUTLINE = 2
hw5_32.py(7):     print (boxOutline*boxWidth)
$$$$$
hw5_32.py(8):     for i in range(0,boxHeight-OUTLINE):
hw5_32.py(9):         print (boxOutline+(boxFill*(boxWidth-OUTLINE))+boxOutline)
$###$
hw5_32.py(8):     for i in range(0,boxHeight-OUTLINE):
hw5_32.py(9):         print (boxOutline+(boxFill*(boxWidth-OUTLINE))+boxOutline)
$###$
hw5_32.py(8):     for i in range(0,boxHeight-OUTLINE):
hw5_32.py(9):         print (boxOutline+(boxFill*(boxWidth-OUTLINE))+boxOutline)
$###$
hw5_32.py(8):     for i in range(0,boxHeight-OUTLINE):
hw5_32.py(10):     if boxHeight > 1:
hw5_32.py(11):         print (boxOutline*boxWidth)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
