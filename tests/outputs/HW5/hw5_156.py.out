 --- modulename: hw5_156, funcname: <module>
hw5_156.py(1): def main():
hw5_156.py(11): main()
 --- modulename: hw5_156, funcname: main
hw5_156.py(2):     width = int(input("Enter the width of your box: "))
Enter the width of your box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_156.py(3):     height = int(input("Enter the height of your box: "))
Enter the height of your box: hw5_156.py(4):     outline = input("Enter the symbol for the outline: ")
Enter the symbol for the outline: hw5_156.py(5):     fill = input("Enter the symbol for the filling: ")
Enter the symbol for the filling:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_156.py(6):     for i in range(0, height):
hw5_156.py(7):         if(i == 0 or i == height - 1):
hw5_156.py(8):             print(outline * width)
$$$$$
hw5_156.py(6):     for i in range(0, height):
hw5_156.py(7):         if(i == 0 or i == height - 1):
hw5_156.py(10):             print(outline + "" + (fill * (width - 2)) + "" + outline)
$###$
hw5_156.py(6):     for i in range(0, height):
hw5_156.py(7):         if(i == 0 or i == height - 1):
hw5_156.py(10):             print(outline + "" + (fill * (width - 2)) + "" + outline)
$###$
hw5_156.py(6):     for i in range(0, height):
hw5_156.py(7):         if(i == 0 or i == height - 1):
hw5_156.py(10):             print(outline + "" + (fill * (width - 2)) + "" + outline)
$###$
hw5_156.py(6):     for i in range(0, height):
hw5_156.py(7):         if(i == 0 or i == height - 1):
hw5_156.py(8):             print(outline * width)
$$$$$
hw5_156.py(6):     for i in range(0, height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
