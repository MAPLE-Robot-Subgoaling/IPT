 --- modulename: hw5_282, funcname: <module>
hw5_282.py(1): def main():
hw5_282.py(11): main()
 --- modulename: hw5_282, funcname: main
hw5_282.py(2):     wBox=int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_282.py(3):     hBox=int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_282.py(4):     symbOut=input("Please enter the symbol for the box outline: ")
Please enter the symbol for the box outline: hw5_282.py(5):     symbIn=input("Please enter the symbol for the box fill: ")
Please enter the symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_282.py(6):     print(symbOut*wBox)
$$$$$
hw5_282.py(7):     for h in range(0,(hBox-2)):
hw5_282.py(8):         print(symbOut+(symbIn*(wBox-2))+symbOut)
$###$
hw5_282.py(7):     for h in range(0,(hBox-2)):
hw5_282.py(8):         print(symbOut+(symbIn*(wBox-2))+symbOut)
$###$
hw5_282.py(7):     for h in range(0,(hBox-2)):
hw5_282.py(8):         print(symbOut+(symbIn*(wBox-2))+symbOut)
$###$
hw5_282.py(7):     for h in range(0,(hBox-2)):
hw5_282.py(9):     if(hBox>1):
hw5_282.py(10):         print(symbOut*wBox)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
