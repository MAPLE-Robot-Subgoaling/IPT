 --- modulename: hw5_100, funcname: <module>
hw5_100.py(1): def main():
hw5_100.py(17): main()
 --- modulename: hw5_100, funcname: main
hw5_100.py(2):     width  = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_100.py(3):     length = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_100.py(4):     outer  = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_100.py(5):     inner  = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_100.py(6):     inwid=width-2
hw5_100.py(7):     inlen=length-2
hw5_100.py(8):     print(outer*width) 
$$$$$
hw5_100.py(9):     if length > 2:
hw5_100.py(10):         for n in range(inlen):
hw5_100.py(11):             if width > 1:
hw5_100.py(12):                 print(outer + (inner * inwid) + outer)
$###$
hw5_100.py(10):         for n in range(inlen):
hw5_100.py(11):             if width > 1:
hw5_100.py(12):                 print(outer + (inner * inwid) + outer)
$###$
hw5_100.py(10):         for n in range(inlen):
hw5_100.py(11):             if width > 1:
hw5_100.py(12):                 print(outer + (inner * inwid) + outer)
$###$
hw5_100.py(10):         for n in range(inlen):
hw5_100.py(15):     if length >= 2:
hw5_100.py(16):         print(outer * width)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
