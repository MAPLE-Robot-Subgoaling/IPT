 --- modulename: hw5_45, funcname: <module>
hw5_45.py(1): def main():
hw5_45.py(16): main()
 --- modulename: hw5_45, funcname: main
hw5_45.py(2):     BOARDER = 2
hw5_45.py(3):     boxWidth = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_45.py(4):     boxHeight = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_45.py(5):     boxOut = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_45.py(6):     boxFill = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_45.py(7):     print(boxOut * boxWidth)
$$$$$
hw5_45.py(8):     fillWidth = boxWidth - BOARDER
hw5_45.py(9):     fillHeight = boxHeight - BOARDER
hw5_45.py(10):     fillList = list(range(fillHeight))
hw5_45.py(11):     for i in fillList:
hw5_45.py(12):         i = (boxOut + (boxFill * fillWidth) + boxOut)
hw5_45.py(13):         print(i)
$###$
hw5_45.py(11):     for i in fillList:
hw5_45.py(12):         i = (boxOut + (boxFill * fillWidth) + boxOut)
hw5_45.py(13):         print(i)
$###$
hw5_45.py(11):     for i in fillList:
hw5_45.py(12):         i = (boxOut + (boxFill * fillWidth) + boxOut)
hw5_45.py(13):         print(i)
$###$
hw5_45.py(11):     for i in fillList:
hw5_45.py(14):     if boxHeight > 1:
hw5_45.py(15):         print(boxOut * boxWidth)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
