 --- modulename: hw5_177, funcname: <module>
hw5_177.py(1): def main():
hw5_177.py(11): main()
 --- modulename: hw5_177, funcname: main
hw5_177.py(2):     width=int(input("Enter the width of the box "))
Enter the width of the box  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_177.py(3):     height=int(input("Enter the height of the box "))
Enter the height of the box hw5_177.py(4):     symbol1=input("Enter the outer symbol of the box ")
Enter the outer symbol of the box hw5_177.py(5):     symbol2=input("Enter the inner symbol of the box ")
Enter the inner symbol of the box  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_177.py(6):     for n in range(height):
hw5_177.py(7):         if n==0 or n==height-1:
hw5_177.py(8):             print(symbol1*width)
$$$$$
hw5_177.py(6):     for n in range(height):
hw5_177.py(7):         if n==0 or n==height-1:
hw5_177.py(10):             print(symbol1+(symbol2*(width-2))+symbol1)
$###$
hw5_177.py(6):     for n in range(height):
hw5_177.py(7):         if n==0 or n==height-1:
hw5_177.py(10):             print(symbol1+(symbol2*(width-2))+symbol1)
$###$
hw5_177.py(6):     for n in range(height):
hw5_177.py(7):         if n==0 or n==height-1:
hw5_177.py(10):             print(symbol1+(symbol2*(width-2))+symbol1)
$###$
hw5_177.py(6):     for n in range(height):
hw5_177.py(7):         if n==0 or n==height-1:
hw5_177.py(8):             print(symbol1*width)
$$$$$
hw5_177.py(6):     for n in range(height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
