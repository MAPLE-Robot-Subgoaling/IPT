 --- modulename: hw5_484, funcname: <module>
hw5_484.py(1): def main():
hw5_484.py(11): main()
 --- modulename: hw5_484, funcname: main
hw5_484.py(2):      userWidth = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_484.py(3):      userHeight = int(input("Please enter the height of the box:  "))
Please enter the height of the box:  hw5_484.py(4):      userOutline = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_484.py(5):      userFill = input("Please enter a symbol for the box fill")
Please enter a symbol for the box fill --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_484.py(6):      for row in range(userHeight) :
hw5_484.py(7):          if row == 0 or row == (userHeight - 1):
hw5_484.py(8):              print(userOutline *  userWidth)
$$$$$
hw5_484.py(6):      for row in range(userHeight) :
hw5_484.py(7):          if row == 0 or row == (userHeight - 1):
hw5_484.py(10):                  print(userOutline + (userFill) * (userWidth - 2) + userOutline)
$###$
hw5_484.py(6):      for row in range(userHeight) :
hw5_484.py(7):          if row == 0 or row == (userHeight - 1):
hw5_484.py(10):                  print(userOutline + (userFill) * (userWidth - 2) + userOutline)
$###$
hw5_484.py(6):      for row in range(userHeight) :
hw5_484.py(7):          if row == 0 or row == (userHeight - 1):
hw5_484.py(10):                  print(userOutline + (userFill) * (userWidth - 2) + userOutline)
$###$
hw5_484.py(6):      for row in range(userHeight) :
hw5_484.py(7):          if row == 0 or row == (userHeight - 1):
hw5_484.py(8):              print(userOutline *  userWidth)
$$$$$
hw5_484.py(6):      for row in range(userHeight) :
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
