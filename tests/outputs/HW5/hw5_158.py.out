 --- modulename: hw5_158, funcname: <module>
hw5_158.py(1): def main():
hw5_158.py(25): main()
 --- modulename: hw5_158, funcname: main
hw5_158.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_158.py(3):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_158.py(4):     boxOutline = input("Please enter a symbol for the box outline: ")
Please enter a symbol for the box outline: hw5_158.py(5):     boxFill = input("Please enter a symbol of the box fill: ")
Please enter a symbol of the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_158.py(6):     topAndBot = []
hw5_158.py(7):     middle = []
hw5_158.py(8):     topRow = ""
hw5_158.py(9):     midRow = ""
hw5_158.py(10):     for w in range(width):
hw5_158.py(11):         topAndBot.append(boxOutline)
hw5_158.py(12):         if w == 0 or w == (width - 1):
hw5_158.py(13):             middle.append(boxOutline)
hw5_158.py(10):     for w in range(width):
hw5_158.py(11):         topAndBot.append(boxOutline)
hw5_158.py(12):         if w == 0 or w == (width - 1):
hw5_158.py(15):             middle.append(boxFill)
hw5_158.py(10):     for w in range(width):
hw5_158.py(11):         topAndBot.append(boxOutline)
hw5_158.py(12):         if w == 0 or w == (width - 1):
hw5_158.py(15):             middle.append(boxFill)
hw5_158.py(10):     for w in range(width):
hw5_158.py(11):         topAndBot.append(boxOutline)
hw5_158.py(12):         if w == 0 or w == (width - 1):
hw5_158.py(15):             middle.append(boxFill)
hw5_158.py(10):     for w in range(width):
hw5_158.py(11):         topAndBot.append(boxOutline)
hw5_158.py(12):         if w == 0 or w == (width - 1):
hw5_158.py(13):             middle.append(boxOutline)
hw5_158.py(10):     for w in range(width):
hw5_158.py(16):     for l in range(len(topAndBot)):
hw5_158.py(17):         topRow = topRow + topAndBot[l]
hw5_158.py(16):     for l in range(len(topAndBot)):
hw5_158.py(17):         topRow = topRow + topAndBot[l]
hw5_158.py(16):     for l in range(len(topAndBot)):
hw5_158.py(17):         topRow = topRow + topAndBot[l]
hw5_158.py(16):     for l in range(len(topAndBot)):
hw5_158.py(17):         topRow = topRow + topAndBot[l]
hw5_158.py(16):     for l in range(len(topAndBot)):
hw5_158.py(17):         topRow = topRow + topAndBot[l]
hw5_158.py(16):     for l in range(len(topAndBot)):
hw5_158.py(18):     for l in range(len(middle)):
hw5_158.py(19):         midRow = midRow + middle[l]
hw5_158.py(18):     for l in range(len(middle)):
hw5_158.py(19):         midRow = midRow + middle[l]
hw5_158.py(18):     for l in range(len(middle)):
hw5_158.py(19):         midRow = midRow + middle[l]
hw5_158.py(18):     for l in range(len(middle)):
hw5_158.py(19):         midRow = midRow + middle[l]
hw5_158.py(18):     for l in range(len(middle)):
hw5_158.py(19):         midRow = midRow + middle[l]
hw5_158.py(18):     for l in range(len(middle)):
hw5_158.py(20):     for h in range(height):
hw5_158.py(21):         if h == 0 or h == (height - 1):
hw5_158.py(22):             print(topRow)
$$$$$
hw5_158.py(20):     for h in range(height):
hw5_158.py(21):         if h == 0 or h == (height - 1):
hw5_158.py(24):             print(midRow)            
$###$
hw5_158.py(20):     for h in range(height):
hw5_158.py(21):         if h == 0 or h == (height - 1):
hw5_158.py(24):             print(midRow)            
$###$
hw5_158.py(20):     for h in range(height):
hw5_158.py(21):         if h == 0 or h == (height - 1):
hw5_158.py(24):             print(midRow)            
$###$
hw5_158.py(20):     for h in range(height):
hw5_158.py(21):         if h == 0 or h == (height - 1):
hw5_158.py(22):             print(topRow)
$$$$$
hw5_158.py(20):     for h in range(height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
