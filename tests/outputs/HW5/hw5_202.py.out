 --- modulename: hw5_202, funcname: <module>
hw5_202.py(1): def main():
hw5_202.py(12): main()
 --- modulename: hw5_202, funcname: main
hw5_202.py(2):     width = int(input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_202.py(3):     height = int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_202.py(4):     symbolOut = input("Please enter the symbol for the box outline: ")
Please enter the symbol for the box outline: hw5_202.py(5):     symbolIn = input("Please enter a symbol for the box fill: ")
Please enter a symbol for the box fill:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_202.py(6):     width2 = (width - 2)
hw5_202.py(7):     symbol1 = (width * symbolOut)
hw5_202.py(8):     print(symbol1)
$$$$$
hw5_202.py(9):     for i in range(1, height):
hw5_202.py(10):         print(symbolOut + symbolIn * width2 + symbolOut)
$###$
hw5_202.py(9):     for i in range(1, height):
hw5_202.py(10):         print(symbolOut + symbolIn * width2 + symbolOut)
$###$
hw5_202.py(9):     for i in range(1, height):
hw5_202.py(10):         print(symbolOut + symbolIn * width2 + symbolOut)
$###$
hw5_202.py(9):     for i in range(1, height):
hw5_202.py(10):         print(symbolOut + symbolIn * width2 + symbolOut)
$###$
hw5_202.py(9):     for i in range(1, height):
hw5_202.py(11):     print(symbol1)
$$$$$
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
