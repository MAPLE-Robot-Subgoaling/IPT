 --- modulename: hw5_173, funcname: <module>
hw5_173.py(1): def main():
hw5_173.py(3): def drawBox():
hw5_173.py(20): main()
 --- modulename: hw5_173, funcname: main
hw5_173.py(2):     drawBox()
 --- modulename: hw5_173, funcname: drawBox
hw5_173.py(4):     width = int(input("What is the width of the box? "))
What is the width of the box?  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_173.py(5):     height = int(input("What is the height of the box? "))
What is the height of the box? hw5_173.py(6):     outline = input("What symbol would you like for the outline? ")
What symbol would you like for the outline? hw5_173.py(7):     fill = input("What symbol would you like for the fill? ")
What symbol would you like for the fill?  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_173.py(8):     row = ""
hw5_173.py(9):     for y in range(height):
hw5_173.py(10):         if(y == 0 or y == range(height)[-1]):
hw5_173.py(11):             print(outline*width)
$$$$$
hw5_173.py(9):     for y in range(height):
hw5_173.py(10):         if(y == 0 or y == range(height)[-1]):
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(15):                     row = row + outline
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(17):                     row = row + fill
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(17):                     row = row + fill
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(17):                     row = row + fill
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(15):                     row = row + outline
hw5_173.py(13):             for x in range(width):
hw5_173.py(18):             print(row)
$###$
hw5_173.py(19):             row = ""
hw5_173.py(9):     for y in range(height):
hw5_173.py(10):         if(y == 0 or y == range(height)[-1]):
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(15):                     row = row + outline
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(17):                     row = row + fill
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(17):                     row = row + fill
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(17):                     row = row + fill
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(15):                     row = row + outline
hw5_173.py(13):             for x in range(width):
hw5_173.py(18):             print(row)
$###$
hw5_173.py(19):             row = ""
hw5_173.py(9):     for y in range(height):
hw5_173.py(10):         if(y == 0 or y == range(height)[-1]):
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(15):                     row = row + outline
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(17):                     row = row + fill
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(17):                     row = row + fill
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(17):                     row = row + fill
hw5_173.py(13):             for x in range(width):
hw5_173.py(14):                 if(x == 0 or x == range(width)[-1]):
hw5_173.py(15):                     row = row + outline
hw5_173.py(13):             for x in range(width):
hw5_173.py(18):             print(row)
$###$
hw5_173.py(19):             row = ""
hw5_173.py(9):     for y in range(height):
hw5_173.py(10):         if(y == 0 or y == range(height)[-1]):
hw5_173.py(11):             print(outline*width)
$$$$$
hw5_173.py(9):     for y in range(height):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
