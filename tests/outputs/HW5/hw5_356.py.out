 --- modulename: hw5_356, funcname: <module>
hw5_356.py(1): def main(): 
hw5_356.py(24): main() 
 --- modulename: hw5_356, funcname: main
hw5_356.py(2):     box = []
hw5_356.py(3):     columns =int( input("Please enter the width of the box: "))
Please enter the width of the box:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_356.py(4):     rows =int(input("Please enter the height of the box: "))
Please enter the height of the box: hw5_356.py(5):     outline = str(input("What symbol will the box be outlined in? "))
What symbol will the box be outlined in? hw5_356.py(6):     fill = str(input("What symbol will the box be filled with? "))
What symbol will the box be filled with?  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw5_356.py(7):     newRows = rows - 1 
hw5_356.py(8):     newColumns = columns - 1 
hw5_356.py(9):     for n in range(rows):
hw5_356.py(10):         innerList = []
hw5_356.py(11):         printList = ""
hw5_356.py(12):         box.append(innerList)
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(19):                     printList = printList + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(17):                     printList = printList + " " + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(17):                     printList = printList + " " + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(17):                     printList = printList + " " + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(17):                     printList = printList + " " + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(23):         print(printList)
$ $ $ $ $
hw5_356.py(9):     for n in range(rows):
hw5_356.py(10):         innerList = []
hw5_356.py(11):         printList = ""
hw5_356.py(12):         box.append(innerList)
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(19):                     printList = printList + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(21):                 innerList.append(fill) 
hw5_356.py(22):                 printList = printList + " " + fill
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(21):                 innerList.append(fill) 
hw5_356.py(22):                 printList = printList + " " + fill
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(21):                 innerList.append(fill) 
hw5_356.py(22):                 printList = printList + " " + fill
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(17):                     printList = printList + " " + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(23):         print(printList)
$ # # # $
hw5_356.py(9):     for n in range(rows):
hw5_356.py(10):         innerList = []
hw5_356.py(11):         printList = ""
hw5_356.py(12):         box.append(innerList)
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(19):                     printList = printList + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(21):                 innerList.append(fill) 
hw5_356.py(22):                 printList = printList + " " + fill
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(21):                 innerList.append(fill) 
hw5_356.py(22):                 printList = printList + " " + fill
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(21):                 innerList.append(fill) 
hw5_356.py(22):                 printList = printList + " " + fill
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(17):                     printList = printList + " " + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(23):         print(printList)
$ # # # $
hw5_356.py(9):     for n in range(rows):
hw5_356.py(10):         innerList = []
hw5_356.py(11):         printList = ""
hw5_356.py(12):         box.append(innerList)
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(19):                     printList = printList + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(21):                 innerList.append(fill) 
hw5_356.py(22):                 printList = printList + " " + fill
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(21):                 innerList.append(fill) 
hw5_356.py(22):                 printList = printList + " " + fill
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(21):                 innerList.append(fill) 
hw5_356.py(22):                 printList = printList + " " + fill
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(17):                     printList = printList + " " + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(23):         print(printList)
$ # # # $
hw5_356.py(9):     for n in range(rows):
hw5_356.py(10):         innerList = []
hw5_356.py(11):         printList = ""
hw5_356.py(12):         box.append(innerList)
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(19):                     printList = printList + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(17):                     printList = printList + " " + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(17):                     printList = printList + " " + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(17):                     printList = printList + " " + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(14):             if ((n == 0) or (n == newRows) or (m == 0) or (m == newColumns)):
hw5_356.py(15):                 innerList.append(outline) 
hw5_356.py(16):                 if (printList != ""):
hw5_356.py(17):                     printList = printList + " " + outline
hw5_356.py(13):         for m in range(columns):
hw5_356.py(23):         print(printList)
$ $ $ $ $
hw5_356.py(9):     for n in range(rows):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
