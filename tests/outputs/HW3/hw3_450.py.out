 --- modulename: hw3_450, funcname: <module>
hw3_450.py(1): def main():
hw3_450.py(21): main()
 --- modulename: hw3_450, funcname: main
hw3_450.py(2): 	print("This program detects the state of matter of water based on the temperature.")
This program detects the state of matter of water based on the temperature.
hw3_450.py(3): 	temp = float(input("Enter the temperature in Celsius or Kelvin:"))
Enter the temperature in Celsius or Kelvin: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_450.py(4): 	celsius = "C"
hw3_450.py(5): 	kelvin = "K"
hw3_450.py(6): 	choice = input("Enter 'C' for Celsius or 'K' for Kelvin:")
Enter 'C' for Celsius or 'K' for Kelvin: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_450.py(7): 	if choice == celsius:
hw3_450.py(14): 	if choice == kelvin:
hw3_450.py(15):                 if temp < 273.15:
hw3_450.py(17):                 elif 273.15 < temp < 373.15:
hw3_450.py(19):                 elif temp > 373.15:
hw3_450.py(20):                         print("Gas")
Gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
