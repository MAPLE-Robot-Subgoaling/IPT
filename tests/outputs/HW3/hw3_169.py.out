 --- modulename: hw3_169, funcname: <module>
hw3_169.py(1): def main():
hw3_169.py(16): main()
 --- modulename: hw3_169, funcname: main
hw3_169.py(2):     waterTemp = float(input('Please enter the temperature: '))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_169.py(3):     unit = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_169.py(4):     if unit == 'C' and waterTemp <= 0:
hw3_169.py(6):     elif unit == 'C' and waterTemp > 0 and waterTemp < 100:
hw3_169.py(8):     elif unit == 'C' and waterTemp >= 100:
hw3_169.py(10):     elif unit == 'K' and waterTemp <= 273.15:
hw3_169.py(12):     elif unit == 'K' and waterTemp > 273.15 and waterTemp < 373.15:
hw3_169.py(14):     elif unit == 'K' and waterTemp >= 373.15:
hw3_169.py(15):         print('At this temperature, the water is a gas.')
At this temperature, the water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
