 --- modulename: hw3_343, funcname: <module>
hw3_343.py(1): CELSIUS_BOILING_POINT = 100
hw3_343.py(2): CELSIUS_FREEZING_POINT = 0
hw3_343.py(3): KELVIN_BOILING_POINT = 373.2
hw3_343.py(4): KELVIN_FREEZING_POINT = 273.2
hw3_343.py(5): def main():
hw3_343.py(28): main()
 --- modulename: hw3_343, funcname: main
hw3_343.py(6):     print("This program will determine the state of water at standard")
This program will determine the state of water at standard
hw3_343.py(7):     print("pressure (solid, liquid, or gas), based on its temperature.")
pressure (solid, liquid, or gas), based on its temperature.
hw3_343.py(8):     print()

hw3_343.py(9):     print("What temperature scale should be used?")
What temperature scale should be used?
hw3_343.py(10):     scale = input("Enter 'C' for Celsius  or 'K' for Kelvin: ")
Enter 'C' for Celsius  or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_343.py(11):     temperature = float(input("Enter the temperature: "))
Enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
