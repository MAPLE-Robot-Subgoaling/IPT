 --- modulename: hw3_478, funcname: <module>
hw3_478.py(1): def main():
hw3_478.py(36): main()
 --- modulename: hw3_478, funcname: main
hw3_478.py(2):     FREEZE_C = 0.0
hw3_478.py(3):     BOIL_C = 100.0
hw3_478.py(4):     FREEZE_K = 273.15
hw3_478.py(5):     BOIL_K = 373.15
hw3_478.py(6):     CELCIUS = "C"
hw3_478.py(7):     KELVIN = "K"
hw3_478.py(8):     temp = float(input("What is the temperature of the water?: "))
What is the temperature of the water?:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_478.py(9):     scale = input("What is the scale of the temperature? ('C' for Celcius, 'K' for Kelvin): ")
What is the scale of the temperature? ('C' for Celcius, 'K' for Kelvin):  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_478.py(10):     if scale == CELCIUS:
hw3_478.py(24):         if temp<= FREEZE_K:
hw3_478.py(28):         elif temp >= BOIL_K:
hw3_478.py(29):             print()

hw3_478.py(30):             print("At this temperature, water is a gas.")
At this temperature, water is a gas.
hw3_478.py(31):             print()

 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
