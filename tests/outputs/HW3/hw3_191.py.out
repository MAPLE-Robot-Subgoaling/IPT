 --- modulename: hw3_191, funcname: <module>
hw3_191.py(1): def main():
hw3_191.py(28): main()
 --- modulename: hw3_191, funcname: main
hw3_191.py(2):     temperature = float(input("Please enter temperature here: "))
Please enter temperature here:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_191.py(3):     scale = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_191.py(4):     boilingPoint = 100
hw3_191.py(5):     freezingPoint = 0
hw3_191.py(6):     boilngPoint2 = 373
hw3_191.py(7):     freezingPoint2 = 273
hw3_191.py(8):     if scale == "C" :
hw3_191.py(17):     elif scale == "K" :
hw3_191.py(18):         if temperature <= freezingPoint2 :
hw3_191.py(20):         elif temperature > freezingPoint2 and temperature < boilingPoint2 :
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
