 --- modulename: hw3_23, funcname: <module>
hw3_23.py(1): def main():
hw3_23.py(15): main()
 --- modulename: hw3_23, funcname: main
hw3_23.py(2):     TEMP_SOLID = 0
hw3_23.py(3):     TEMP_GAS = 100
hw3_23.py(4):     ABSOLUTE_ZERO = -273.15
hw3_23.py(5):     temp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_23.py(6):     scale = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_23.py(7):     if (scale == "K"):
hw3_23.py(8):         temp = temp + ABSOLUTE_ZERO
hw3_23.py(9):     if (temp <= TEMP_SOLID): 
hw3_23.py(11):     elif (temp >= TEMP_GAS): 
hw3_23.py(12):         print("At this temperature, water is a gas. ")
At this temperature, water is a gas. 
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
