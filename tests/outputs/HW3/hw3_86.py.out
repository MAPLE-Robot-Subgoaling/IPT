 --- modulename: hw3_86, funcname: <module>
hw3_86.py(1): def main():
hw3_86.py(10): main()
 --- modulename: hw3_86, funcname: main
hw3_86.py(2):     userTemp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_86.py(3):     userConvert = str(input("Please enter 'C' for Celsius, or 'K' for Kelvin: "))
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_86.py(4):     if (userTemp <= 0.0  and userConvert == 'C') or (userTemp <= 273.2 and userConvert == 'K'):
hw3_86.py(6):     if (userTemp > 0.0 and userTemp < 100.0 and userConvert == 'C') or (userTemp > 273.2 and userTemp < 373.2 and userConvert == 'K'):
hw3_86.py(8):     if (userTemp >= 100.0 and userConvert == 'C') or (userTemp >= 373.2 and userConvert == 'K'):
hw3_86.py(9):         print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
