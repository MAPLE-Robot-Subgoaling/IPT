 --- modulename: hw3_377, funcname: <module>
hw3_377.py(1): boiling_point_Kelvin = 373
hw3_377.py(2): boiling_point_Celsius = 100
hw3_377.py(3): freezing_point_Kelvin = 273
hw3_377.py(4): freezing_point_Celsius = 0
hw3_377.py(5): states = [ "At this temperature, water is a (frozen) solid." , "At this temperature, water is a liquid." , "At this temperature, water is a gas." ]
hw3_377.py(6): def main():
hw3_377.py(23): main()
 --- modulename: hw3_377, funcname: main
hw3_377.py(7):     degree = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_377.py(8):     scale = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_377.py(9):     if( scale == "K" ):
hw3_377.py(10):         if( degree > boiling_point_Kelvin ):
hw3_377.py(11):             print( states[2] )
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
