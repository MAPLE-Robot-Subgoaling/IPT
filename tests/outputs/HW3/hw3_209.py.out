 --- modulename: hw3_209, funcname: <module>
hw3_209.py(1): def main ():
hw3_209.py(16): main ()
 --- modulename: hw3_209, funcname: main
hw3_209.py(2):     temp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_209.py(3):     tempScale = str(input("Please enter 'C' for Celsius, or 'K' for Kelvin: "))
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_209.py(4):     if (tempScale == "C") and (temp > 0) or(temp < 100):
hw3_209.py(6):     elif (tempScale == 'C') and (temp <= 0):
hw3_209.py(8):     elif (tempScale == 'C') and (temp >= 100):
hw3_209.py(10):     elif (tempScale == 'K') and (temp>273.15) or (temp < 373.15):
hw3_209.py(11):         print("At this temperature, water is a liquid")
At this temperature, water is a liquid
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
