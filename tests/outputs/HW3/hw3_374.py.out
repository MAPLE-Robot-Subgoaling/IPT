 --- modulename: hw3_374, funcname: <module>
hw3_374.py(1): def main():
hw3_374.py(16): main()
 --- modulename: hw3_374, funcname: main
hw3_374.py(2):     temperature = float(input(" Please enter the temperature: "))
 Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_374.py(3):     tempType = input("Please enter 'C' for Celsuis, or 'K' for Kelvin: ")
Please enter 'C' for Celsuis, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_374.py(4):     if tempType == "K" and temperature> 373: 
hw3_374.py(5):         print("At this temperature, the water is gas") 
At this temperature, the water is gas
hw3_374.py(6):     if tempType == "K" and   373 >temperature>273: 
hw3_374.py(8):     if tempType == "K" and temperature < 273: 
hw3_374.py(10):     if tempType == "C" and temperature> 100: 
hw3_374.py(12):     if tempType == "C" and 100>temperature>0: 
hw3_374.py(14):     if tempType == "C" and temperature< 0: 
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
