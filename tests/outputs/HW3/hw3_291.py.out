 --- modulename: hw3_291, funcname: <module>
hw3_291.py(1): def main():
hw3_291.py(22): main()
 --- modulename: hw3_291, funcname: main
hw3_291.py(2):     userTemp = float(input("Please enter a temperature: "))
Please enter a temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_291.py(3):     tempType = input("Is your temperature in Celsius or Kelvin? Please type either 'C' for Celsius or 'K' for Kelvin: ")
Is your temperature in Celsius or Kelvin? Please type either 'C' for Celsius or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_291.py(4):     CELS_FP = 0
hw3_291.py(5):     CELS_BP = 100
hw3_291.py(6):     KELV_FP = 273.15
hw3_291.py(7):     KELV_BP = 373.15
hw3_291.py(8):     if tempType == "C":
hw3_291.py(16):         if userTemp <= KELV_FP:
hw3_291.py(18):         elif userTemp < KELV_BP:
hw3_291.py(20):         elif userTemp >= KELV_BP:
hw3_291.py(21):             print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
