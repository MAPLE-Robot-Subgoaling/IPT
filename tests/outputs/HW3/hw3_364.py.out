 --- modulename: hw3_364, funcname: <module>
hw3_364.py(1): def main():
hw3_364.py(22): main()
 --- modulename: hw3_364, funcname: main
hw3_364.py(2):     KELVIN_BOILING = 373.16
hw3_364.py(3):     KELVIN_FREEZING = 273.16
hw3_364.py(4):     CELCUIS_BOILING = 100
hw3_364.py(5):     CELCIUS_FREEZING = 0
hw3_364.py(6):     temp = float(input("Please enter the temperature:"))
Please enter the temperature: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_364.py(7):     unitOfMeasure = input("Please enter 'C' for Celcius or 'K' for Kelvin:")
Please enter 'C' for Celcius or 'K' for Kelvin: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_364.py(8):     if (unitOfMeasure == "C"):
hw3_364.py(16):         if (temp <= KELVIN_FREEZING):
hw3_364.py(18):         elif (temp >= KELVIN_BOILING):
hw3_364.py(19):             print("Water's a gas. Turn off the tea pot!")
Water's a gas. Turn off the tea pot!
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
