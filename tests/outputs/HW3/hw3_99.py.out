 --- modulename: hw3_99, funcname: <module>
hw3_99.py(1): def main():
hw3_99.py(22): main()
 --- modulename: hw3_99, funcname: main
hw3_99.py(2):     CELSIUS_FREEZE = 0
hw3_99.py(3):     CELSIUS_BOIL = 100
hw3_99.py(4):     KELVIN_FREEZE = 273.16
hw3_99.py(5):     KELVIN_BOIL = 373.16
hw3_99.py(6):     waterTemperature = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_99.py(7):     measure = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_99.py(8):     if measure == 'C':
hw3_99.py(15):     elif measure == 'K':
hw3_99.py(16):         if waterTemperature <= KELVIN_FREEZE:
hw3_99.py(18):         elif waterTemperature < KELVIN_BOIL:
hw3_99.py(20):         elif waterTemperature >= KELVIN_BOIL:
hw3_99.py(21):             print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
