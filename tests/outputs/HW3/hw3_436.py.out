 --- modulename: hw3_436, funcname: <module>
hw3_436.py(1): BOILING_C = 100
hw3_436.py(2): FREEZING_C = 0
hw3_436.py(3): BOILING_K = 373
hw3_436.py(4): FREEZING_K = 273
hw3_436.py(5): def main():
hw3_436.py(22): main()
 --- modulename: hw3_436, funcname: main
hw3_436.py(6):     temp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_436.py(7):     scale = input("Enter 'C' if the temperature is Celsius, 'K' if Kelvin: ")
Enter 'C' if the temperature is Celsius, 'K' if Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_436.py(8):     if scale == ('C'):
hw3_436.py(16):         if temp >= BOILING_K:
hw3_436.py(17):             print ("Water is a gas at this temperature.")
Water is a gas at this temperature.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
