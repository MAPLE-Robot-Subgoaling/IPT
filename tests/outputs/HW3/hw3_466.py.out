 --- modulename: hw3_466, funcname: <module>
hw3_466.py(1): CELSIUS_FREEZING_POINT = 0
hw3_466.py(2): CELSIUS_BOILING_POINT  = 100
hw3_466.py(3): KELVIN_OFFSET          = 273.15
hw3_466.py(4): KELVIN_FREEZING_POINT  = CELSIUS_FREEZING_POINT + KELVIN_OFFSET
hw3_466.py(5): KELVIN_BOILING_POINT   = CELSIUS_BOILING_POINT  + KELVIN_OFFSET
hw3_466.py(6): def main():
hw3_466.py(23): main()
 --- modulename: hw3_466, funcname: main
hw3_466.py(7):     temperature = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_466.py(8):     scale = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_466.py(9):     if scale == "C":
hw3_466.py(17):         if temperature < KELVIN_FREEZING_POINT: 
hw3_466.py(19):         elif temperature < KELVIN_BOILING_POINT:  
hw3_466.py(22):             print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
