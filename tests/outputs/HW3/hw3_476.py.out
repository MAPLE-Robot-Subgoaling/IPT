 --- modulename: hw3_476, funcname: <module>
hw3_476.py(1): def main():
hw3_476.py(24): main()
 --- modulename: hw3_476, funcname: main
hw3_476.py(2):     KELVIN = "K"
hw3_476.py(3):     CELSIUS = "C"
hw3_476.py(4):     BOIL = float(373)     
hw3_476.py(5):     FREEZE = float(273)   
hw3_476.py(6):     temperature = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_476.py(7):     unit = input("Please enter 'C' for Celsius or 'K' for Kelvin: ")
Please enter 'C' for Celsius or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_476.py(8):     if unit == CELSIUS:
hw3_476.py(11):     if unit == KELVIN:
hw3_476.py(12):         if temperature < 0:
hw3_476.py(14):         elif 0 <= temperature < FREEZE:
hw3_476.py(16):         elif temperature == FREEZE:
hw3_476.py(18):         elif FREEZE < temperature < BOIL:
hw3_476.py(20):         elif temperature == BOIL:
hw3_476.py(22):         elif temperature > BOIL:
hw3_476.py(23):             print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
