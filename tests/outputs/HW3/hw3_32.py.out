 --- modulename: hw3_32, funcname: <module>
hw3_32.py(1): def main():
hw3_32.py(20): main()
 --- modulename: hw3_32, funcname: main
hw3_32.py(2):     temp = float ( input ( "Please enter the temperature: " ))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_32.py(3):     tempUnit = input ( "Please enter 'C' for Celsius, or 'K' for Kelvin: " )
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_32.py(4):     FREEZING_CELSIUS = 0
hw3_32.py(5):     BOILING_CELSIUS = 100
hw3_32.py(6):     FREEZING_KELVIN = 273.15
hw3_32.py(7):     BOILING_KELVIN = 373.15
hw3_32.py(8):     if temp > FREEZING_CELSIUS and temp < BOILING_CELCIUS and tempUnit == "C" :
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
