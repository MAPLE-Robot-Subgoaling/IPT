 --- modulename: hw3_365, funcname: <module>
hw3_365.py(1): def main():
hw3_365.py(13): main()
 --- modulename: hw3_365, funcname: main
hw3_365.py(2):     waterTemperature = float(input("Please enter the temperature:"))
Please enter the temperature: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_365.py(3):     temperatureScale = input("Please enter 'C' for Celsius or 'K' for Kelvin:")
Please enter 'C' for Celsius or 'K' for Kelvin: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_365.py(4):     if waterTemperature < 0 and temperatureScale == "C":
hw3_365.py(6):     if waterTemperature < 273.15 and temperatureScale == "K":
hw3_365.py(8):     elif  waterTemperature < 100 and waterTemperature > 0  and temperatureScale == "C":
hw3_365.py(10):     elif  273.15 < waterTemperature < 375.15 and temperatureScale == "K":
hw3_365.py(12):     else: print(" At this temperature, water is gas")
 At this temperature, water is gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
