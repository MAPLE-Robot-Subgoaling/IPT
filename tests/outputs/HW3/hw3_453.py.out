 --- modulename: hw3_453, funcname: <module>
hw3_453.py(1): def main():
hw3_453.py(11): main()
 --- modulename: hw3_453, funcname: main
hw3_453.py(2):     KELVIN = 273 
hw3_453.py(3):     temperature = float(input("Please enter the temperature: ")) 
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_453.py(4):     scale = KELVIN if input("Please enter C for Celsius, or 'K' for Kelvin: ") == "K" else 0 
Please enter C for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_453.py(5):     if temperature - scale > 100:
hw3_453.py(6):         print("At this temperature, water is a gas") 
At this temperature, water is a gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
