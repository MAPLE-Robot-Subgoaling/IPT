 --- modulename: hw3_239, funcname: <module>
hw3_239.py(1): def main():
hw3_239.py(22): main()
 --- modulename: hw3_239, funcname: main
hw3_239.py(2):     freezingC=0
hw3_239.py(3):     freezingK=273.15
hw3_239.py(4):     boilingC=100
hw3_239.py(5):     boilingK=373.15
hw3_239.py(6):     temp=float(input("Enter the temperature: "))
Enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_239.py(7):     unit=str(input("Enter 'C' for Celsius, or 'K' for Kelvin: "))
Enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_239.py(8):     if unit=="C":
hw3_239.py(16):         if temp<=freezingK:
hw3_239.py(18):         elif temp>=boilingK:
hw3_239.py(19):             print("Gas")
Gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
