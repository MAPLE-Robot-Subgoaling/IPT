 --- modulename: hw3_43, funcname: <module>
hw3_43.py(1): def main():
hw3_43.py(14): main()
 --- modulename: hw3_43, funcname: main
hw3_43.py(2):     temp = float(input("Enter the temperature: "))
Enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_43.py(3):     scale = input("Enter 'C' for Celsius and 'K' for Kelvin: ")
Enter 'C' for Celsius and 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_43.py(4):     if (scale == "K"):
hw3_43.py(5):         cTemp = temp + 273.15
hw3_43.py(6):     if (scale == "C"):
hw3_43.py(8):     if (cTemp <= 0):
hw3_43.py(10):     elif (cTemp < 100):
hw3_43.py(12):     elif (cTemp >= 100):
hw3_43.py(13):         print ("At this temperature, water is a gas")
At this temperature, water is a gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
