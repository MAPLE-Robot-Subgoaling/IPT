 --- modulename: hw3_171, funcname: <module>
hw3_171.py(1): K_CONSTANT = 273.15
hw3_171.py(2): def main():
hw3_171.py(14): main()
 --- modulename: hw3_171, funcname: main
hw3_171.py(3):     print("This program will print out the state of water at a given temperature.")
This program will print out the state of water at a given temperature.
hw3_171.py(4):     temp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_171.py(5):     scale = str(input("Please enter 'C' for Celsius, or 'K' for Kelvin': "))
Please enter 'C' for Celsius, or 'K' for Kelvin':  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_171.py(6):     if scale == 'K':
hw3_171.py(8):     if temp > 0 and temp < 100:
hw3_171.py(10):     if temp >= 100:
hw3_171.py(12):     if temp <= 0:
hw3_171.py(13):         print("The current state is solid")
The current state is solid
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
