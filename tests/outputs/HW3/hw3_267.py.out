 --- modulename: hw3_267, funcname: <module>
hw3_267.py(1): KELVIN = "K"
hw3_267.py(2): CELCIUS = "C"
hw3_267.py(3): KELVIN_DIFFERENCE = 273.15
hw3_267.py(4): FREEZING_POINT = 0
hw3_267.py(5): def main():
hw3_267.py(16): main()
 --- modulename: hw3_267, funcname: main
hw3_267.py(6):     temperature= float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_267.py(7):     scale = input("Please enter 'C' for Celcius, or 'K' for Kelvin: ")
Please enter 'C' for Celcius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_267.py(8):     if (scale == KELVIN):
hw3_267.py(9):         temperature -= KELVIN_DIFFERENCE
hw3_267.py(10):     if(temperature <= FREEZING_POINT):
hw3_267.py(12):     elif(temperature < 100):
hw3_267.py(15):         print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
