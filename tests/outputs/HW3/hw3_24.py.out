 --- modulename: hw3_24, funcname: <module>
hw3_24.py(1): FREEZING_POINT_C = 0
hw3_24.py(2): BOILING_POINT_C = 100
hw3_24.py(3): FREEZING_POINT_K = 273.14
hw3_24.py(4): BOILING_POINT_K = 373.14
hw3_24.py(5): def main():
hw3_24.py(31): main()
 --- modulename: hw3_24, funcname: main
hw3_24.py(6):     temperature = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_24.py(7):     print("capital C or K only")
capital C or K only
hw3_24.py(8):     tempScale = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_24.py(9):     if tempScale == 'C':
hw3_24.py(21):         if temperature < FREEZING_POINT_K:
hw3_24.py(23):         elif temperature > BOILING_POINT_K:
hw3_24.py(24):             print("water is a gas ")
water is a gas 
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
