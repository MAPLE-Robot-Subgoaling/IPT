 --- modulename: hw3_100, funcname: <module>
hw3_100.py(1): def main():
hw3_100.py(24): main()
 --- modulename: hw3_100, funcname: main
hw3_100.py(2):     mpC=0
hw3_100.py(3):     bpC=100
hw3_100.py(4):     mpK=273
hw3_100.py(5):     bpK=373
hw3_100.py(6):     cel="C"
hw3_100.py(7):     kel="K"
hw3_100.py(8):     tempVar=float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_100.py(9):     unitVar=input("Please enter 'C' for Celsius or 'K' for Kelvin: ")
Please enter 'C' for Celsius or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_100.py(10):     if unitVar==cel:
hw3_100.py(18):         if tempVar<=mpK:
hw3_100.py(20):         elif tempVar>=bpK:
hw3_100.py(21):             print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
