 --- modulename: hw3_148, funcname: <module>
hw3_148.py(1): def main():
hw3_148.py(22): main()
 --- modulename: hw3_148, funcname: main
hw3_148.py(2):     FREEZING_POINT_CELSIUS = 0
hw3_148.py(3):     FREEZING_POINT_KELVIN = 273.2
hw3_148.py(4):     BOILING_POINT_CELSIUS = 100
hw3_148.py(5):     BOILING_POINT_KELVIN = 373.2
hw3_148.py(6):     temperatureWater = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_148.py(7):     temperatureUnit = str(input("Please enter 'C' for Celsius, or 'K' for Kelvin: "))
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_148.py(8):     if temperatureUnit == "C":
hw3_148.py(15):     elif temperatureUnit == "K":
hw3_148.py(16):         if temperatureWater >= BOILING_POINT_KELVIN:
hw3_148.py(17):             print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
