 --- modulename: hw3_110, funcname: <module>
hw3_110.py(1): def main():
hw3_110.py(21): main()
 --- modulename: hw3_110, funcname: main
hw3_110.py(2):     CELSIUS_CONVERSION = 273.15 
hw3_110.py(3):     K_MELT_TEMP        = 273.15 
hw3_110.py(4):     K_BOIL_TEMP        = 373.15 
hw3_110.py(5):     temp  = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_110.py(6):     scale = input("Please enter \"C\" for Celsius, or \"K\" for Kelvin: ")
Please enter "C" for Celsius, or "K" for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_110.py(7):     if scale == "K":
hw3_110.py(8):         k_temp = temp
hw3_110.py(14):     if k_temp < 273.15:
hw3_110.py(16):     elif k_temp < 373.15:
hw3_110.py(19):         state = "gas"
hw3_110.py(20):     print("At this temperature, water is a", state)
At this temperature, water is a gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
