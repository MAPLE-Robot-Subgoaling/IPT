 --- modulename: hw3_340, funcname: <module>
hw3_340.py(1): def main():
hw3_340.py(13): main()
 --- modulename: hw3_340, funcname: main
hw3_340.py(2):     temp = float(input("Please enter the tempurature:"))
Please enter the tempurature: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_340.py(3):     inKelvin = input("Please enter 'C' for Celsius, or 'K for Kelvin:") == "K"
Please enter 'C' for Celsius, or 'K for Kelvin: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_340.py(4):     if not inKelvin:
hw3_340.py(6):     if temp <= 273.15:
hw3_340.py(8):     elif temp >= 373.15:
hw3_340.py(9):         state = "gas"
hw3_340.py(12):     print("At this tempurature, water is a", state)
At this tempurature, water is a gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
