 --- modulename: hw3_102, funcname: <module>
hw3_102.py(1): BOIL_CELSIUS = 100
hw3_102.py(2): FREEZE_CELSIUS = 0
hw3_102.py(3): BOIL_KELVIN = 373.15
hw3_102.py(4): FREEZE_KELVIN = 273.15
hw3_102.py(5): def main():
hw3_102.py(20): main()
 --- modulename: hw3_102, funcname: main
hw3_102.py(6):     userTemp  = float(input("What temperature is it?"" ")) 
What temperature is it?  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_102.py(7):     tempType = str(input("Is that number in Kelvin or Celsius?"" "))
Is that number in Kelvin or Celsius?  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_102.py(8):     if(userTemp < FREEZE_CELSIUS and tempType == "C"):
hw3_102.py(10):     elif(FREEZE_CELSIUS < userTemp < BOIL_CELSIUS and tempType == "C"):
hw3_102.py(12):     elif(userTemp > BOIL_CELSIUS and tempType == "C" ):
hw3_102.py(14):     elif(userTemp < FREEZE_KELVIN and tempType == "K"):
hw3_102.py(16):     elif(FREEZE_KELVIN < userTemp < BOIL_KELVIN and tempType == "K"):
hw3_102.py(18):     elif(userTemp > BOIL_KELVIN and tempType == "K"):
hw3_102.py(19):         print("you have a gas")
you have a gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
