 --- modulename: hw3_75, funcname: <module>
hw3_75.py(1): def main():
hw3_75.py(22): main()
 --- modulename: hw3_75, funcname: main
hw3_75.py(2):     temp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_75.py(3):     tempMeasure = input("Please enter 'C' for Celsius or 'K' for Kelvin: ")
Please enter 'C' for Celsius or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_75.py(4):     GAS_IN_KELVINS = 373.15
hw3_75.py(5):     GAS_IN_CELSIUS = 100
hw3_75.py(6):     SOLID_IN_KELVINS = 273.15
hw3_75.py(7):     SOLID_IN_CELSIUS = 0
hw3_75.py(8):     if tempMeasure == "K":
hw3_75.py(9):         if temp <= SOLID_IN_KELVINS:
hw3_75.py(11):         elif temp >= GAS_IN_KELVINS:
hw3_75.py(12):             print("Water is a gas at this temperature")
Water is a gas at this temperature
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
