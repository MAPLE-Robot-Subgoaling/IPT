 --- modulename: hw3_415, funcname: <module>
hw3_415.py(1): def main():
hw3_415.py(24): main()
 --- modulename: hw3_415, funcname: main
hw3_415.py(2):     temp = float(input("Please enter the temerature: "))
Please enter the temerature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_415.py(3):     typeDegree = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_415.py(4):     cel = "C"
hw3_415.py(5):     CEL_ZERO = 0
hw3_415.py(6):     CEL_BOIL = 100
hw3_415.py(7):     kel = "K"
hw3_415.py(8):     KEL_ZERO = 273.16
hw3_415.py(9):     KEL_BOIL = 373.16
hw3_415.py(10):     if typeDegree == cel:
hw3_415.py(17):     if typeDegree == kel:
hw3_415.py(18):         if (temp < KEL_ZERO):
hw3_415.py(20):         if (temp > KEL_ZERO and temp < KEL_BOIL):
hw3_415.py(22):         if (temp > KEL_BOIL):
hw3_415.py(23):             print("At this temperature, water is a gas")
At this temperature, water is a gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
