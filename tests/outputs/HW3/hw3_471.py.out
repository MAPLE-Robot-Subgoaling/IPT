 --- modulename: hw3_471, funcname: <module>
hw3_471.py(1): def main():
hw3_471.py(16): main()
 --- modulename: hw3_471, funcname: main
hw3_471.py(2):     temperature = float(input("What is the temperature? "))
What is the temperature?  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_471.py(3):     scale = input("What is the scale the temperature is measured in? ")
What is the scale the temperature is measured in?  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_471.py(4):     if temperature >= 100 and scale == "C":
hw3_471.py(6):     elif temperature > 0 and scale == "C":
hw3_471.py(8):     elif temperature < 0 and scale == "C":
hw3_471.py(10):     elif temperature >= 373 and scale == "K":
hw3_471.py(11):         print("At this temperature, water is a gas")
At this temperature, water is a gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
