 --- modulename: hw3_135, funcname: <module>
hw3_135.py(1): def main():
hw3_135.py(16): main()
 --- modulename: hw3_135, funcname: main
hw3_135.py(2):     temperature = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_135.py(3):     tempType = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_135.py(4):     if tempType == "C" and temperature <= 0:
hw3_135.py(6):     elif tempType == "C" and temperature >= 100:
hw3_135.py(8):     elif tempType == "C" and temperature > 0 and temperature < 100:
hw3_135.py(10):     elif tempType == "K" and temperature <= 273.16:
hw3_135.py(12):     elif tempType == "K" and temperature >= 373.16:
hw3_135.py(13):         print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
