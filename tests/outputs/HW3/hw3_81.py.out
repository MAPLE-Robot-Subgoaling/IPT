 --- modulename: hw3_81, funcname: <module>
hw3_81.py(1): def main():
hw3_81.py(16): main()
 --- modulename: hw3_81, funcname: main
hw3_81.py(2):     Temp = float(input("What is the current temperature?"))
What is the current temperature? --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_81.py(3):     Unit = (input("Is the temperature in 'C' for Celsius, or 'F' for Fahrenheit?"))
Is the temperature in 'C' for Celsius, or 'F' for Fahrenheit? --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_81.py(4):     if (Temp >= 100 and Unit == 'C'):
hw3_81.py(6):     if (Temp >= 132 and Unit == 'F'):
hw3_81.py(8):     if (Temp < 0 and Unit == 'C'):
hw3_81.py(10):     if (Temp < 32 and Unit == 'F'):
hw3_81.py(12):     if (Temp > 0 and Temp < 100 and Unit == 'C'):
hw3_81.py(14):     if (Temp > 32 and Temp < 132 and Unit == 'F'):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
