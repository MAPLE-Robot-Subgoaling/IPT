 --- modulename: hw3_157, funcname: <module>
hw3_157.py(1): def main():
hw3_157.py(17): main()
 --- modulename: hw3_157, funcname: main
hw3_157.py(2):     SOLID_STATE = float(0)
hw3_157.py(3):     GAS_STATE = float(100)
hw3_157.py(4):     KELVIN_TO_CELSIUS = float(273.15)
hw3_157.py(5):     inputTemp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_157.py(6):     inputTempScale = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_157.py(7):     if(inputTempScale == "K"):
hw3_157.py(8):         tempCelsius = float(inputTemp - KELVIN_TO_CELSIUS)
hw3_157.py(11):     if(tempCelsius <= SOLID_STATE):
hw3_157.py(13):     elif(tempCelsius >= GAS_STATE):
hw3_157.py(14):         print("At this temperature, water is gas.")
At this temperature, water is gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
