 --- modulename: hw3_74, funcname: <module>
hw3_74.py(1): def main():
hw3_74.py(22): main()
 --- modulename: hw3_74, funcname: main
hw3_74.py(2):     SOLID_WATERC = 0
hw3_74.py(3):     GAS_WATERC = 100
hw3_74.py(4):     SOLID_WATERK = SOLID_WATERC + 273.15
hw3_74.py(5):     GAS_WATERK = GAS_WATERC + 273.15
hw3_74.py(6):     temp = float(input("Please enter the Temperature: "))
Please enter the Temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_74.py(7):     unit = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_74.py(8):     if unit == "C":
hw3_74.py(15):     if unit == "K" :
hw3_74.py(16):         if  unit == "K" and temp >= GAS_WATERK :
hw3_74.py(17):             print("At this Temperature, Water is Gaseous(gas)")
At this Temperature, Water is Gaseous(gas)
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
