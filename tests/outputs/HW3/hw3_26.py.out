 --- modulename: hw3_26, funcname: <module>
hw3_26.py(1): def main():
hw3_26.py(22): main()
 --- modulename: hw3_26, funcname: main
hw3_26.py(2):     temperature = "0"
hw3_26.py(3):     tempScale = "C"
hw3_26.py(4):     print("Hello and welcome to the water state wizard!")
Hello and welcome to the water state wizard!
hw3_26.py(5):     temperature = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_26.py(6):     tempScale = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_26.py(7):     if tempScale == "C":
hw3_26.py(15):         if temperature <= 273.16:
hw3_26.py(17):         elif temperature <= 373.16:
hw3_26.py(20):             print("At this temperature, water is a gas.")
At this temperature, water is a gas.
hw3_26.py(21):     print("Thank you for using our water state wizard!")
Thank you for using our water state wizard!
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
