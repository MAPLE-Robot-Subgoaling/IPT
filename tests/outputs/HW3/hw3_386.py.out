 --- modulename: hw3_386, funcname: <module>
hw3_386.py(1): def main():
hw3_386.py(24): main()
 --- modulename: hw3_386, funcname: main
hw3_386.py(2):     waterTemp = "" 
hw3_386.py(3):     celsiusOrKelvin = "" 
hw3_386.py(4):     celsiusCheck = "C" 
hw3_386.py(5):     celsiusToKelvin = 273 
hw3_386.py(6):     trueKelvinTemp = "" 
hw3_386.py(7):     FUSION_STATE = 273 
hw3_386.py(8):     VAPORIZATION_STATE = 373 
hw3_386.py(9):     print("Hell, this program will help declare what state of water is at a given temperature.")
Hell, this program will help declare what state of water is at a given temperature.
hw3_386.py(10):     waterTemp = float(input("Please enter a temperature: "))
Please enter a temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_386.py(11):     celsiusOrKelvin = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_386.py(12):     if celsiusOrKelvin == celsiusCheck: 
hw3_386.py(15):         trueKelvinTemp = waterTemp 
hw3_386.py(16):     if trueKelvinTemp <= FUSION_STATE:
hw3_386.py(19):         if trueKelvinTemp > FUSION_STATE and trueKelvinTemp < VAPORIZATION_STATE:
hw3_386.py(22):             if trueKelvinTemp >= VAPORIZATION_STATE:
hw3_386.py(23):                 print(" At ",waterTemp,", water is a gas")
 At  400.0 , water is a gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
