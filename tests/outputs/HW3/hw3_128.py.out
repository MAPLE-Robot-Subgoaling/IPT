 --- modulename: hw3_128, funcname: <module>
hw3_128.py(1): def main ():
hw3_128.py(31): main ()
 --- modulename: hw3_128, funcname: main
hw3_128.py(2): 	MELTING_POINT_CELSIUS = 0.0
hw3_128.py(3): 	MELTING_POINT_KELVIN  = 273.15
hw3_128.py(4): 	BOILING_POINT_CELSIUS = 100.0
hw3_128.py(5): 	BOILING_POINT_KELVIN = 373.15
hw3_128.py(6): 	temperature = float (input ("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_128.py(7): 	scale = input ("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_128.py(8): 	if scale.upper() == "C":
hw3_128.py(20): 		if temperature < MELTING_POINT_KELVIN:
hw3_128.py(22): 		elif temperature == MELTING_POINT_KELVIN:
hw3_128.py(24): 		elif temperature < BOILING_POINT_KELVIN:
hw3_128.py(26): 		elif temperature == BOILING_POINT_KELVIN:
hw3_128.py(28): 		elif temperature > BOILING_POINT_KELVIN:
hw3_128.py(29): 			print ("Water is a gas at this temperature.")
Water is a gas at this temperature.
hw3_128.py(30): 	print ("Thank you for using the program.")
Thank you for using the program.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
