 --- modulename: hw3_426, funcname: <module>
hw3_426.py(1): temp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_426.py(2): scale = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_426.py(3): MELTING_POINT_C = 32
hw3_426.py(4): BOILING_POINT_C = 100
hw3_426.py(5): MELTING_POINT_K = 273.15
hw3_426.py(6): BOILING_POINT_K = 373.15
hw3_426.py(7): def main():
hw3_426.py(22): main()
 --- modulename: hw3_426, funcname: main
hw3_426.py(8):              if scale == "C":
hw3_426.py(9):                  if temp >= 0 and temp < MELTING_POINT_C:
hw3_426.py(11):                  elif temp >= MELTING_POINT_C and temp < BOILING_POINT_C:
hw3_426.py(13):                  elif temp >= BOILING_POINT_C:
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
