 --- modulename: hw3_295, funcname: <module>
hw3_295.py(1): def main():
hw3_295.py(22): main()
 --- modulename: hw3_295, funcname: main
hw3_295.py(2):     CELSIUS_FROZEN = 0
hw3_295.py(3):     CELSIUS_GAS = 100
hw3_295.py(4):     KELVIN_FROZEN = 273
hw3_295.py(5):     KELVIN_GAS = 373
hw3_295.py(6):     temp = float(input("Please enter the temprature: "))
Please enter the temprature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_295.py(7):     scale = str(input("Please enter 'C' for Celsius, or 'K' for Kelvin: "))
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_295.py(8):     if scale == "C":
hw3_295.py(15):     if scale == "K":
hw3_295.py(16):         if temp >= KELVIN_GAS:
hw3_295.py(17):             print(" At this temperature, water is a gas.")
 At this temperature, water is a gas.
hw3_295.py(18):         if temp <= KELVIN_FROZEN:
hw3_295.py(20):         if temp < KELVIN_GAS and temp > KELVIN_FROZEN:
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
