 --- modulename: hw3_38, funcname: <module>
hw3_38.py(1): def main():
hw3_38.py(14): main()
 --- modulename: hw3_38, funcname: main
hw3_38.py(2):     temp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_38.py(3):     measure = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_38.py(4):     if (measure == "C") and (temp <= 0):
hw3_38.py(6):     elif (measure == "C") and (0 < temp) and (temp < 100):
hw3_38.py(8):     elif (measure == "K") and (temp <= 273.15):
hw3_38.py(10):     elif (measure == "K") and (273.25 < temp) and (temp < 373.15):
hw3_38.py(13):         print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
