 --- modulename: hw3_321, funcname: <module>
hw3_321.py(1): K="K"
hw3_321.py(2): C="K"
hw3_321.py(3): def main():
hw3_321.py(12): main()
 --- modulename: hw3_321, funcname: main
hw3_321.py(4):     tem = float (input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_321.py(5):     measur = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_321.py(6):     if (measur == C and tem <= 0) or (measur == K and tem <= 32): 
hw3_321.py(8):     elif (measur == C and (tem >0 and tem <100)) or (measur== K and (tem > 32 and tem< 212)):
hw3_321.py(11):         print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
