 --- modulename: hw3_233, funcname: <module>
hw3_233.py(1): def main():
hw3_233.py(15): main()
 --- modulename: hw3_233, funcname: main
hw3_233.py(2):     WATER_FREEZE = 0
hw3_233.py(3):     WATER_BOIL = 100
hw3_233.py(4):     KELVIN = 273.1
hw3_233.py(5):     temp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_233.py(6):     kelvOrCelc = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_233.py(7):     if(kelvOrCelc == "K"):
hw3_233.py(8):         temp = float(temp - KELVIN)
hw3_233.py(9):     if(temp < WATER_FREEZE):
hw3_233.py(11):     elif(temp > WATER_BOIL):
hw3_233.py(12):         print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
