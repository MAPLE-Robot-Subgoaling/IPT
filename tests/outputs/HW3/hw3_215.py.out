 --- modulename: hw3_215, funcname: <module>
hw3_215.py(1): def main ():
hw3_215.py(24): main()
 --- modulename: hw3_215, funcname: main
hw3_215.py(2):     temp     = float(input("Please enther the temperature: "))
Please enther the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_215.py(3):     typeTemp = input("Please enter 'C' for celsius, or 'K' for Kelvin ")
Please enter 'C' for celsius, or 'K' for Kelvin  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_215.py(4):     if temp > 0 and temp < 100 and typeTemp == 'C':
hw3_215.py(6):     elif temp > 100 and typeTemp == 'C':
hw3_215.py(8):     elif temp < 0 and typeTemp == 'C':
hw3_215.py(10):     elif temp == 0 and typeTemp == 'C':
hw3_215.py(12):     elif temp == 100 and typeTemp == 'C':
hw3_215.py(14):     if temp > 273.16 and temp < 373.16 and typeTemp == 'K':
hw3_215.py(16):     elif temp > 373.16 and typeTemp == 'K':
hw3_215.py(17):         print ("At this temperature, water is a gas")
At this temperature, water is a gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
