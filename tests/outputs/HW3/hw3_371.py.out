 --- modulename: hw3_371, funcname: <module>
hw3_371.py(1): def main():
hw3_371.py(20): main()
 --- modulename: hw3_371, funcname: main
hw3_371.py(2):     userTemp = float(input("Please enter the temperature:"))
Please enter the temperature: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_371.py(3):     userScale = str(input("Please enter 'C' for Celsius, or 'K' for Kelvin:"))
Please enter 'C' for Celsius, or 'K' for Kelvin: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_371.py(4):     BOILING_KELVIN = 373.15
hw3_371.py(5):     BOILING_CELSIUS = 100
hw3_371.py(6):     FREEZE_KELVIN = 273.15
hw3_371.py(7):     FREEZE_CELSIUS = 0
hw3_371.py(8):     if (userTemp <= FREEZE_CELSIUS and userScale == "C"):
hw3_371.py(10):     elif (userTemp <= FREEZE_KELVIN and userScale == "K"):
hw3_371.py(12):     elif (userTemp > FREEZE_CELSIUS and userTemp < BOILING_CELSIUS and userScale == "C"):
hw3_371.py(14):     elif (userTemp > FREEZE_KELVIN and userTemp < BOILING_KELVIN and userScale == "K"):
hw3_371.py(16):     elif (userTemp >= BOILING_CELSIUS and userScale == "C"):
hw3_371.py(18):     elif (userTemp >= BOILING_KELVIN and userScale == "K"):
hw3_371.py(19):         print("Water is a gas at this temperature")
Water is a gas at this temperature
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
