 --- modulename: hw3_399, funcname: <module>
hw3_399.py(1): def main():
hw3_399.py(22): main()
 --- modulename: hw3_399, funcname: main
hw3_399.py(2):     temperature = float(input("Please enter the temperature:"))
Please enter the temperature: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_399.py(3):     units = input("Please enter 'C' for Celcius or 'K' for Kelvin:")
Please enter 'C' for Celcius or 'K' for Kelvin: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_399.py(4):     if units == "K":
hw3_399.py(5):         ctemp = temperature - 273.2
hw3_399.py(6):         if ctemp <= 0:
hw3_399.py(8):         elif ctemp > 0 and ctemp < 100:
hw3_399.py(11):             print ("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
