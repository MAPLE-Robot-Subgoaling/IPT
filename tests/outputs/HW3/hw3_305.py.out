 --- modulename: hw3_305, funcname: <module>
hw3_305.py(1): BOIL_PT_K= 373.2
hw3_305.py(2): FREZ_PT_K= 273.2
hw3_305.py(3): BOIL_PT_C= 100
hw3_305.py(4): FREZ_POINT_C= 0
hw3_305.py(5): def main():
hw3_305.py(22): main()
 --- modulename: hw3_305, funcname: main
hw3_305.py(6):     temp= float(input("Please enter the temperature:"))
Please enter the temperature: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_305.py(7):     tempScale= input("Please enter 'C' for Celsius, or 'K' for Kelvin:")
Please enter 'C' for Celsius, or 'K' for Kelvin: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_305.py(8):     if tempScale == "K":
hw3_305.py(9):         if temp >= BOIL_PT_K :
hw3_305.py(10):             print("At this temperature, water is a gas.")
At this temperature, water is a gas.
hw3_305.py(11):         if temp < BOIL_PT_K and temp > FREZ_PT_K :
hw3_305.py(13):         if temp <= FREZ_PT_K :
hw3_305.py(15):     if tempScale == "C":
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
