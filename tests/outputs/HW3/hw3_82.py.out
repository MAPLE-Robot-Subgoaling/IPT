 --- modulename: hw3_82, funcname: <module>
hw3_82.py(1): CELSIUS_FREEZING = 0
hw3_82.py(2): CELSIUS_BOILING = 100
hw3_82.py(3): KELVIN_FREEZING = 273
hw3_82.py(4): KELVIN_BOILING = 373
hw3_82.py(5): def main():
hw3_82.py(22): main()
 --- modulename: hw3_82, funcname: main
hw3_82.py(6):     temp = int(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_82.py(7):     scale = str(input("Please enter 'C' for Celsius, or 'K' for Kelvin: "))
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_82.py(8):     if scale == "C":
hw3_82.py(15):     if scale == "K":
hw3_82.py(16):         if temp <= KELVIN_FREEZING:
hw3_82.py(18):         elif temp >= KELVIN_BOILING:
hw3_82.py(19):             print("At this temperature, water is a gas. ")
At this temperature, water is a gas. 
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
