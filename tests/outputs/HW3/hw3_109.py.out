 --- modulename: hw3_109, funcname: <module>
hw3_109.py(1): def main():
hw3_109.py(22): main()
 --- modulename: hw3_109, funcname: main
hw3_109.py(2):      temp = float(input("Pleas enter the temperature:"))
Pleas enter the temperature: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_109.py(3):      scale = input("Please enter 'C' for Celsius, or 'K' for Kelvin:")
Please enter 'C' for Celsius, or 'K' for Kelvin: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_109.py(4):      if scale == "C":
hw3_109.py(5):        if temp <= 0:
hw3_109.py(7):        elif temp >= 100:
hw3_109.py(9):        elif temp > 0 and tem < 100:
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
