 --- modulename: hw3_315, funcname: <module>
hw3_315.py(1): def main():
hw3_315.py(28): main()
 --- modulename: hw3_315, funcname: main
hw3_315.py(2):     temperature = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_315.py(3):     scaleType = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_315.py(4):     C_FROZEN = 0
hw3_315.py(5):     C_BOIL = 100
hw3_315.py(6):     K_FROZEN = 273
hw3_315.py(7):     K_BOIL = 373
hw3_315.py(8):     if  scaleType == 'C':
hw3_315.py(19):         if temperature <= K_BOIL:
hw3_315.py(22):         elif (temperature > K_FROZEN) and (temperature < K_BOIL):
hw3_315.py(26):             print("At this temperature, water is a gas.")
At this temperature, water is a gas.
hw3_315.py(27):             print(" ")
 
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
