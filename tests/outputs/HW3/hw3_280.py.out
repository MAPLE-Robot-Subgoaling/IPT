 --- modulename: hw3_280, funcname: <module>
hw3_280.py(1): def main():
hw3_280.py(22): main()
 --- modulename: hw3_280, funcname: main
hw3_280.py(2):     CFZ = 0
hw3_280.py(3):     CBL = 100
hw3_280.py(4):     KFZ = 273.15
hw3_280.py(5):     KBL = 373.15
hw3_280.py(6):     temp = float(input("Please enter the temperature"))
Please enter the temperature --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_280.py(7):     ck = input("Please enter 'c' for celcius or 'k' for kelvin")
Please enter 'c' for celcius or 'k' for kelvin --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_280.py(8):     if ( ck == "c" ):
hw3_280.py(15):     elif ( ck == "k" ):
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
