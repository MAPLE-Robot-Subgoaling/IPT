 --- modulename: hw3_29, funcname: <module>
hw3_29.py(1): def main():
hw3_29.py(23): main()
 --- modulename: hw3_29, funcname: main
hw3_29.py(2):     BOILING_PT_C = 100
hw3_29.py(3):     FREEZE_PT_C = 0
hw3_29.py(4):     K_CONVERS = 273.2
hw3_29.py(5):     temp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_29.py(6):     scale = input("Please enter 'C' for Celcius, or 'K' for Kelvin: ")
Please enter 'C' for Celcius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_29.py(7):     if scale == "C":
hw3_29.py(15):     if scale == "K":
hw3_29.py(16):         temp = temp + K_CONVERS
hw3_29.py(17):         if temp >= BOILING_PT_C:
hw3_29.py(18):             print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
