 --- modulename: hw3_318, funcname: <module>
hw3_318.py(1): def main():
hw3_318.py(20): main()
 --- modulename: hw3_318, funcname: main
hw3_318.py(2): 	temperature = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_318.py(3): 	scale = input("Please enter 'C' for Celsius or 'K' for Kelvin: ")
Please enter 'C' for Celsius or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_318.py(4): 	state = "NONE"
hw3_318.py(5): 	if (scale == "K"):
hw3_318.py(6): 		if (temperature >= 373.15):
hw3_318.py(7): 			state = "gas"
hw3_318.py(19): 	print("At this temperature, water is a {}.".format(state))
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
