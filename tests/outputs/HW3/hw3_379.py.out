 --- modulename: hw3_379, funcname: <module>
hw3_379.py(1): def main():
hw3_379.py(22): main()
 --- modulename: hw3_379, funcname: main
hw3_379.py(2):     LIQUID_K = 330.2
hw3_379.py(3):     GAS_K = 370.20
hw3_379.py(4):     GAS_C = 100
hw3_379.py(5):     LIQUID_C = 60
hw3_379.py(6):     numTemp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_379.py(7):     scale = input("Please enter 'K' for Kelvin, or 'C' for Celsius: ")
Please enter 'K' for Kelvin, or 'C' for Celsius:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_379.py(8):     if scale == 'K':
hw3_379.py(15):     elif scale == 'C':
hw3_379.py(16):         if unitTemp > GAS_C:
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
