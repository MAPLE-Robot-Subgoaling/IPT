 --- modulename: hw3_381, funcname: <module>
hw3_381.py(1): def main():
hw3_381.py(18): main()
 --- modulename: hw3_381, funcname: main
hw3_381.py(2):     temp= float(input("Enter the value of temperature:"))
Enter the value of temperature: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_381.py(3):     scale = input("Enter C for celsius and K for Kelvin:")
Enter C for celsius and K for Kelvin: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_381.py(4):     if(scale =='C'):
hw3_381.py(12):          if(temp<=273):
hw3_381.py(14):          elif(temp>273 and temp<373):
hw3_381.py(17):            print("It is gas")
It is gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
