 --- modulename: hw3_101, funcname: <module>
hw3_101.py(1): def main():
hw3_101.py(16): main()
 --- modulename: hw3_101, funcname: main
hw3_101.py(2):     waterTemp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_101.py(3):     tempState = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_101.py(4):     if tempState == "C" and waterTemp < 0: 
hw3_101.py(6):     if waterTemp >= 0 and waterTemp <= 100 and tempState == "C":
hw3_101.py(8):     if waterTemp > 100 and tempState == "C":
hw3_101.py(10):     if tempState == "K" and waterTemp < 32:
hw3_101.py(12):     if waterTemp >= 32 and waterTemp <= 212 and tempState == "K":
hw3_101.py(14):     if waterTemp > 212 and tempState == "K":
hw3_101.py(15):         print ("At this temperature, water is a gas")
At this temperature, water is a gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
