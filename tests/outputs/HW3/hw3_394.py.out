 --- modulename: hw3_394, funcname: <module>
hw3_394.py(1): def main():
hw3_394.py(20): main()
 --- modulename: hw3_394, funcname: main
hw3_394.py(2):     K_GAS = 373.15
hw3_394.py(3):     K_ICE = 273.15
hw3_394.py(4):     C_GAS = 100
hw3_394.py(5):     C_ICE = 0
hw3_394.py(6):     temp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_394.py(7):     tempType = input("Please enter 'C' for Celsius or 'K' for Kelvin: ")
Please enter 'C' for Celsius or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_394.py(8):     if tempType == 'C' and temp >= C_GAS:
hw3_394.py(10):     elif tempType == 'C' and temp <= C_ICE:
hw3_394.py(12):     elif tempType == 'C':
hw3_394.py(14):     elif tempType == 'K' and temp >= K_GAS:
hw3_394.py(15):         print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
