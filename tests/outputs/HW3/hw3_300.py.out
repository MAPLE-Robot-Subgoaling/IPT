 --- modulename: hw3_300, funcname: <module>
hw3_300.py(1): def main():
hw3_300.py(16): main()
 --- modulename: hw3_300, funcname: main
hw3_300.py(2):     degreesNum = float(input("please enter the temperature of the water: "))
please enter the temperature of the water:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_300.py(3):     degreesType = str(input("what type of measurement is that temperature in? "))
what type of measurement is that temperature in?  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_300.py(4):     if degreesType == "K" and degreesNum >= 373.0:
hw3_300.py(5):         print("at this temperature, water is a gas")
at this temperature, water is a gas
hw3_300.py(6):     if degreesType == "K" and degreesNum <= 273.0:
hw3_300.py(8):     if degreesType == "K" and degreesNum < 373.0 and degreesNum > 273.0:
hw3_300.py(10):     if degreesType == "C" and degreesNum >= 100.0:
hw3_300.py(12):     if degreesType == "C" and degreesNum <= 0.0:
hw3_300.py(14):     if degreesType == "C" and degreesNum < 100.0 and degreesNum > 0.0:
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
