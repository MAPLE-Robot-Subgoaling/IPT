 --- modulename: hw3_69, funcname: <module>
hw3_69.py(1): def main():
hw3_69.py(18): main()
 --- modulename: hw3_69, funcname: main
hw3_69.py(2):     FREEZE = 0
hw3_69.py(3):     BOIL = 100
hw3_69.py(4):     CONVERT = 273.15
hw3_69.py(5):     temp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_69.py(6):     print("Please enter the units...")
Please enter the units...
hw3_69.py(7):     units = str(input("Either 'K' for Kelvin or 'C' for Celcius: "))
Either 'K' for Kelvin or 'C' for Celcius:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_69.py(8):     if units == 'K' :
hw3_69.py(9):         tempCel = temp - CONVERT
hw3_69.py(12):     if tempCel <= FREEZE :
hw3_69.py(14):     elif tempCel < BOIL :
hw3_69.py(17):         print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
