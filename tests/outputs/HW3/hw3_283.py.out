 --- modulename: hw3_283, funcname: <module>
hw3_283.py(1): tempOfWater = float(input("please enter the temperature: "))
please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_283.py(2): tempType = input("please enter 'C' for celcius, or 'K' for Kelvin: ")
please enter 'C' for celcius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_283.py(3): if tempType == "C":
hw3_283.py(10): elif tempType == "K":
hw3_283.py(11):     newTempOfWater = tempOfWater - 273.15
hw3_283.py(12):     if newTempOfWater <= 0:
hw3_283.py(14):     elif newTempOfWater > 0 and newTempOfWater <= 99:
hw3_283.py(16):     elif newTempOfWater >= 100:
hw3_283.py(17):         print("at this temperature, water is a gas. ")
at this temperature, water is a gas. 
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
