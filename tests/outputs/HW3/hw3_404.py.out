 --- modulename: hw3_404, funcname: <module>
hw3_404.py(1): def main():
hw3_404.py(22): main()
 --- modulename: hw3_404, funcname: main
hw3_404.py(2): 	FREEZING_POINT_K = 273.15
hw3_404.py(3): 	BOILING_POINT_K = 373.15
hw3_404.py(4): 	FREEZING_POINT_C = 0
hw3_404.py(5): 	BOILING_POINT_C = 100
hw3_404.py(6): 	degrees = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_404.py(7): 	tempScale = input("Please enter 'C' for Celsius, or 'K' for Kelvin ")
Please enter 'C' for Celsius, or 'K' for Kelvin  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_404.py(8): 	if tempScale == 'C':
hw3_404.py(16): 		if degrees <= FREEZING_POINT_K:
hw3_404.py(18): 		elif degrees <BOILING_POINT_K:
hw3_404.py(21): 			print("At this temperature, water is a gas")
At this temperature, water is a gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
