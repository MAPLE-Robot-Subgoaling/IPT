 --- modulename: hw3_372, funcname: <module>
hw3_372.py(1): def main():
hw3_372.py(19): main()
 --- modulename: hw3_372, funcname: main
hw3_372.py(2):     temp=float(input("Please enter the temperature. "))
Please enter the temperature.  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_372.py(3):     temp_type=str(input("Please enter 'C' for Celsius, or 'K' for Kelvin: "))
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_372.py(4):     if temp_type=='C':
hw3_372.py(11):     if temp_type=='K':
hw3_372.py(12):         temp=temp-273.15
hw3_372.py(13):         if temp<0.0:
hw3_372.py(15):         elif temp>0.0 and temp<100.0:
hw3_372.py(17):         elif temp>100.0:
hw3_372.py(18):             print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
