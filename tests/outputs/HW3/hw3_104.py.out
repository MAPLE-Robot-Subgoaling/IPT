 --- modulename: hw3_104, funcname: <module>
hw3_104.py(1): def main():
hw3_104.py(24): main()
 --- modulename: hw3_104, funcname: main
hw3_104.py(2):     print("Hello. This program will determine the physical state of water")
Hello. This program will determine the physical state of water
hw3_104.py(3):     print("based on the input temperature from the user.")
based on the input temperature from the user.
hw3_104.py(4):     FP_CELSIUS = 0
hw3_104.py(5):     BP_CELSIUS = 100
hw3_104.py(6):     FP_KELVIN = 273.15
hw3_104.py(7):     BP_KELVIN = 373.15
hw3_104.py(8):     temp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_104.py(9):     unit = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_104.py(10):     if unit == "C":
hw3_104.py(17):     elif unit == "K":
hw3_104.py(18):         if temp <= FP_KELVIN:
hw3_104.py(20):         elif FP_KELVIN < temp <= BP_KELVIN:
hw3_104.py(23):             print("At this temperature, water is a (gaseous) gas.")
At this temperature, water is a (gaseous) gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
