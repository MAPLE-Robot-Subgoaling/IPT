 --- modulename: hw3_202, funcname: <module>
hw3_202.py(1): def main():
hw3_202.py(16): main()
 --- modulename: hw3_202, funcname: main
hw3_202.py(2):     temp = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_202.py(3):     measure = input("Please enter 'C' for Celcius, or 'K' for Kelvin: ")
Please enter 'C' for Celcius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_202.py(4):     if (100 > temp > 0 and measure == 'C'):
hw3_202.py(6):     elif (212 > temp > 32 and measure == 'K'):
hw3_202.py(8):     elif (temp <= 0 and measure == 'C'):
hw3_202.py(10):     elif (temp <= 32 and measure == 'K'):
hw3_202.py(12):     elif (temp >= 100 and measure == 'C'):
hw3_202.py(14):     elif (temp >= 212 and measure == 'K'):
hw3_202.py(15):         print("At this temperature, water is gas")
At this temperature, water is gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
