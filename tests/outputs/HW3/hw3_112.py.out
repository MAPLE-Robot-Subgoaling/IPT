 --- modulename: hw3_112, funcname: <module>
hw3_112.py(1): def main():
hw3_112.py(23): main()
 --- modulename: hw3_112, funcname: main
hw3_112.py(2):     FREEZE_TEMP = 0;
hw3_112.py(3):     GAS_TEMP = 100;
hw3_112.py(4):     KEL_MOD = 273.15;
hw3_112.py(5):     num = float(input("Please enter the temperature: "))
Please enter the temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_112.py(6):     tempType = str(input("Please enter 'C' for Celsius, or 'K' for Kelvin:"))
Please enter 'C' for Celsius, or 'K' for Kelvin: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_112.py(7):     if (tempType == "C"):
hw3_112.py(14):     elif (tempType == "K"):
hw3_112.py(15):         if (num <= FREEZE_TEMP + KEL_MOD):
hw3_112.py(17):         elif (num >= GAS_TEMP + KEL_MOD):
hw3_112.py(18):             print("At this temperature, water is a gas.")
At this temperature, water is a gas.
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
