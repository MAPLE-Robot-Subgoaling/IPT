 --- modulename: hw3_56, funcname: <module>
hw3_56.py(1): def main():
hw3_56.py(18): main()
 --- modulename: hw3_56, funcname: main
hw3_56.py(2):     temp = float(input("Please enter a temperature: "))
Please enter a temperature:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_56.py(3):     scale = ""
hw3_56.py(4):     while (scale != "C") and (scale != "K"):
hw3_56.py(5):         scale = input("Please enter 'C' for Celsius, or 'K' for Kelvin: ")
Please enter 'C' for Celsius, or 'K' for Kelvin:  --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_56.py(4):     while (scale != "C") and (scale != "K"):
hw3_56.py(6):     if scale == "C":
hw3_56.py(9):     elif scale == "K":
hw3_56.py(10):         FREEZING_POINT = 273.15
hw3_56.py(11):         BOILING_POINT = 373.15
hw3_56.py(12):     if temp <= FREEZING_POINT:
hw3_56.py(14):     elif (temp > FREEZING_POINT) and (temp < BOILING_POINT):
hw3_56.py(16):     elif temp >= BOILING_POINT:
hw3_56.py(17):         print("At this temperature, water is a gas")
At this temperature, water is a gas
hw3_56.py(19): print()

 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
