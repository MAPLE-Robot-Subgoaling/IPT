 --- modulename: hw3_275, funcname: <module>
hw3_275.py(1): def main():
hw3_275.py(9): main()
 --- modulename: hw3_275, funcname: main
hw3_275.py(2):     tempData = float(input("Please enter the temperature:"))
Please enter the temperature: --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_275.py(3):     tempUnit = str(input("Please enter 'C' for Celsius, or 'K' for Kelvin."))
Please enter 'C' for Celsius, or 'K' for Kelvin. --- modulename: codecs, funcname: getstate
codecs.py(332):         return (self.buffer, 0)
 --- modulename: codecs, funcname: decode
codecs.py(320):         data = self.buffer + input
codecs.py(321):         (result, consumed) = self._buffer_decode(data, self.errors, final)
codecs.py(323):         self.buffer = data[consumed:]
codecs.py(324):         return result
hw3_275.py(4):     if (tempUnit == "C" and tempData < 0)or(tempUnit == "K" and tempData < 273):       print("At this temperature, water is a (frozen)solid.")
hw3_275.py(5):     elif (tempUnit == "C" and tempData > 0 and tempData < 100) or(tempUnit == "K" and tempData > 273 and tempData < 373):
hw3_275.py(8):         print("At this temperature, water is a gas")
At this temperature, water is a gas
 --- modulename: trace, funcname: _unsettrace
trace.py(77):         sys.settrace(None)
